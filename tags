!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A01	rqalpha/model/instrument.py	/^    A01 = IndustryCodeItem("A01", "农业")$/;"	v	class:IndustryCode
A02	rqalpha/model/instrument.py	/^    A02 = IndustryCodeItem("A02", "林业")$/;"	v	class:IndustryCode
A03	rqalpha/model/instrument.py	/^    A03 = IndustryCodeItem("A03", "畜牧业")$/;"	v	class:IndustryCode
A04	rqalpha/model/instrument.py	/^    A04 = IndustryCodeItem("A04", "渔业")$/;"	v	class:IndustryCode
A05	rqalpha/model/instrument.py	/^    A05 = IndustryCodeItem("A05", "农、林、牧、渔服务业")$/;"	v	class:IndustryCode
ACCOUNT_FIELDS_MAP	rqalpha/mod/rqalpha_mod_sys_analyser/mod.py	/^    ACCOUNT_FIELDS_MAP = {$/;"	v	class:AnalyserMod
ACCOUNT_TYPE	rqalpha/api/api_stock.py	/^from ..const import ACCOUNT_TYPE$/;"	i
ACCOUNT_TYPE	rqalpha/api/helper.py	/^from ..const import ACCOUNT_TYPE$/;"	i
ACCOUNT_TYPE	rqalpha/const.py	/^class ACCOUNT_TYPE(CustomEnum):$/;"	c
ACCOUNT_TYPE	rqalpha/core/bar_dict_price_board.py	/^from ..const import ACCOUNT_TYPE$/;"	i
ACCOUNT_TYPE	rqalpha/core/strategy_context.py	/^from ..const import ACCOUNT_TYPE$/;"	i
ACCOUNT_TYPE	rqalpha/main.py	/^    from .const import ACCOUNT_TYPE$/;"	i
ACCOUNT_TYPE	rqalpha/mod/rqalpha_mod_sys_analyser/mod.py	/^from rqalpha.const import EXIT_CODE, ACCOUNT_TYPE$/;"	i
ACCOUNT_TYPE	rqalpha/mod/rqalpha_mod_sys_risk/cash_validator.py	/^from rqalpha.const import SIDE, POSITION_EFFECT, ACCOUNT_TYPE$/;"	i
ACCOUNT_TYPE	rqalpha/mod/rqalpha_mod_sys_risk/position_validator.py	/^from rqalpha.const import SIDE, POSITION_EFFECT, ACCOUNT_TYPE$/;"	i
ACCOUNT_TYPE	rqalpha/mod/rqalpha_mod_sys_simulation/decider/__init__.py	/^from rqalpha.const import ACCOUNT_TYPE$/;"	i
ACCOUNT_TYPE	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_event_source.py	/^from rqalpha.const import ACCOUNT_TYPE$/;"	i
ACCOUNT_TYPE	rqalpha/mod/rqalpha_mod_sys_simulation/utils.py	/^from rqalpha.const import ACCOUNT_TYPE$/;"	i
ACCOUNT_TYPE	rqalpha/model/account/future_account.py	/^from ...const import ACCOUNT_TYPE, POSITION_EFFECT$/;"	i
ACCOUNT_TYPE	rqalpha/model/account/stock_account.py	/^from ...const import SIDE, ACCOUNT_TYPE$/;"	i
ACCOUNT_TYPE	rqalpha/model/portfolio.py	/^from ..const import DAYS_CNT, ACCOUNT_TYPE$/;"	i
ACCOUNT_TYPE	rqalpha/model/position/future_position.py	/^from ...const import SIDE, POSITION_EFFECT, ACCOUNT_TYPE$/;"	i
ACCOUNT_TYPE	rqalpha/model/position/stock_position.py	/^from ...const import ACCOUNT_TYPE, SIDE$/;"	i
ACCOUNT_TYPE	rqalpha/utils/__init__.py	/^from ..const import EXC_TYPE, INSTRUMENT_TYPE, ACCOUNT_TYPE, UNDERLYING_SYMBOL_PATTERN, NIGHT_TRADING_NS$/;"	i
ACCOUNT_TYPE	rqalpha/utils/config.py	/^from ..const import RUN_TYPE, PERSIST_MODE, ACCOUNT_TYPE$/;"	i
ACTIVE	rqalpha/const.py	/^    ACTIVE = "ACTIVE"$/;"	v	class:ORDER_STATUS
AFTER_TRADING	rqalpha/const.py	/^    AFTER_TRADING = "[日内交易后]"$/;"	v	class:EXECUTION_PHASE
AFTER_TRADING	rqalpha/events.py	/^    AFTER_TRADING = 'after_trading'$/;"	v	class:EVENT
ALLSPHINXOPTS	docs/Makefile	/^ALLSPHINXOPTS   = -d $(BUILDDIR)\/doctrees $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) source$/;"	m
ALLSPHINXOPTS	docs/make.bat	/^	set ALLSPHINXOPTS=-D latex_paper_size=%PAPER% %ALLSPHINXOPTS%$/;"	v
ALLSPHINXOPTS	docs/make.bat	/^set ALLSPHINXOPTS=-d %BUILDDIR%\/doctrees %SPHINXOPTS% source$/;"	v
ANNUALIZATION_FACTORS	rqalpha/utils/risk.py	/^ANNUALIZATION_FACTORS = {$/;"	v
APPROX_BDAYS_PER_MONTH	rqalpha/utils/risk.py	/^APPROX_BDAYS_PER_MONTH = 21$/;"	v
APPROX_BDAYS_PER_YEAR	rqalpha/utils/risk.py	/^APPROX_BDAYS_PER_YEAR = 244$/;"	v
ARBITRAGE	rqalpha/const.py	/^    ARBITRAGE = "arbitrage"$/;"	v	class:HEDGE_TYPE
AbstractBroker	rqalpha/interface.py	/^class AbstractBroker(with_metaclass(abc.ABCMeta)):$/;"	c
AbstractBroker	rqalpha/mod/rqalpha_mod_sys_simulation/signal_broker.py	/^from rqalpha.interface import AbstractBroker$/;"	i
AbstractBroker	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_broker.py	/^from rqalpha.interface import AbstractBroker, Persistable$/;"	i
AbstractDataSource	rqalpha/data/base_data_source.py	/^from ..interface import AbstractDataSource$/;"	i
AbstractDataSource	rqalpha/interface.py	/^class AbstractDataSource(object):$/;"	c
AbstractEventSource	rqalpha/interface.py	/^class AbstractEventSource(with_metaclass(abc.ABCMeta)):$/;"	c
AbstractEventSource	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_event_source.py	/^from rqalpha.interface import AbstractEventSource$/;"	i
AbstractEventSource	rqalpha/mod/rqalpha_mod_sys_stock_realtime/event_source.py	/^from rqalpha.interface import AbstractEventSource$/;"	i
AbstractFrontendValidator	rqalpha/interface.py	/^class AbstractFrontendValidator(with_metaclass(abc.ABCMeta)):$/;"	c
AbstractFrontendValidator	rqalpha/mod/rqalpha_mod_sys_risk/cash_validator.py	/^from rqalpha.interface import AbstractFrontendValidator$/;"	i
AbstractFrontendValidator	rqalpha/mod/rqalpha_mod_sys_risk/is_trading_validator.py	/^from rqalpha.interface import AbstractFrontendValidator$/;"	i
AbstractFrontendValidator	rqalpha/mod/rqalpha_mod_sys_risk/position_validator.py	/^from rqalpha.interface import AbstractFrontendValidator$/;"	i
AbstractFrontendValidator	rqalpha/mod/rqalpha_mod_sys_risk/price_validator.py	/^from rqalpha.interface import AbstractFrontendValidator$/;"	i
AbstractMod	rqalpha/interface.py	/^class AbstractMod(with_metaclass(abc.ABCMeta)):$/;"	c
AbstractMod	rqalpha/mod/rqalpha_mod_sys_analyser/mod.py	/^from rqalpha.interface import AbstractMod$/;"	i
AbstractMod	rqalpha/mod/rqalpha_mod_sys_funcat/mod.py	/^from rqalpha.interface import AbstractMod$/;"	i
AbstractMod	rqalpha/mod/rqalpha_mod_sys_progress/mod.py	/^from rqalpha.interface import AbstractMod$/;"	i
AbstractMod	rqalpha/mod/rqalpha_mod_sys_risk/mod.py	/^from rqalpha.interface import AbstractMod$/;"	i
AbstractMod	rqalpha/mod/rqalpha_mod_sys_simulation/mod.py	/^from rqalpha.interface import AbstractMod$/;"	i
AbstractMod	rqalpha/mod/rqalpha_mod_sys_stock_realtime/mod.py	/^from rqalpha.interface import AbstractMod$/;"	i
AbstractPersistProvider	rqalpha/interface.py	/^class AbstractPersistProvider(with_metaclass(abc.ABCMeta)):$/;"	c
AbstractPersistProvider	rqalpha/utils/disk_persist_provider.py	/^from ..interface import AbstractPersistProvider$/;"	i
AbstractPriceBoard	rqalpha/core/bar_dict_price_board.py	/^from ..interface import AbstractPriceBoard$/;"	i
AbstractPriceBoard	rqalpha/interface.py	/^class AbstractPriceBoard(with_metaclass(abc.ABCMeta)):$/;"	c
AbstractStrategyLoader	rqalpha/core/strategy_loader.py	/^from ..interface import AbstractStrategyLoader$/;"	i
AbstractStrategyLoader	rqalpha/interface.py	/^class AbstractStrategyLoader(with_metaclass(abc.ABCMeta)):$/;"	c
AnalyserMod	rqalpha/mod/rqalpha_mod_sys_analyser/__init__.py	/^    from .mod import AnalyserMod$/;"	i
AnalyserMod	rqalpha/mod/rqalpha_mod_sys_analyser/mod.py	/^class AnalyserMod(AbstractMod):$/;"	c
ArgumentChecker	rqalpha/utils/arg_checker.py	/^class ArgumentChecker(object):$/;"	c
B06	rqalpha/model/instrument.py	/^    B06 = IndustryCodeItem("B06", "煤炭开采和洗选业")$/;"	v	class:IndustryCode
B07	rqalpha/model/instrument.py	/^    B07 = IndustryCodeItem("B07", "石油和天然气开采业")$/;"	v	class:IndustryCode
B08	rqalpha/model/instrument.py	/^    B08 = IndustryCodeItem("B08", "黑色金属矿采选业")$/;"	v	class:IndustryCode
B09	rqalpha/model/instrument.py	/^    B09 = IndustryCodeItem("B09", "有色金属矿采选业")$/;"	v	class:IndustryCode
B10	rqalpha/model/instrument.py	/^    B10 = IndustryCodeItem("B10", "非金属矿采选业")$/;"	v	class:IndustryCode
B11	rqalpha/model/instrument.py	/^    B11 = IndustryCodeItem("B11", "开采辅助活动")$/;"	v	class:IndustryCode
B12	rqalpha/model/instrument.py	/^    B12 = IndustryCodeItem("B12", "其他采矿业")$/;"	v	class:IndustryCode
BACKTEST	rqalpha/const.py	/^    BACKTEST = "BACKTEST"$/;"	v	class:RUN_TYPE
BAR	rqalpha/events.py	/^    BAR = 'bar'$/;"	v	class:EVENT
BAR_STATUS	rqalpha/const.py	/^class BAR_STATUS(CustomEnum):$/;"	c
BAR_STATUS	rqalpha/mod/rqalpha_mod_sys_simulation/matcher.py	/^from rqalpha.const import ORDER_TYPE, SIDE, BAR_STATUS, MATCHING_TYPE$/;"	i
BAR_STATUS	rqalpha/mod/rqalpha_mod_sys_simulation/signal_broker.py	/^from rqalpha.const import BAR_STATUS, SIDE$/;"	i
BAR_STATUS	rqalpha/model/bar.py	/^from ..const import EXECUTION_PHASE, BAR_STATUS$/;"	i
BEFORE_TRADING	rqalpha/const.py	/^    BEFORE_TRADING = "[日内交易前]"$/;"	v	class:EXECUTION_PHASE
BEFORE_TRADING	rqalpha/events.py	/^    BEFORE_TRADING = 'before_trading'$/;"	v	class:EVENT
BENCHMARK	rqalpha/const.py	/^    BENCHMARK = 1$/;"	v	class:ACCOUNT_TYPE
BUILDDIR	docs/Makefile	/^BUILDDIR      = build$/;"	m
BUILDDIR	docs/make.bat	/^set BUILDDIR=build$/;"	v
BUY	rqalpha/const.py	/^    BUY = "BUY"$/;"	v	class:SIDE
BY_MONEY	rqalpha/const.py	/^    BY_MONEY = "BY_MONEY"$/;"	v	class:COMMISSION_TYPE
BY_MONEY	rqalpha/const.py	/^    BY_MONEY = "BY_MONEY"$/;"	v	class:MARGIN_TYPE
BY_VOLUME	rqalpha/const.py	/^    BY_VOLUME = "BY_VOLUME"$/;"	v	class:COMMISSION_TYPE
BY_VOLUME	rqalpha/const.py	/^    BY_VOLUME = "BY_VOLUME"$/;"	v	class:MARGIN_TYPE
BarDictPriceBoard	rqalpha/core/bar_dict_price_board.py	/^class BarDictPriceBoard(AbstractPriceBoard):$/;"	c
BarDictPriceBoard	rqalpha/main.py	/^            from .core.bar_dict_price_board import BarDictPriceBoard$/;"	i
BarMap	rqalpha/main.py	/^from .model.bar import BarMap$/;"	i
BarMap	rqalpha/model/bar.py	/^class BarMap(object):$/;"	c
BarObject	rqalpha/data/data_proxy.py	/^from ..model.bar import BarObject$/;"	i
BarObject	rqalpha/model/bar.py	/^class BarObject(object):$/;"	c
BaseAccount	rqalpha/model/account/base_account.py	/^class BaseAccount(object):$/;"	c
BaseAccount	rqalpha/model/account/future_account.py	/^from .base_account import BaseAccount$/;"	i
BaseAccount	rqalpha/model/account/stock_account.py	/^from .base_account import BaseAccount$/;"	i
BaseCommission	rqalpha/mod/rqalpha_mod_sys_simulation/decider/commission.py	/^class BaseCommission(with_metaclass(abc.ABCMeta)):$/;"	c
BaseDataSource	rqalpha/data/base_data_source.py	/^class BaseDataSource(AbstractDataSource):$/;"	c
BaseDataSource	rqalpha/main.py	/^from .data.base_data_source import BaseDataSource$/;"	i
BaseDataSource	rqalpha/mod/rqalpha_mod_sys_stock_realtime/data_source.py	/^from rqalpha.data.base_data_source import BaseDataSource$/;"	i
BasePosition	rqalpha/model/position/__init__.py	/^from .base_position import BasePosition$/;"	i
BasePosition	rqalpha/model/position/base_position.py	/^class BasePosition(object):$/;"	c
BasePosition	rqalpha/model/position/future_position.py	/^from .base_position import BasePosition$/;"	i
BasePosition	rqalpha/model/position/stock_position.py	/^from .base_position import BasePosition$/;"	i
BaseSlippage	rqalpha/mod/rqalpha_mod_sys_simulation/decider/slippage.py	/^class BaseSlippage(with_metaclass(abc.ABCMeta)):$/;"	c
BaseTax	rqalpha/mod/rqalpha_mod_sys_simulation/decider/tax.py	/^class BaseTax(with_metaclass(abc.ABCMeta)):$/;"	c
BenchmarkAccount	rqalpha/main.py	/^    from .model.account import BenchmarkAccount$/;"	i
BenchmarkAccount	rqalpha/model/account/__init__.py	/^from .benchmark_account import BenchmarkAccount$/;"	i
BenchmarkAccount	rqalpha/model/account/benchmark_account.py	/^class BenchmarkAccount(StockAccount):$/;"	c
C13	rqalpha/model/instrument.py	/^    C13 = IndustryCodeItem("C13", "农副食品加工业")$/;"	v	class:IndustryCode
C14	rqalpha/model/instrument.py	/^    C14 = IndustryCodeItem("C14", "食品制造业")$/;"	v	class:IndustryCode
C15	rqalpha/model/instrument.py	/^    C15 = IndustryCodeItem("C15", "酒、饮料和精制茶制造业")$/;"	v	class:IndustryCode
C16	rqalpha/model/instrument.py	/^    C16 = IndustryCodeItem("C16", "烟草制品业")$/;"	v	class:IndustryCode
C17	rqalpha/model/instrument.py	/^    C17 = IndustryCodeItem("C17", "纺织业")$/;"	v	class:IndustryCode
C18	rqalpha/model/instrument.py	/^    C18 = IndustryCodeItem("C18", "纺织服装、服饰业")$/;"	v	class:IndustryCode
C19	rqalpha/model/instrument.py	/^    C19 = IndustryCodeItem("C19", "皮革、毛皮、羽毛及其制品和制鞋业")$/;"	v	class:IndustryCode
C20	rqalpha/model/instrument.py	/^    C20 = IndustryCodeItem("C20", "木材加工及木、竹、藤、棕、草制品业")$/;"	v	class:IndustryCode
C21	rqalpha/model/instrument.py	/^    C21 = IndustryCodeItem("C21", "家具制造业")$/;"	v	class:IndustryCode
C22	rqalpha/model/instrument.py	/^    C22 = IndustryCodeItem("C22", "造纸及纸制品业")$/;"	v	class:IndustryCode
C23	rqalpha/model/instrument.py	/^    C23 = IndustryCodeItem("C23", "印刷和记录媒介复制业")$/;"	v	class:IndustryCode
C24	rqalpha/model/instrument.py	/^    C24 = IndustryCodeItem("C24", "文教、工美、体育和娱乐用品制造业")$/;"	v	class:IndustryCode
C25	rqalpha/model/instrument.py	/^    C25 = IndustryCodeItem("C25", "石油加工、炼焦及核燃料加工业")$/;"	v	class:IndustryCode
C26	rqalpha/model/instrument.py	/^    C26 = IndustryCodeItem("C26", "化学原料及化学制品制造业")$/;"	v	class:IndustryCode
C27	rqalpha/model/instrument.py	/^    C27 = IndustryCodeItem("C27", "医药制造业")$/;"	v	class:IndustryCode
C28	rqalpha/model/instrument.py	/^    C28 = IndustryCodeItem("C28", "化学纤维制造业")$/;"	v	class:IndustryCode
C29	rqalpha/model/instrument.py	/^    C29 = IndustryCodeItem("C29", "橡胶和塑料制品业")$/;"	v	class:IndustryCode
C30	rqalpha/model/instrument.py	/^    C30 = IndustryCodeItem("C30", "非金属矿物制品业")$/;"	v	class:IndustryCode
C31	rqalpha/model/instrument.py	/^    C31 = IndustryCodeItem("C31", "黑色金属冶炼及压延加工业")$/;"	v	class:IndustryCode
C32	rqalpha/model/instrument.py	/^    C32 = IndustryCodeItem("C32", "有色金属冶炼和压延加工业")$/;"	v	class:IndustryCode
C33	rqalpha/model/instrument.py	/^    C33 = IndustryCodeItem("C33", "金属制品业")$/;"	v	class:IndustryCode
C34	rqalpha/model/instrument.py	/^    C34 = IndustryCodeItem("C34", "通用设备制造业")$/;"	v	class:IndustryCode
C35	rqalpha/model/instrument.py	/^    C35 = IndustryCodeItem("C35", "专用设备制造业")$/;"	v	class:IndustryCode
C36	rqalpha/model/instrument.py	/^    C36 = IndustryCodeItem("C36", "汽车制造业")$/;"	v	class:IndustryCode
C37	rqalpha/model/instrument.py	/^    C37 = IndustryCodeItem("C37", "铁路、船舶、航空航天和其它运输设备制造业")$/;"	v	class:IndustryCode
C38	rqalpha/model/instrument.py	/^    C38 = IndustryCodeItem("C38", "电气机械及器材制造业")$/;"	v	class:IndustryCode
C39	rqalpha/model/instrument.py	/^    C39 = IndustryCodeItem("C39", "计算机、通信和其他电子设备制造业")$/;"	v	class:IndustryCode
C40	rqalpha/model/instrument.py	/^    C40 = IndustryCodeItem("C40", "仪器仪表制造业")$/;"	v	class:IndustryCode
C41	rqalpha/model/instrument.py	/^    C41 = IndustryCodeItem("C41", "其他制造业")$/;"	v	class:IndustryCode
C42	rqalpha/model/instrument.py	/^    C42 = IndustryCodeItem("C42", "废弃资源综合利用业")$/;"	v	class:IndustryCode
C43	rqalpha/model/instrument.py	/^    C43 = IndustryCodeItem("C43", "金属制品、机械和设备修理业")$/;"	v	class:IndustryCode
CANCELLED	rqalpha/const.py	/^    CANCELLED = "CANCELLED"$/;"	v	class:ORDER_STATUS
CLOSE	rqalpha/const.py	/^    CLOSE = "CLOSE"$/;"	v	class:POSITION_EFFECT
CLOSE_TODAY	rqalpha/const.py	/^    CLOSE_TODAY = "CLOSE_TODAY"$/;"	v	class:POSITION_EFFECT
CN_FUTURE_INFO	rqalpha/data/base_data_source.py	/^from .future_info_cn import CN_FUTURE_INFO$/;"	i
CN_FUTURE_INFO	rqalpha/data/future_info_cn.py	/^CN_FUTURE_INFO = {$/;"	v
COMMISSION_TYPE	rqalpha/const.py	/^class COMMISSION_TYPE(CustomEnum):$/;"	c
COMMISSION_TYPE	rqalpha/data/future_info_cn.py	/^from ..const import COMMISSION_TYPE, MARGIN_TYPE$/;"	i
COMMISSION_TYPE	rqalpha/mod/rqalpha_mod_sys_simulation/decider/commission.py	/^from rqalpha.const import HEDGE_TYPE, COMMISSION_TYPE, POSITION_EFFECT$/;"	i
COMMISSION_TYPE	rqalpha/utils/default_future_info.py	/^from ..const import COMMISSION_TYPE, MARGIN_TYPE$/;"	i
CS	rqalpha/const.py	/^    CS = "CS"$/;"	v	class:INSTRUMENT_TYPE
CURRENT_BAR_CLOSE	rqalpha/const.py	/^    CURRENT_BAR_CLOSE = "CURRENT_BAR_CLOSE"$/;"	v	class:MATCHING_TYPE
CachedProperty	rqalpha/utils/cached_property.py	/^class CachedProperty(object):$/;"	c
CashValidator	rqalpha/mod/rqalpha_mod_sys_risk/cash_validator.py	/^class CashValidator(AbstractFrontendValidator):$/;"	c
CashValidator	rqalpha/mod/rqalpha_mod_sys_risk/mod.py	/^from .cash_validator import CashValidator$/;"	i
ColorizedStderrHandler	rqalpha/utils/logger.py	/^from logbook.more import ColorizedStderrHandler$/;"	i
CommissionDecider	rqalpha/mod/rqalpha_mod_sys_simulation/decider/__init__.py	/^class CommissionDecider(object):$/;"	c
CommissionDecider	rqalpha/mod/rqalpha_mod_sys_simulation/matcher.py	/^from .decider import CommissionDecider, SlippageDecider, TaxDecider$/;"	i
CommissionDecider	rqalpha/mod/rqalpha_mod_sys_simulation/signal_broker.py	/^from .decider import CommissionDecider, SlippageDecider, TaxDecider$/;"	i
ConsumerDiscretionary	rqalpha/model/instrument.py	/^    ConsumerDiscretionary = SectorCodeItem("非必需消费品", "consumer discretionary", 'ConsumerDiscretionary')$/;"	v	class:SectorCode
ConsumerStaples	rqalpha/model/instrument.py	/^    ConsumerStaples = SectorCodeItem("必需消费品", "consumer staples", 'ConsumerStaples')$/;"	v	class:SectorCode
ContextStack	rqalpha/execution_context.py	/^class ContextStack(object):$/;"	c
Converter	rqalpha/data/converter.py	/^class Converter(object):$/;"	c
CoreObjectsPersistProxy	rqalpha/main.py	/^from .utils.persisit_helper import CoreObjectsPersistProxy, PersistHelper$/;"	i
CoreObjectsPersistProxy	rqalpha/utils/persisit_helper.py	/^class CoreObjectsPersistProxy(object):$/;"	c
CustomEnum	rqalpha/const.py	/^class CustomEnum(Enum):$/;"	c
CustomError	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_event_source.py	/^from rqalpha.utils.exception import CustomException, CustomError, patch_user_exc$/;"	i
CustomError	rqalpha/utils/__init__.py	/^from .exception import CustomError, CustomException$/;"	i
CustomError	rqalpha/utils/exception.py	/^class CustomError(object):$/;"	c
CustomError	rqalpha/utils/strategy_loader_help.py	/^from .exception import patch_user_exc, CustomError, CustomException$/;"	i
CustomException	rqalpha/execution_context.py	/^from .utils.exception import CustomException, patch_user_exc$/;"	i
CustomException	rqalpha/main.py	/^from .utils.exception import CustomException, is_user_exc, patch_user_exc$/;"	i
CustomException	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_event_source.py	/^from rqalpha.utils.exception import CustomException, CustomError, patch_user_exc$/;"	i
CustomException	rqalpha/utils/__init__.py	/^from .exception import CustomError, CustomException$/;"	i
CustomException	rqalpha/utils/exception.py	/^class CustomException(Exception):$/;"	c
CustomException	rqalpha/utils/strategy_loader_help.py	/^from .exception import patch_user_exc, CustomError, CustomException$/;"	i
D44	rqalpha/model/instrument.py	/^    D44 = IndustryCodeItem("D44", "电力、热力生产和供应业")$/;"	v	class:IndustryCode
D45	rqalpha/model/instrument.py	/^    D45 = IndustryCodeItem("D45", "燃气生产和供应业")$/;"	v	class:IndustryCode
D46	rqalpha/model/instrument.py	/^    D46 = IndustryCodeItem("D46", "水的生产和供应业")$/;"	v	class:IndustryCode
DAILY	rqalpha/utils/risk.py	/^DAILY = 'daily'$/;"	v
DATETIME_FORMAT	rqalpha/utils/logger.py	/^DATETIME_FORMAT = "%Y-%m-%d %H:%M:%S.00"$/;"	v
DAYS_A_YEAR	rqalpha/const.py	/^    DAYS_A_YEAR = 365$/;"	v	class:DAYS_CNT
DAYS_CNT	rqalpha/const.py	/^class DAYS_CNT(object):$/;"	c
DAYS_CNT	rqalpha/model/portfolio.py	/^from ..const import DAYS_CNT, ACCOUNT_TYPE$/;"	i
DEFAULT_DE_LISTED_DATE	rqalpha/model/instrument.py	/^    DEFAULT_DE_LISTED_DATE = datetime.datetime(2999, 12, 31)$/;"	v	class:Instrument
DEFAULT_LISTED_DATE	rqalpha/model/instrument.py	/^    DEFAULT_LISTED_DATE = datetime.datetime(1990, 1, 1)$/;"	v	class:Instrument
DataBackend	rqalpha/mod/rqalpha_mod_sys_funcat/mod.py	/^        from funcat.data.backend import DataBackend$/;"	i
DataProxy	rqalpha/data/data_proxy.py	/^class DataProxy(InstrumentMixin, TradingDatesMixin):$/;"	c
DataProxy	rqalpha/main.py	/^from .data.data_proxy import DataProxy$/;"	i
DataSource	rqalpha/mod/rqalpha_mod_sys_stock_realtime/data_source.py	/^class DataSource(BaseDataSource):$/;"	c
DataSource	rqalpha/mod/rqalpha_mod_sys_stock_realtime/mod.py	/^from .data_source import DataSource$/;"	i
Date	rqalpha/__main__.py	/^from .utils.click_helper import Date$/;"	i
Date	rqalpha/utils/click_helper.py	/^class Date(click.ParamType):$/;"	c
DateSet	rqalpha/data/base_data_source.py	/^from .date_set import DateSet$/;"	i
DateSet	rqalpha/data/date_set.py	/^class DateSet(object):$/;"	c
DayBarStore	rqalpha/data/base_data_source.py	/^from .daybar_store import DayBarStore$/;"	i
DayBarStore	rqalpha/data/daybar_store.py	/^class DayBarStore(object):$/;"	c
Decimal	rqalpha/api/api_stock.py	/^from decimal import Decimal, getcontext$/;"	i
DiskPersistProvider	rqalpha/mod/rqalpha_mod_sys_stock_realtime/mod.py	/^from rqalpha.utils.disk_persist_provider import DiskPersistProvider$/;"	i
DiskPersistProvider	rqalpha/utils/disk_persist_provider.py	/^class DiskPersistProvider(AbstractPersistProvider):$/;"	c
DividendStore	rqalpha/data/base_data_source.py	/^from .dividend_store import DividendStore$/;"	i
DividendStore	rqalpha/data/dividend_store.py	/^class DividendStore(object):$/;"	c
E47	rqalpha/model/instrument.py	/^    E47 = IndustryCodeItem("E47", "房屋建筑业")$/;"	v	class:IndustryCode
E48	rqalpha/model/instrument.py	/^    E48 = IndustryCodeItem("E48", "土木工程建筑业")$/;"	v	class:IndustryCode
E49	rqalpha/model/instrument.py	/^    E49 = IndustryCodeItem("E49", "建筑安装业")$/;"	v	class:IndustryCode
E50	rqalpha/model/instrument.py	/^    E50 = IndustryCodeItem("E50", "建筑装饰和其他建筑业")$/;"	v	class:IndustryCode
ERROR	rqalpha/const.py	/^    ERROR = "ERROR"$/;"	v	class:BAR_STATUS
ETF	rqalpha/const.py	/^    ETF = "ETF"$/;"	v	class:INSTRUMENT_TYPE
EVENT	rqalpha/core/bar_dict_price_board.py	/^from ..events import EVENT$/;"	i
EVENT	rqalpha/core/executor.py	/^from ..events import EVENT, Event$/;"	i
EVENT	rqalpha/core/strategy.py	/^from ..events import EVENT, Event$/;"	i
EVENT	rqalpha/core/strategy_universe.py	/^from ..events import EVENT, Event$/;"	i
EVENT	rqalpha/events.py	/^class EVENT(Enum):$/;"	c
EVENT	rqalpha/main.py	/^from .events import EVENT, Event$/;"	i
EVENT	rqalpha/mod/rqalpha_mod_sys_analyser/mod.py	/^from rqalpha.events import EVENT$/;"	i
EVENT	rqalpha/mod/rqalpha_mod_sys_funcat/mod.py	/^from rqalpha.events import EVENT$/;"	i
EVENT	rqalpha/mod/rqalpha_mod_sys_progress/mod.py	/^from rqalpha.events import EVENT$/;"	i
EVENT	rqalpha/mod/rqalpha_mod_sys_simulation/matcher.py	/^from rqalpha.events import EVENT, Event$/;"	i
EVENT	rqalpha/mod/rqalpha_mod_sys_simulation/signal_broker.py	/^from rqalpha.events import EVENT, Event$/;"	i
EVENT	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_broker.py	/^from rqalpha.events import EVENT, Event$/;"	i
EVENT	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_event_source.py	/^from rqalpha.events import Event, EVENT$/;"	i
EVENT	rqalpha/mod/rqalpha_mod_sys_stock_realtime/event_source.py	/^from rqalpha.events import Event, EVENT$/;"	i
EVENT	rqalpha/model/account/benchmark_account.py	/^from ...events import EVENT$/;"	i
EVENT	rqalpha/model/account/future_account.py	/^from ...events import EVENT$/;"	i
EVENT	rqalpha/model/account/stock_account.py	/^from ...events import EVENT$/;"	i
EVENT	rqalpha/model/portfolio.py	/^from ..events import EVENT$/;"	i
EVENT	rqalpha/utils/persisit_helper.py	/^from ..events import EVENT$/;"	i
EVENT	rqalpha/utils/scheduler.py	/^from ..events import EVENT$/;"	i
EXC_EXT_NAME	rqalpha/api/api_base.py	/^from ..utils.exception import patch_user_exc, patch_system_exc, EXC_EXT_NAME, RQInvalidArgument$/;"	i
EXC_EXT_NAME	rqalpha/utils/exception.py	/^EXC_EXT_NAME = "ricequant_exc"$/;"	v
EXC_TYPE	rqalpha/api/api_base.py	/^from ..const import EXECUTION_PHASE, EXC_TYPE, ORDER_STATUS, SIDE, POSITION_EFFECT, ORDER_TYPE, MATCHING_TYPE, RUN_TYPE$/;"	i
EXC_TYPE	rqalpha/const.py	/^class EXC_TYPE(CustomEnum):$/;"	c
EXC_TYPE	rqalpha/core/strategy.py	/^from ..const import EXECUTION_PHASE, EXC_TYPE$/;"	i
EXC_TYPE	rqalpha/utils/__init__.py	/^from ..const import EXC_TYPE, INSTRUMENT_TYPE, ACCOUNT_TYPE, UNDERLYING_SYMBOL_PATTERN, NIGHT_TRADING_NS$/;"	i
EXC_TYPE	rqalpha/utils/scheduler.py	/^from ..const import EXC_TYPE, EXECUTION_PHASE$/;"	i
EXECUTION_PHASE	rqalpha/api/api_base.py	/^from ..const import EXECUTION_PHASE, EXC_TYPE, ORDER_STATUS, SIDE, POSITION_EFFECT, ORDER_TYPE, MATCHING_TYPE, RUN_TYPE$/;"	i
EXECUTION_PHASE	rqalpha/api/api_future.py	/^from ..const import EXECUTION_PHASE, SIDE, POSITION_EFFECT, ORDER_TYPE$/;"	i
EXECUTION_PHASE	rqalpha/api/api_stock.py	/^from ..const import EXECUTION_PHASE, SIDE, ORDER_TYPE$/;"	i
EXECUTION_PHASE	rqalpha/const.py	/^class EXECUTION_PHASE(CustomEnum):$/;"	c
EXECUTION_PHASE	rqalpha/core/strategy.py	/^from ..const import EXECUTION_PHASE, EXC_TYPE$/;"	i
EXECUTION_PHASE	rqalpha/model/bar.py	/^from ..const import EXECUTION_PHASE, BAR_STATUS$/;"	i
EXECUTION_PHASE	rqalpha/utils/scheduler.py	/^from ..const import EXC_TYPE, EXECUTION_PHASE$/;"	i
EXIT_CODE	rqalpha/const.py	/^class EXIT_CODE(CustomEnum):$/;"	c
EXIT_CODE	rqalpha/mod/rqalpha_mod_sys_analyser/mod.py	/^from rqalpha.const import EXIT_CODE, ACCOUNT_TYPE$/;"	i
EXIT_INTERNAL_ERROR	rqalpha/const.py	/^    EXIT_INTERNAL_ERROR = "EXIT_INTERNAL_ERROR"$/;"	v	class:EXIT_CODE
EXIT_SUCCESS	rqalpha/const.py	/^    EXIT_SUCCESS = "EXIT_SUCCESS"$/;"	v	class:EXIT_CODE
EXIT_USER_ERROR	rqalpha/const.py	/^    EXIT_USER_ERROR = "EXIT_USER_ERROR"$/;"	v	class:EXIT_CODE
Empty	rqalpha/mod/rqalpha_mod_sys_stock_realtime/event_source.py	/^from six.moves.queue import Queue, Empty$/;"	i
Energy	rqalpha/model/instrument.py	/^    Energy = SectorCodeItem("能源", "energy", 'Energy')$/;"	v	class:SectorCode
Enum	rqalpha/const.py	/^from enum import Enum$/;"	i
Enum	rqalpha/events.py	/^from enum import Enum$/;"	i
Enum	rqalpha/mod/rqalpha_mod_sys_analyser/mod.py	/^from enum import Enum$/;"	i
Environment	rqalpha/api/api_base.py	/^from ..environment import Environment$/;"	i
Environment	rqalpha/api/api_future.py	/^from ..environment import Environment$/;"	i
Environment	rqalpha/api/api_stock.py	/^from ..environment import Environment$/;"	i
Environment	rqalpha/api/ext.py	/^from ..environment import Environment$/;"	i
Environment	rqalpha/core/bar_dict_price_board.py	/^from ..environment import Environment$/;"	i
Environment	rqalpha/core/strategy.py	/^from ..environment import Environment$/;"	i
Environment	rqalpha/core/strategy_context.py	/^from ..environment import Environment$/;"	i
Environment	rqalpha/core/strategy_universe.py	/^from ..environment import Environment$/;"	i
Environment	rqalpha/environment.py	/^class Environment(object):$/;"	c
Environment	rqalpha/execution_context.py	/^from .environment import Environment$/;"	i
Environment	rqalpha/main.py	/^from .environment import Environment$/;"	i
Environment	rqalpha/mod/rqalpha_mod_sys_analyser/mod.py	/^from rqalpha.environment import Environment$/;"	i
Environment	rqalpha/mod/rqalpha_mod_sys_funcat/mod.py	/^from rqalpha.environment import Environment$/;"	i
Environment	rqalpha/mod/rqalpha_mod_sys_simulation/decider/commission.py	/^from rqalpha.environment import Environment$/;"	i
Environment	rqalpha/mod/rqalpha_mod_sys_simulation/decider/tax.py	/^from rqalpha.environment import Environment$/;"	i
Environment	rqalpha/mod/rqalpha_mod_sys_simulation/matcher.py	/^from rqalpha.environment import Environment$/;"	i
Environment	rqalpha/mod/rqalpha_mod_sys_simulation/signal_broker.py	/^from rqalpha.environment import Environment$/;"	i
Environment	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_broker.py	/^from rqalpha.environment import Environment$/;"	i
Environment	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_event_source.py	/^from rqalpha.environment import Environment$/;"	i
Environment	rqalpha/mod/rqalpha_mod_sys_stock_realtime/data_source.py	/^from rqalpha.environment import Environment$/;"	i
Environment	rqalpha/mod/rqalpha_mod_sys_stock_realtime/event_source.py	/^from rqalpha.environment import Environment$/;"	i
Environment	rqalpha/mod/rqalpha_mod_sys_stock_realtime/utils.py	/^    from rqalpha.environment import Environment$/;"	i
Environment	rqalpha/model/account/benchmark_account.py	/^from ...environment import Environment$/;"	i
Environment	rqalpha/model/account/future_account.py	/^from ...environment import Environment$/;"	i
Environment	rqalpha/model/account/stock_account.py	/^from ...environment import Environment$/;"	i
Environment	rqalpha/model/bar.py	/^from ..environment import Environment$/;"	i
Environment	rqalpha/model/instrument.py	/^from ..environment import Environment$/;"	i
Environment	rqalpha/model/portfolio.py	/^from ..environment import Environment$/;"	i
Environment	rqalpha/model/position/base_position.py	/^from ...environment import Environment$/;"	i
Environment	rqalpha/model/position/future_position.py	/^from ...environment import Environment$/;"	i
Environment	rqalpha/model/position/stock_position.py	/^from ...environment import Environment$/;"	i
Environment	rqalpha/utils/__init__.py	/^    from ..environment import Environment$/;"	i
Environment	rqalpha/utils/arg_checker.py	/^from ..environment import Environment$/;"	i
Environment	rqalpha/utils/logger.py	/^    from ..environment import Environment$/;"	i
Environment	rqalpha/utils/scheduler.py	/^from ..environment import Environment$/;"	i
Event	rqalpha/core/executor.py	/^from ..events import EVENT, Event$/;"	i
Event	rqalpha/core/strategy.py	/^from ..events import EVENT, Event$/;"	i
Event	rqalpha/core/strategy_universe.py	/^from ..events import EVENT, Event$/;"	i
Event	rqalpha/events.py	/^class Event(object):$/;"	c
Event	rqalpha/main.py	/^from .events import EVENT, Event$/;"	i
Event	rqalpha/mod/rqalpha_mod_sys_simulation/matcher.py	/^from rqalpha.events import EVENT, Event$/;"	i
Event	rqalpha/mod/rqalpha_mod_sys_simulation/signal_broker.py	/^from rqalpha.events import EVENT, Event$/;"	i
Event	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_broker.py	/^from rqalpha.events import EVENT, Event$/;"	i
Event	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_event_source.py	/^from rqalpha.events import Event, EVENT$/;"	i
Event	rqalpha/mod/rqalpha_mod_sys_stock_realtime/event_source.py	/^from rqalpha.events import Event, EVENT$/;"	i
EventBus	rqalpha/environment.py	/^from .events import EventBus$/;"	i
EventBus	rqalpha/events.py	/^class EventBus(object):$/;"	c
ExecutionContext	rqalpha/api/api_base.py	/^from ..execution_context import ExecutionContext$/;"	i
ExecutionContext	rqalpha/api/api_future.py	/^from ..execution_context import ExecutionContext$/;"	i
ExecutionContext	rqalpha/api/api_stock.py	/^from ..execution_context import ExecutionContext$/;"	i
ExecutionContext	rqalpha/core/strategy.py	/^from ..execution_context import ExecutionContext$/;"	i
ExecutionContext	rqalpha/execution_context.py	/^class ExecutionContext(object):$/;"	c
ExecutionContext	rqalpha/main.py	/^from .execution_context import ExecutionContext$/;"	i
ExecutionContext	rqalpha/model/bar.py	/^from ..execution_context import ExecutionContext$/;"	i
ExecutionContext	rqalpha/utils/scheduler.py	/^from ..execution_context import ExecutionContext$/;"	i
Executor	rqalpha/core/executor.py	/^class Executor(object):$/;"	c
Executor	rqalpha/main.py	/^        from .core.executor import Executor$/;"	i
F51	rqalpha/model/instrument.py	/^    F51 = IndustryCodeItem("F51", "批发业")$/;"	v	class:IndustryCode
F52	rqalpha/model/instrument.py	/^    F52 = IndustryCodeItem("F52", "零售业")$/;"	v	class:IndustryCode
FENJI_A	rqalpha/const.py	/^    FENJI_A = "FENJI_A"$/;"	v	class:INSTRUMENT_TYPE
FENJI_B	rqalpha/const.py	/^    FENJI_B = "FENJI_B"$/;"	v	class:INSTRUMENT_TYPE
FENJI_MU	rqalpha/const.py	/^    FENJI_MU = "FENJI_MU"$/;"	v	class:INSTRUMENT_TYPE
FILLED	rqalpha/const.py	/^    FILLED = "FILLED"$/;"	v	class:ORDER_STATUS
FINALIZED	rqalpha/const.py	/^    FINALIZED = "[程序结束]"$/;"	v	class:EXECUTION_PHASE
FUTURE	rqalpha/const.py	/^    FUTURE = "FUTURE"$/;"	v	class:INSTRUMENT_TYPE
FUTURE	rqalpha/const.py	/^    FUTURE = 3$/;"	v	class:ACCOUNT_TYPE
FileStrategyLoader	rqalpha/core/strategy_loader.py	/^class FileStrategyLoader(AbstractStrategyLoader):$/;"	c
FileStrategyLoader	rqalpha/main.py	/^from .core.strategy_loader import FileStrategyLoader, SourceCodeStrategyLoader$/;"	i
Financials	rqalpha/model/instrument.py	/^    Financials = SectorCodeItem("金融", "financials", 'Financials')$/;"	v	class:SectorCode
FontProperties	rqalpha/mod/rqalpha_mod_sys_analyser/plot.py	/^    from matplotlib.font_manager import findfont, FontProperties$/;"	i
Fore	rqalpha/__main__.py	/^        from colorama import init, Fore$/;"	i
FuncatAPIMod	rqalpha/mod/rqalpha_mod_sys_funcat/__init__.py	/^    from .mod import FuncatAPIMod$/;"	i
FuncatAPIMod	rqalpha/mod/rqalpha_mod_sys_funcat/mod.py	/^class FuncatAPIMod(AbstractMod):$/;"	c
FunctionType	rqalpha/api/api_base.py	/^from types import FunctionType$/;"	i
FundDayBarConverter	rqalpha/data/base_data_source.py	/^from .converter import FutureDayBarConverter, FundDayBarConverter$/;"	i
FundDayBarConverter	rqalpha/data/converter.py	/^FundDayBarConverter = Converter({$/;"	v
FutureAccount	rqalpha/mod/rqalpha_mod_sys_simulation/utils.py	/^from rqalpha.model.account import StockAccount, FutureAccount$/;"	i
FutureAccount	rqalpha/model/account/__init__.py	/^from .future_account import FutureAccount$/;"	i
FutureAccount	rqalpha/model/account/future_account.py	/^class FutureAccount(BaseAccount):$/;"	c
FutureCommission	rqalpha/mod/rqalpha_mod_sys_simulation/decider/__init__.py	/^from .commission import StockCommission, FutureCommission$/;"	i
FutureCommission	rqalpha/mod/rqalpha_mod_sys_simulation/decider/commission.py	/^class FutureCommission(BaseCommission):$/;"	c
FutureDayBarConverter	rqalpha/data/base_data_source.py	/^from .converter import FutureDayBarConverter, FundDayBarConverter$/;"	i
FutureDayBarConverter	rqalpha/data/converter.py	/^FutureDayBarConverter = Converter({$/;"	v
FuturePosition	rqalpha/mod/rqalpha_mod_sys_simulation/utils.py	/^from rqalpha.model.position import Positions, StockPosition, FuturePosition$/;"	i
FuturePosition	rqalpha/model/position/__init__.py	/^from .future_position import FuturePosition$/;"	i
FuturePosition	rqalpha/model/position/future_position.py	/^class FuturePosition(BasePosition):$/;"	c
FutureTax	rqalpha/mod/rqalpha_mod_sys_simulation/decider/__init__.py	/^from .tax import StockTax, FutureTax$/;"	i
FutureTax	rqalpha/mod/rqalpha_mod_sys_simulation/decider/tax.py	/^class FutureTax(BaseTax):$/;"	c
G53	rqalpha/model/instrument.py	/^    G53 = IndustryCodeItem("G53", "铁路运输业")$/;"	v	class:IndustryCode
G54	rqalpha/model/instrument.py	/^    G54 = IndustryCodeItem("G54", "道路运输业")$/;"	v	class:IndustryCode
G55	rqalpha/model/instrument.py	/^    G55 = IndustryCodeItem("G55", "水上运输业")$/;"	v	class:IndustryCode
G56	rqalpha/model/instrument.py	/^    G56 = IndustryCodeItem("G56", "航空运输业")$/;"	v	class:IndustryCode
G57	rqalpha/model/instrument.py	/^    G57 = IndustryCodeItem("G57", "管道运输业")$/;"	v	class:IndustryCode
G58	rqalpha/model/instrument.py	/^    G58 = IndustryCodeItem("G58", "装卸搬运和运输代理业")$/;"	v	class:IndustryCode
G59	rqalpha/model/instrument.py	/^    G59 = IndustryCodeItem("G59", "仓储业")$/;"	v	class:IndustryCode
G60	rqalpha/model/instrument.py	/^    G60 = IndustryCodeItem("G60", "邮政业")$/;"	v	class:IndustryCode
GLOBAL	rqalpha/const.py	/^    GLOBAL = "[全局]"$/;"	v	class:EXECUTION_PHASE
GlobalVars	rqalpha/core/global_var.py	/^class GlobalVars(object):$/;"	c
GlobalVars	rqalpha/main.py	/^from .core.global_var import GlobalVars$/;"	i
H61	rqalpha/model/instrument.py	/^    H61 = IndustryCodeItem("H61", "住宿业")$/;"	v	class:IndustryCode
H62	rqalpha/model/instrument.py	/^    H62 = IndustryCodeItem("H62", "餐饮业")$/;"	v	class:IndustryCode
HEDGE	rqalpha/const.py	/^    HEDGE = "hedge"$/;"	v	class:HEDGE_TYPE
HEDGE_TYPE	rqalpha/const.py	/^class HEDGE_TYPE(CustomEnum):$/;"	c
HEDGE_TYPE	rqalpha/data/data_proxy.py	/^from ..const import HEDGE_TYPE$/;"	i
HEDGE_TYPE	rqalpha/mod/rqalpha_mod_sys_simulation/decider/commission.py	/^from rqalpha.const import HEDGE_TYPE, COMMISSION_TYPE, POSITION_EFFECT$/;"	i
HealthCare	rqalpha/model/instrument.py	/^    HealthCare = SectorCodeItem("医疗保健", "health care", 'HealthCare')$/;"	v	class:SectorCode
I18NSPHINXOPTS	docs/Makefile	/^I18NSPHINXOPTS  = $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) source$/;"	m
I18NSPHINXOPTS	docs/make.bat	/^	set I18NSPHINXOPTS=-D latex_paper_size=%PAPER% %I18NSPHINXOPTS%$/;"	v
I18NSPHINXOPTS	docs/make.bat	/^set I18NSPHINXOPTS=%SPHINXOPTS% source$/;"	v
I63	rqalpha/model/instrument.py	/^    I63 = IndustryCodeItem("I63", "电信、广播电视和卫星传输服务")$/;"	v	class:IndustryCode
I64	rqalpha/model/instrument.py	/^    I64 = IndustryCodeItem("I64", "互联网和相关服务")$/;"	v	class:IndustryCode
I65	rqalpha/model/instrument.py	/^    I65 = IndustryCodeItem("I65", "软件和信息技术服务业")$/;"	v	class:IndustryCode
INDEX_MAP	rqalpha/model/bar.py	/^    INDEX_MAP = {$/;"	v	class:BarObject
INDX	rqalpha/const.py	/^    INDX = "INDX"$/;"	v	class:INSTRUMENT_TYPE
INSTRUMENT_TYPE	rqalpha/const.py	/^class INSTRUMENT_TYPE(CustomEnum):$/;"	c
INSTRUMENT_TYPE	rqalpha/utils/__init__.py	/^from ..const import EXC_TYPE, INSTRUMENT_TYPE, ACCOUNT_TYPE, UNDERLYING_SYMBOL_PATTERN, NIGHT_TRADING_NS$/;"	i
INSTRUMENT_TYPE	rqalpha/utils/arg_checker.py	/^from ..const import INSTRUMENT_TYPE, RUN_TYPE$/;"	i
INSTRUMENT_TYPE_MAP	rqalpha/data/base_data_source.py	/^    INSTRUMENT_TYPE_MAP = {$/;"	v	class:BaseDataSource
INST_TYPE_IN_STOCK_ACCOUNT	rqalpha/utils/__init__.py	/^INST_TYPE_IN_STOCK_ACCOUNT = [$/;"	v
INST_TYPE_IN_STOCK_ACCOUNT	rqalpha/utils/arg_checker.py	/^from ..utils import unwrapper, INST_TYPE_IN_STOCK_ACCOUNT$/;"	i
IndexBarConverter	rqalpha/data/base_data_source.py	/^from .converter import StockBarConverter, IndexBarConverter$/;"	i
IndexBarConverter	rqalpha/data/converter.py	/^IndexBarConverter = Converter({$/;"	v
Industrials	rqalpha/model/instrument.py	/^    Industrials = SectorCodeItem("工业", "industrials", "Industrials")$/;"	v	class:SectorCode
IndustryCode	rqalpha/model/instrument.py	/^class IndustryCode(object):$/;"	c
IndustryCode	rqalpha/utils/__init__.py	/^    from ..model.instrument import IndustryCode, IndustryCodeItem$/;"	i
IndustryCodeItem	rqalpha/api/api_base.py	/^from ..model.instrument import SectorCodeItem, IndustryCodeItem$/;"	i
IndustryCodeItem	rqalpha/model/instrument.py	/^class IndustryCodeItem(object):$/;"	c
IndustryCodeItem	rqalpha/utils/__init__.py	/^    from ..model.instrument import IndustryCode, IndustryCodeItem$/;"	i
InformationTechnology	rqalpha/model/instrument.py	/^    InformationTechnology = SectorCodeItem("信息技术", "information technology", 'InformationTechnology')$/;"	v	class:SectorCode
InstallCommand	rqalpha/__main__.py	/^        from pip.commands.install import InstallCommand$/;"	i
Instrument	rqalpha/api/api_base.py	/^from ..model.instrument import Instrument, SectorCode as sector_code, IndustryCode as industry_code$/;"	i
Instrument	rqalpha/api/api_future.py	/^from ..model.instrument import Instrument$/;"	i
Instrument	rqalpha/api/api_stock.py	/^from ..model.instrument import Instrument$/;"	i
Instrument	rqalpha/core/strategy_universe.py	/^from ..model.instrument import Instrument$/;"	i
Instrument	rqalpha/data/instrument_store.py	/^from ..model.instrument import Instrument$/;"	i
Instrument	rqalpha/model/instrument.py	/^class Instrument(object):$/;"	c
Instrument	rqalpha/utils/arg_checker.py	/^from ..model.instrument import Instrument$/;"	i
InstrumentMixin	rqalpha/data/data_proxy.py	/^from .instrument_mixin import InstrumentMixin$/;"	i
InstrumentMixin	rqalpha/data/instrument_mixin.py	/^class InstrumentMixin(object):$/;"	c
InstrumentStore	rqalpha/data/base_data_source.py	/^from .instrument_store import InstrumentStore$/;"	i
InstrumentStore	rqalpha/data/instrument_store.py	/^class InstrumentStore(object):$/;"	c
InstrumentedAttribute	rqalpha/utils/arg_checker.py	/^        from sqlalchemy.orm.attributes import InstrumentedAttribute$/;"	i
IsTradingValidator	rqalpha/mod/rqalpha_mod_sys_risk/is_trading_validator.py	/^class IsTradingValidator(AbstractFrontendValidator):$/;"	c
IsTradingValidator	rqalpha/mod/rqalpha_mod_sys_risk/mod.py	/^from .is_trading_validator import IsTradingValidator$/;"	i
Iterable	rqalpha/api/api_base.py	/^from collections import Iterable$/;"	i
J66	rqalpha/model/instrument.py	/^    J66 = IndustryCodeItem("J66", "货币金融服务")$/;"	v	class:IndustryCode
J67	rqalpha/model/instrument.py	/^    J67 = IndustryCodeItem("J67", "资本市场服务")$/;"	v	class:IndustryCode
J68	rqalpha/model/instrument.py	/^    J68 = IndustryCodeItem("J68", "保险业")$/;"	v	class:IndustryCode
J69	rqalpha/model/instrument.py	/^    J69 = IndustryCodeItem("J69", "其他金融业")$/;"	v	class:IndustryCode
K70	rqalpha/model/instrument.py	/^    K70 = IndustryCodeItem("K70", "房地产业")$/;"	v	class:IndustryCode
KNOWN_EVENTS	rqalpha/core/executor.py	/^    KNOWN_EVENTS = {$/;"	v	class:Executor
L71	rqalpha/model/instrument.py	/^    L71 = IndustryCodeItem("L71", "租赁业")$/;"	v	class:IndustryCode
L72	rqalpha/model/instrument.py	/^    L72 = IndustryCodeItem("L72", "商务服务业")$/;"	v	class:IndustryCode
LIMIT	rqalpha/const.py	/^    LIMIT = "LIMIT"$/;"	v	class:ORDER_TYPE
LIMIT_DOWN	rqalpha/const.py	/^    LIMIT_DOWN = "LIMIT_DOWN"$/;"	v	class:BAR_STATUS
LIMIT_UP	rqalpha/const.py	/^    LIMIT_UP = "LIMIT_UP"$/;"	v	class:BAR_STATUS
LIVE_TRADING	rqalpha/const.py	/^    LIVE_TRADING = 'LIVE_TRADING'$/;"	v	class:RUN_TYPE
LOF	rqalpha/const.py	/^    LOF = "LOF"$/;"	v	class:INSTRUMENT_TYPE
LimitOrder	rqalpha/api/api_base.py	/^from ..model.order import Order, MarketOrder, LimitOrder$/;"	i
LimitOrder	rqalpha/api/api_future.py	/^from ..model.order import Order, MarketOrder, LimitOrder, OrderStyle$/;"	i
LimitOrder	rqalpha/api/api_stock.py	/^from ..model.order import Order, OrderStyle, MarketOrder, LimitOrder$/;"	i
LimitOrder	rqalpha/mod/rqalpha_mod_sys_simulation/signal_broker.py	/^from rqalpha.model.order import LimitOrder$/;"	i
LimitOrder	rqalpha/model/order.py	/^class LimitOrder(OrderStyle):$/;"	c
LimitOrder	tests/api/test_api_stock.py	/^    from rqalpha.api import order_lots, get_order, SIDE, LimitOrder$/;"	i
LimitOrder	tests/api/test_api_stock.py	/^    from rqalpha.api import order_percent, get_order, SIDE, LimitOrder$/;"	i
LimitOrder	tests/api/test_api_stock.py	/^    from rqalpha.api import order_shares, get_order, SIDE, LimitOrder$/;"	i
LimitOrder	tests/api/test_api_stock.py	/^    from rqalpha.api import order_target_percent, get_order, SIDE, LimitOrder$/;"	i
LimitOrder	tests/api/test_api_stock.py	/^    from rqalpha.api import order_value, get_order, SIDE, LimitOrder$/;"	i
List	rqalpha/api/api_base.py	/^from typing import List$/;"	i
Localization	rqalpha/utils/i18n.py	/^class Localization(object):$/;"	c
Logger	rqalpha/utils/logger.py	/^from logbook import Logger$/;"	i
M73	rqalpha/model/instrument.py	/^    M73 = IndustryCodeItem("M73", "研究和试验发展")$/;"	v	class:IndustryCode
M74	rqalpha/model/instrument.py	/^    M74 = IndustryCodeItem("M74", "专业技术服务业")$/;"	v	class:IndustryCode
M75	rqalpha/model/instrument.py	/^    M75 = IndustryCodeItem("M75", "科技推广和应用服务业")$/;"	v	class:IndustryCode
MARGIN_TYPE	rqalpha/const.py	/^class MARGIN_TYPE(CustomEnum):$/;"	c
MARGIN_TYPE	rqalpha/data/future_info_cn.py	/^from ..const import COMMISSION_TYPE, MARGIN_TYPE$/;"	i
MARGIN_TYPE	rqalpha/utils/default_future_info.py	/^from ..const import COMMISSION_TYPE, MARGIN_TYPE$/;"	i
MARKET	rqalpha/const.py	/^    MARKET = "MARKET"$/;"	v	class:ORDER_TYPE
MARKET_DATA_EVENT	rqalpha/mod/rqalpha_mod_sys_stock_realtime/event_source.py	/^    MARKET_DATA_EVENT = "RealtimeEventSource.MARKET_DATA_EVENT"$/;"	v	class:RealtimeEventSource
MATCHING_TYPE	rqalpha/api/api_base.py	/^from ..const import EXECUTION_PHASE, EXC_TYPE, ORDER_STATUS, SIDE, POSITION_EFFECT, ORDER_TYPE, MATCHING_TYPE, RUN_TYPE$/;"	i
MATCHING_TYPE	rqalpha/const.py	/^class MATCHING_TYPE(CustomEnum):$/;"	c
MATCHING_TYPE	rqalpha/mod/rqalpha_mod_sys_simulation/matcher.py	/^from rqalpha.const import ORDER_TYPE, SIDE, BAR_STATUS, MATCHING_TYPE$/;"	i
MATCHING_TYPE	rqalpha/mod/rqalpha_mod_sys_simulation/mod.py	/^from rqalpha.const import MATCHING_TYPE$/;"	i
MATCHING_TYPE	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_broker.py	/^from rqalpha.const import MATCHING_TYPE, ORDER_STATUS$/;"	i
MONTHLY	rqalpha/utils/risk.py	/^MONTHLY = 'monthly'$/;"	v
MONTHS_PER_YEAR	rqalpha/utils/risk.py	/^MONTHS_PER_YEAR = 12$/;"	v
MarketOrder	rqalpha/api/api_base.py	/^from ..model.order import Order, MarketOrder, LimitOrder$/;"	i
MarketOrder	rqalpha/api/api_future.py	/^from ..model.order import Order, MarketOrder, LimitOrder, OrderStyle$/;"	i
MarketOrder	rqalpha/api/api_stock.py	/^from ..model.order import Order, OrderStyle, MarketOrder, LimitOrder$/;"	i
MarketOrder	rqalpha/model/order.py	/^class MarketOrder(OrderStyle):$/;"	c
Matcher	rqalpha/mod/rqalpha_mod_sys_simulation/matcher.py	/^class Matcher(object):$/;"	c
Matcher	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_broker.py	/^from .matcher import Matcher$/;"	i
Materials	rqalpha/model/instrument.py	/^    Materials = SectorCodeItem("原材料", "materials", 'Materials')$/;"	v	class:SectorCode
MixedPositions	rqalpha/model/portfolio.py	/^class MixedPositions(dict):$/;"	c
ModHandler	rqalpha/main.py	/^from .mod import ModHandler$/;"	i
ModHandler	rqalpha/mod/__init__.py	/^class ModHandler(object):$/;"	c
ModifyExceptionFromType	rqalpha/core/strategy.py	/^from ..utils.exception import ModifyExceptionFromType$/;"	i
ModifyExceptionFromType	rqalpha/utils/exception.py	/^class ModifyExceptionFromType(object):$/;"	c
ModifyExceptionFromType	rqalpha/utils/scheduler.py	/^from ..utils.exception import patch_user_exc, ModifyExceptionFromType$/;"	i
N76	rqalpha/model/instrument.py	/^    N76 = IndustryCodeItem("N76", "水利管理业")$/;"	v	class:IndustryCode
N77	rqalpha/model/instrument.py	/^    N77 = IndustryCodeItem("N77", "生态保护和环境治理业")$/;"	v	class:IndustryCode
N78	rqalpha/model/instrument.py	/^    N78 = IndustryCodeItem("N78", "公共设施管理业")$/;"	v	class:IndustryCode
NAMES	rqalpha/model/bar.py	/^NAMES = ['open', 'close', 'low', 'high', 'settlement', 'limit_up', 'limit_down', 'volume', 'total_turnover',$/;"	v
NANDict	rqalpha/model/bar.py	/^NANDict = {i: np.nan for i in NAMES}$/;"	v
NEXT_BAR_OPEN	rqalpha/const.py	/^    NEXT_BAR_OPEN = "NEXT_BAR_OPEN"$/;"	v	class:MATCHING_TYPE
NEXT_TICK_BEST_COUNTERPARTY	rqalpha/const.py	/^    NEXT_TICK_BEST_COUNTERPARTY = "NEXT_TICK_BEST_COUNTERPARTY"$/;"	v	class:MATCHING_TYPE
NEXT_TICK_BEST_OWN	rqalpha/const.py	/^    NEXT_TICK_BEST_OWN = "NEXT_TICK_BEST_OWN"$/;"	v	class:MATCHING_TYPE
NEXT_TICK_LAST	rqalpha/const.py	/^    NEXT_TICK_LAST = "NEXT_TICK_LAST"$/;"	v	class:MATCHING_TYPE
NIGHT_TRADING_NS	rqalpha/const.py	/^NIGHT_TRADING_NS = ["CU", "AL", "ZN", "PB", "SN", "NI", "RB", "HC", "BU", "RU", "AU", "AG", "Y", "M", "A", "B", "P",$/;"	v
NIGHT_TRADING_NS	rqalpha/utils/__init__.py	/^from ..const import EXC_TYPE, INSTRUMENT_TYPE, ACCOUNT_TYPE, UNDERLYING_SYMBOL_PATTERN, NIGHT_TRADING_NS$/;"	i
NIGHT_UNDERLYING_SYMBOL	rqalpha/utils/default_future_info.py	/^NIGHT_UNDERLYING_SYMBOL = ["CU", "AL", "ZN", "PB", "SN", "NI", "RB", "HC", "BU", "RU", "AU", "AG", "Y", "M", "A", "B",$/;"	v
NORMAL	rqalpha/const.py	/^    NORMAL = "NORMAL"$/;"	v	class:BAR_STATUS
NOTSET	rqalpha/const.py	/^    NOTSET = "NOTSET"$/;"	v	class:EXC_TYPE
Nop	rqalpha/utils/__init__.py	/^class Nop(object):$/;"	c
NullTranslations	rqalpha/utils/i18n.py	/^from gettext import NullTranslations, translation$/;"	i
O79	rqalpha/model/instrument.py	/^    O79 = IndustryCodeItem("O79", "居民服务业")$/;"	v	class:IndustryCode
O80	rqalpha/model/instrument.py	/^    O80 = IndustryCodeItem("O80", "机动车、电子产品和日用产品修理业")$/;"	v	class:IndustryCode
O81	rqalpha/model/instrument.py	/^    O81 = IndustryCodeItem("O81", "其他服务业")$/;"	v	class:IndustryCode
ONE_MINUTE	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_event_source.py	/^ONE_MINUTE = datetime.timedelta(minutes=1)$/;"	v
ON_BAR	rqalpha/const.py	/^    ON_BAR = "[盘中 handle_bar 函数]"$/;"	v	class:EXECUTION_PHASE
ON_CRASH	rqalpha/const.py	/^    ON_CRASH = "ON_CRASH"$/;"	v	class:PERSIST_MODE
ON_INIT	rqalpha/const.py	/^    ON_INIT = "[程序初始化]"$/;"	v	class:EXECUTION_PHASE
ON_LINE_PROFILER_RESULT	rqalpha/events.py	/^    ON_LINE_PROFILER_RESULT = 'on_line_profiler_result'$/;"	v	class:EVENT
ON_TICK	rqalpha/const.py	/^    ON_TICK = "[盘中 handle_tick 函数]"$/;"	v	class:EXECUTION_PHASE
OPEN	rqalpha/const.py	/^    OPEN = "OPEN"$/;"	v	class:POSITION_EFFECT
OPTION	rqalpha/const.py	/^    OPTION = "OPTION"$/;"	v	class:INSTRUMENT_TYPE
ORDER_CANCELLATION_PASS	rqalpha/events.py	/^    ORDER_CANCELLATION_PASS = 'order_cancellation_pass'$/;"	v	class:EVENT
ORDER_CANCELLATION_REJECT	rqalpha/events.py	/^    ORDER_CANCELLATION_REJECT = 'order_cancellation_reject'$/;"	v	class:EVENT
ORDER_CREATION_PASS	rqalpha/events.py	/^    ORDER_CREATION_PASS = 'order_creation_pass'$/;"	v	class:EVENT
ORDER_CREATION_REJECT	rqalpha/events.py	/^    ORDER_CREATION_REJECT = 'order_creation_reject'$/;"	v	class:EVENT
ORDER_PENDING_CANCEL	rqalpha/events.py	/^    ORDER_PENDING_CANCEL = 'order_pending_cancel'$/;"	v	class:EVENT
ORDER_PENDING_NEW	rqalpha/events.py	/^    ORDER_PENDING_NEW = 'order_pending_new'$/;"	v	class:EVENT
ORDER_STATUS	rqalpha/api/api_base.py	/^from ..const import EXECUTION_PHASE, EXC_TYPE, ORDER_STATUS, SIDE, POSITION_EFFECT, ORDER_TYPE, MATCHING_TYPE, RUN_TYPE$/;"	i
ORDER_STATUS	rqalpha/const.py	/^class ORDER_STATUS(CustomEnum):$/;"	c
ORDER_STATUS	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_broker.py	/^from rqalpha.const import MATCHING_TYPE, ORDER_STATUS$/;"	i
ORDER_STATUS	rqalpha/model/order.py	/^from ..const import ORDER_STATUS, ORDER_TYPE, SIDE, POSITION_EFFECT$/;"	i
ORDER_STATUS	tests/api/test_api_future.py	/^    from rqalpha.api import buy_close, subscribe, get_order, ORDER_STATUS, POSITION_EFFECT, SIDE$/;"	i
ORDER_STATUS	tests/api/test_api_future.py	/^    from rqalpha.api import buy_open, subscribe, get_order, ORDER_STATUS, POSITION_EFFECT, SIDE$/;"	i
ORDER_STATUS	tests/api/test_api_future.py	/^    from rqalpha.api import sell_close, subscribe, get_order, ORDER_STATUS, POSITION_EFFECT, SIDE$/;"	i
ORDER_STATUS	tests/api/test_api_future.py	/^    from rqalpha.api import sell_open, subscribe, get_order, ORDER_STATUS, POSITION_EFFECT, SIDE$/;"	i
ORDER_TYPE	rqalpha/api/api_base.py	/^from ..const import EXECUTION_PHASE, EXC_TYPE, ORDER_STATUS, SIDE, POSITION_EFFECT, ORDER_TYPE, MATCHING_TYPE, RUN_TYPE$/;"	i
ORDER_TYPE	rqalpha/api/api_future.py	/^from ..const import EXECUTION_PHASE, SIDE, POSITION_EFFECT, ORDER_TYPE$/;"	i
ORDER_TYPE	rqalpha/api/api_stock.py	/^from ..const import EXECUTION_PHASE, SIDE, ORDER_TYPE$/;"	i
ORDER_TYPE	rqalpha/const.py	/^class ORDER_TYPE(CustomEnum):$/;"	c
ORDER_TYPE	rqalpha/mod/rqalpha_mod_sys_risk/price_validator.py	/^from rqalpha.const import ORDER_TYPE$/;"	i
ORDER_TYPE	rqalpha/mod/rqalpha_mod_sys_simulation/matcher.py	/^from rqalpha.const import ORDER_TYPE, SIDE, BAR_STATUS, MATCHING_TYPE$/;"	i
ORDER_TYPE	rqalpha/model/order.py	/^from ..const import ORDER_STATUS, ORDER_TYPE, SIDE, POSITION_EFFECT$/;"	i
ORDER_UNSOLICITED_UPDATE	rqalpha/events.py	/^    ORDER_UNSOLICITED_UPDATE = 'order_unsolicited_update'$/;"	v	class:EVENT
Order	rqalpha/api/api_base.py	/^from ..model.order import Order, MarketOrder, LimitOrder$/;"	i
Order	rqalpha/api/api_future.py	/^from ..model.order import Order, MarketOrder, LimitOrder, OrderStyle$/;"	i
Order	rqalpha/api/api_stock.py	/^from ..model.order import Order, OrderStyle, MarketOrder, LimitOrder$/;"	i
Order	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_broker.py	/^from rqalpha.model.order import Order$/;"	i
Order	rqalpha/model/order.py	/^class Order(object):$/;"	c
OrderStyle	rqalpha/api/api_future.py	/^from ..model.order import Order, MarketOrder, LimitOrder, OrderStyle$/;"	i
OrderStyle	rqalpha/api/api_stock.py	/^from ..model.order import Order, OrderStyle, MarketOrder, LimitOrder$/;"	i
OrderStyle	rqalpha/model/order.py	/^class OrderStyle(object):$/;"	c
OrderedDict	rqalpha/mod/__init__.py	/^from collections import OrderedDict$/;"	i
OrderedDict	rqalpha/utils/persisit_helper.py	/^from collections import OrderedDict$/;"	i
P82	rqalpha/model/instrument.py	/^    P82 = IndustryCodeItem("P82", "教育")$/;"	v	class:IndustryCode
PAPER	docs/Makefile	/^PAPER         =$/;"	m
PAPER	docs/make.bat	/^	echo.  latex      to make LaTeX files, you can set PAPER=a4 or PAPER=letter$/;"	v
PAPER_TRADING	rqalpha/const.py	/^    PAPER_TRADING = "PAPER_TRADING"$/;"	v	class:RUN_TYPE
PENDING_CANCEL	rqalpha/const.py	/^    PENDING_CANCEL = "PENDING_CANCEL"$/;"	v	class:ORDER_STATUS
PENDING_NEW	rqalpha/const.py	/^    PENDING_NEW = "PENDING_NEW"$/;"	v	class:ORDER_STATUS
PERSIST_MODE	rqalpha/const.py	/^class PERSIST_MODE(CustomEnum):$/;"	c
PERSIST_MODE	rqalpha/mod/rqalpha_mod_sys_stock_realtime/mod.py	/^from rqalpha.const import RUN_TYPE, PERSIST_MODE$/;"	i
PERSIST_MODE	rqalpha/utils/config.py	/^from ..const import RUN_TYPE, PERSIST_MODE, ACCOUNT_TYPE$/;"	i
PERSIST_MODE	rqalpha/utils/persisit_helper.py	/^from ..const import PERSIST_MODE$/;"	i
POSITION_EFFECT	rqalpha/api/api_base.py	/^from ..const import EXECUTION_PHASE, EXC_TYPE, ORDER_STATUS, SIDE, POSITION_EFFECT, ORDER_TYPE, MATCHING_TYPE, RUN_TYPE$/;"	i
POSITION_EFFECT	rqalpha/api/api_future.py	/^from ..const import EXECUTION_PHASE, SIDE, POSITION_EFFECT, ORDER_TYPE$/;"	i
POSITION_EFFECT	rqalpha/const.py	/^class POSITION_EFFECT(CustomEnum):$/;"	c
POSITION_EFFECT	rqalpha/mod/rqalpha_mod_sys_risk/cash_validator.py	/^from rqalpha.const import SIDE, POSITION_EFFECT, ACCOUNT_TYPE$/;"	i
POSITION_EFFECT	rqalpha/mod/rqalpha_mod_sys_risk/position_validator.py	/^from rqalpha.const import SIDE, POSITION_EFFECT, ACCOUNT_TYPE$/;"	i
POSITION_EFFECT	rqalpha/mod/rqalpha_mod_sys_simulation/decider/commission.py	/^from rqalpha.const import HEDGE_TYPE, COMMISSION_TYPE, POSITION_EFFECT$/;"	i
POSITION_EFFECT	rqalpha/model/account/future_account.py	/^from ...const import ACCOUNT_TYPE, POSITION_EFFECT$/;"	i
POSITION_EFFECT	rqalpha/model/order.py	/^from ..const import ORDER_STATUS, ORDER_TYPE, SIDE, POSITION_EFFECT$/;"	i
POSITION_EFFECT	rqalpha/model/position/future_position.py	/^from ...const import SIDE, POSITION_EFFECT, ACCOUNT_TYPE$/;"	i
POSITION_EFFECT	tests/api/test_api_future.py	/^    from rqalpha.api import buy_close, subscribe, get_order, ORDER_STATUS, POSITION_EFFECT, SIDE$/;"	i
POSITION_EFFECT	tests/api/test_api_future.py	/^    from rqalpha.api import buy_open, subscribe, get_order, ORDER_STATUS, POSITION_EFFECT, SIDE$/;"	i
POSITION_EFFECT	tests/api/test_api_future.py	/^    from rqalpha.api import sell_close, subscribe, get_order, ORDER_STATUS, POSITION_EFFECT, SIDE$/;"	i
POSITION_EFFECT	tests/api/test_api_future.py	/^    from rqalpha.api import sell_open, subscribe, get_order, ORDER_STATUS, POSITION_EFFECT, SIDE$/;"	i
POSITION_FIELDS_MAP	rqalpha/mod/rqalpha_mod_sys_analyser/mod.py	/^    POSITION_FIELDS_MAP = {$/;"	v	class:AnalyserMod
POST_AFTER_TRADING	rqalpha/core/executor.py	/^POST_AFTER_TRADING = Event(EVENT.POST_AFTER_TRADING)$/;"	v
POST_AFTER_TRADING	rqalpha/events.py	/^    POST_AFTER_TRADING = 'post_after_trading'$/;"	v	class:EVENT
POST_BAR	rqalpha/core/executor.py	/^POST_BAR = Event(EVENT.POST_BAR)$/;"	v
POST_BAR	rqalpha/events.py	/^    POST_BAR = 'post_bar'$/;"	v	class:EVENT
POST_BEFORE_TRADING	rqalpha/core/executor.py	/^POST_BEFORE_TRADING = Event(EVENT.POST_BEFORE_TRADING)$/;"	v
POST_BEFORE_TRADING	rqalpha/events.py	/^    POST_BEFORE_TRADING = 'post_before_trading'$/;"	v	class:EVENT
POST_SCHEDULED	rqalpha/events.py	/^    POST_SCHEDULED = 'post_scheduled'$/;"	v	class:EVENT
POST_SETTLEMENT	rqalpha/core/executor.py	/^POST_SETTLEMENT = Event(EVENT.POST_SETTLEMENT)$/;"	v
POST_SETTLEMENT	rqalpha/events.py	/^    POST_SETTLEMENT = 'post_settlement'$/;"	v	class:EVENT
POST_SYSTEM_INIT	rqalpha/events.py	/^    POST_SYSTEM_INIT = 'post_system_init'$/;"	v	class:EVENT
POST_SYSTEM_RESTORED	rqalpha/events.py	/^    POST_SYSTEM_RESTORED = 'post_system_restored'$/;"	v	class:EVENT
POST_TICK	rqalpha/core/executor.py	/^POST_TICK = Event(EVENT.POST_TICK)$/;"	v
POST_TICK	rqalpha/events.py	/^    POST_TICK = 'post_tick'$/;"	v	class:EVENT
POST_UNIVERSE_CHANGED	rqalpha/events.py	/^    POST_UNIVERSE_CHANGED = 'post_universe_changed'$/;"	v	class:EVENT
POST_USER_INIT	rqalpha/events.py	/^    POST_USER_INIT = 'post_user_init'$/;"	v	class:EVENT
PRE_AFTER_TRADING	rqalpha/core/executor.py	/^PRE_AFTER_TRADING = Event(EVENT.PRE_AFTER_TRADING)$/;"	v
PRE_AFTER_TRADING	rqalpha/events.py	/^    PRE_AFTER_TRADING = 'pre_after_trading'$/;"	v	class:EVENT
PRE_BAR	rqalpha/core/executor.py	/^PRE_BAR = Event(EVENT.PRE_BAR)$/;"	v
PRE_BAR	rqalpha/events.py	/^    PRE_BAR = 'pre_bar'$/;"	v	class:EVENT
PRE_BEFORE_TRADING	rqalpha/core/executor.py	/^PRE_BEFORE_TRADING = Event(EVENT.PRE_BEFORE_TRADING)$/;"	v
PRE_BEFORE_TRADING	rqalpha/events.py	/^    PRE_BEFORE_TRADING = 'pre_before_trading'$/;"	v	class:EVENT
PRE_SCHEDULED	rqalpha/events.py	/^    PRE_SCHEDULED = 'pre_scheduled'$/;"	v	class:EVENT
PRE_SETTLEMENT	rqalpha/core/executor.py	/^PRE_SETTLEMENT = Event(EVENT.PRE_SETTLEMENT)$/;"	v
PRE_SETTLEMENT	rqalpha/events.py	/^    PRE_SETTLEMENT = 'pre_settlement'$/;"	v	class:EVENT
PRE_TICK	rqalpha/core/executor.py	/^PRE_TICK = Event(EVENT.PRE_TICK)$/;"	v
PRE_TICK	rqalpha/events.py	/^    PRE_TICK = 'pre_tick'$/;"	v	class:EVENT
PYTHON	docs/Makefile	/^PYTHON        = python$/;"	m
PersistHelper	rqalpha/main.py	/^from .utils.persisit_helper import CoreObjectsPersistProxy, PersistHelper$/;"	i
PersistHelper	rqalpha/utils/persisit_helper.py	/^class PersistHelper(object):$/;"	c
Persistable	rqalpha/interface.py	/^class Persistable(with_metaclass(abc.ABCMeta)):$/;"	c
Persistable	rqalpha/main.py	/^from .interface import Persistable$/;"	i
Persistable	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_broker.py	/^from rqalpha.interface import AbstractBroker, Persistable$/;"	i
PlotStore	rqalpha/environment.py	/^            from .utils.plot_store import PlotStore$/;"	i
PlotStore	rqalpha/utils/plot_store.py	/^class PlotStore(object):$/;"	c
Portfolio	rqalpha/main.py	/^    from .model.portfolio import Portfolio$/;"	i
Portfolio	rqalpha/mod/rqalpha_mod_sys_simulation/utils.py	/^from rqalpha.model.portfolio import Portfolio$/;"	i
Portfolio	rqalpha/model/portfolio.py	/^class Portfolio(object):$/;"	c
PositionValidator	rqalpha/mod/rqalpha_mod_sys_risk/mod.py	/^from .position_validator import PositionValidator$/;"	i
PositionValidator	rqalpha/mod/rqalpha_mod_sys_risk/position_validator.py	/^class PositionValidator(AbstractFrontendValidator):$/;"	c
Positions	rqalpha/main.py	/^    from .model.position import Positions, StockPosition$/;"	i
Positions	rqalpha/mod/rqalpha_mod_sys_simulation/utils.py	/^from rqalpha.model.position import Positions, StockPosition, FuturePosition$/;"	i
Positions	rqalpha/model/position/__init__.py	/^class Positions(dict):$/;"	c
PriceRatioSlippage	rqalpha/mod/rqalpha_mod_sys_simulation/decider/__init__.py	/^from .slippage import PriceRatioSlippage$/;"	i
PriceRatioSlippage	rqalpha/mod/rqalpha_mod_sys_simulation/decider/slippage.py	/^class PriceRatioSlippage(BaseSlippage):$/;"	c
PriceValidator	rqalpha/mod/rqalpha_mod_sys_risk/mod.py	/^from .price_validator import PriceValidator$/;"	i
PriceValidator	rqalpha/mod/rqalpha_mod_sys_risk/price_validator.py	/^class PriceValidator(AbstractFrontendValidator):$/;"	c
ProgressMod	rqalpha/mod/rqalpha_mod_sys_progress/__init__.py	/^    from .mod import ProgressMod$/;"	i
ProgressMod	rqalpha/mod/rqalpha_mod_sys_progress/mod.py	/^class ProgressMod(AbstractMod):$/;"	c
Q83	rqalpha/model/instrument.py	/^    Q83 = IndustryCodeItem("Q83", "卫生")$/;"	v	class:IndustryCode
Q84	rqalpha/model/instrument.py	/^    Q84 = IndustryCodeItem("Q84", "社会工作")$/;"	v	class:IndustryCode
Queue	rqalpha/mod/rqalpha_mod_sys_stock_realtime/event_source.py	/^from six.moves.queue import Queue, Empty$/;"	i
R85	rqalpha/model/instrument.py	/^    R85 = IndustryCodeItem("R85", "新闻和出版业")$/;"	v	class:IndustryCode
R86	rqalpha/model/instrument.py	/^    R86 = IndustryCodeItem("R86", "广播、电视、电影和影视录音制作业")$/;"	v	class:IndustryCode
R87	rqalpha/model/instrument.py	/^    R87 = IndustryCodeItem("R87", "文化艺术业")$/;"	v	class:IndustryCode
R88	rqalpha/model/instrument.py	/^    R88 = IndustryCodeItem("R88", "体育")$/;"	v	class:IndustryCode
R89	rqalpha/model/instrument.py	/^    R89 = IndustryCodeItem("R89", "娱乐业")$/;"	v	class:IndustryCode
REAL_TIME	rqalpha/const.py	/^    REAL_TIME = "REAL_TIME"$/;"	v	class:PERSIST_MODE
REJECTED	rqalpha/const.py	/^    REJECTED = "REJECTED"$/;"	v	class:ORDER_STATUS
RQAlphaDataBackend	rqalpha/mod/rqalpha_mod_sys_funcat/mod.py	/^        class RQAlphaDataBackend(DataBackend):$/;"	c	function:FuncatAPIMod.start_up
RQInvalidArgument	rqalpha/api/api_base.py	/^from ..utils.exception import patch_user_exc, patch_system_exc, EXC_EXT_NAME, RQInvalidArgument$/;"	i
RQInvalidArgument	rqalpha/api/api_future.py	/^from ..utils.exception import RQInvalidArgument$/;"	i
RQInvalidArgument	rqalpha/api/api_stock.py	/^from ..utils.exception import patch_user_exc, RQInvalidArgument$/;"	i
RQInvalidArgument	rqalpha/utils/arg_checker.py	/^from .exception import RQInvalidArgument, RQTypeError$/;"	i
RQInvalidArgument	rqalpha/utils/exception.py	/^class RQInvalidArgument(RQUserError):$/;"	c
RQTypeError	rqalpha/utils/arg_checker.py	/^from .exception import RQInvalidArgument, RQTypeError$/;"	i
RQTypeError	rqalpha/utils/exception.py	/^class RQTypeError(RQUserError):$/;"	c
RQUserError	rqalpha/utils/exception.py	/^class RQUserError(Exception):$/;"	c
RUN_TYPE	rqalpha/api/api_base.py	/^from ..const import EXECUTION_PHASE, EXC_TYPE, ORDER_STATUS, SIDE, POSITION_EFFECT, ORDER_TYPE, MATCHING_TYPE, RUN_TYPE$/;"	i
RUN_TYPE	rqalpha/const.py	/^class RUN_TYPE(CustomEnum):$/;"	c
RUN_TYPE	rqalpha/mod/rqalpha_mod_sys_stock_realtime/mod.py	/^from rqalpha.const import RUN_TYPE, PERSIST_MODE$/;"	i
RUN_TYPE	rqalpha/model/bar.py	/^from ..const import RUN_TYPE$/;"	i
RUN_TYPE	rqalpha/utils/arg_checker.py	/^from ..const import INSTRUMENT_TYPE, RUN_TYPE$/;"	i
RUN_TYPE	rqalpha/utils/config.py	/^from ..const import RUN_TYPE, PERSIST_MODE, ACCOUNT_TYPE$/;"	i
RealtimeEventSource	rqalpha/mod/rqalpha_mod_sys_stock_realtime/event_source.py	/^class RealtimeEventSource(AbstractEventSource):$/;"	c
RealtimeEventSource	rqalpha/mod/rqalpha_mod_sys_stock_realtime/mod.py	/^from .event_source import RealtimeEventSource$/;"	i
RealtimeTradeMod	rqalpha/mod/rqalpha_mod_sys_stock_realtime/__init__.py	/^    from .mod import RealtimeTradeMod$/;"	i
RealtimeTradeMod	rqalpha/mod/rqalpha_mod_sys_stock_realtime/mod.py	/^class RealtimeTradeMod(AbstractMod):$/;"	c
Risk	rqalpha/mod/rqalpha_mod_sys_analyser/mod.py	/^from rqalpha.utils.risk import Risk$/;"	i
Risk	rqalpha/utils/risk.py	/^class Risk(object):$/;"	c
RiskManagerMod	rqalpha/mod/rqalpha_mod_sys_risk/__init__.py	/^    from .mod import RiskManagerMod$/;"	i
RiskManagerMod	rqalpha/mod/rqalpha_mod_sys_risk/mod.py	/^class RiskManagerMod(AbstractMod):$/;"	c
RqAttrDict	rqalpha/mod/__init__.py	/^from rqalpha.utils import RqAttrDict$/;"	i
RqAttrDict	rqalpha/utils/__init__.py	/^class RqAttrDict(object):$/;"	c
RqAttrDict	rqalpha/utils/config.py	/^from . import RqAttrDict, logger$/;"	i
Rule	rqalpha/data/converter.py	/^Rule = namedtuple('Rule', ['dtype', 'multiplier', 'round'])$/;"	v
RunInfo	rqalpha/core/strategy_context.py	/^class RunInfo(object):$/;"	c
S90	rqalpha/model/instrument.py	/^    S90 = IndustryCodeItem("S90", "综合")$/;"	v	class:IndustryCode
SCHEDULED	rqalpha/const.py	/^    SCHEDULED = "[scheduler函数内]"$/;"	v	class:EXECUTION_PHASE
SELL	rqalpha/const.py	/^    SELL = "SELL"$/;"	v	class:SIDE
SETTLEMENT	rqalpha/events.py	/^    SETTLEMENT = 'settlement'$/;"	v	class:EVENT
SIDE	rqalpha/api/api_base.py	/^from ..const import EXECUTION_PHASE, EXC_TYPE, ORDER_STATUS, SIDE, POSITION_EFFECT, ORDER_TYPE, MATCHING_TYPE, RUN_TYPE$/;"	i
SIDE	rqalpha/api/api_future.py	/^from ..const import EXECUTION_PHASE, SIDE, POSITION_EFFECT, ORDER_TYPE$/;"	i
SIDE	rqalpha/api/api_stock.py	/^from ..const import EXECUTION_PHASE, SIDE, ORDER_TYPE$/;"	i
SIDE	rqalpha/const.py	/^class SIDE(CustomEnum):$/;"	c
SIDE	rqalpha/mod/rqalpha_mod_sys_risk/cash_validator.py	/^from rqalpha.const import SIDE, POSITION_EFFECT, ACCOUNT_TYPE$/;"	i
SIDE	rqalpha/mod/rqalpha_mod_sys_risk/position_validator.py	/^from rqalpha.const import SIDE, POSITION_EFFECT, ACCOUNT_TYPE$/;"	i
SIDE	rqalpha/mod/rqalpha_mod_sys_simulation/decider/slippage.py	/^from rqalpha.const import SIDE$/;"	i
SIDE	rqalpha/mod/rqalpha_mod_sys_simulation/decider/tax.py	/^from rqalpha.const import SIDE$/;"	i
SIDE	rqalpha/mod/rqalpha_mod_sys_simulation/matcher.py	/^from rqalpha.const import ORDER_TYPE, SIDE, BAR_STATUS, MATCHING_TYPE$/;"	i
SIDE	rqalpha/mod/rqalpha_mod_sys_simulation/signal_broker.py	/^from rqalpha.const import BAR_STATUS, SIDE$/;"	i
SIDE	rqalpha/model/account/stock_account.py	/^from ...const import SIDE, ACCOUNT_TYPE$/;"	i
SIDE	rqalpha/model/order.py	/^from ..const import ORDER_STATUS, ORDER_TYPE, SIDE, POSITION_EFFECT$/;"	i
SIDE	rqalpha/model/position/future_position.py	/^from ...const import SIDE, POSITION_EFFECT, ACCOUNT_TYPE$/;"	i
SIDE	rqalpha/model/position/stock_position.py	/^from ...const import ACCOUNT_TYPE, SIDE$/;"	i
SIDE	tests/api/test_api_future.py	/^    from rqalpha.api import buy_close, subscribe, get_order, ORDER_STATUS, POSITION_EFFECT, SIDE$/;"	i
SIDE	tests/api/test_api_future.py	/^    from rqalpha.api import buy_open, subscribe, get_order, ORDER_STATUS, POSITION_EFFECT, SIDE$/;"	i
SIDE	tests/api/test_api_future.py	/^    from rqalpha.api import sell_close, subscribe, get_order, ORDER_STATUS, POSITION_EFFECT, SIDE$/;"	i
SIDE	tests/api/test_api_future.py	/^    from rqalpha.api import sell_open, subscribe, get_order, ORDER_STATUS, POSITION_EFFECT, SIDE$/;"	i
SIDE	tests/api/test_api_stock.py	/^    from rqalpha.api import order_lots, get_order, SIDE, LimitOrder$/;"	i
SIDE	tests/api/test_api_stock.py	/^    from rqalpha.api import order_percent, get_order, SIDE, LimitOrder$/;"	i
SIDE	tests/api/test_api_stock.py	/^    from rqalpha.api import order_shares, get_order, SIDE, LimitOrder$/;"	i
SIDE	tests/api/test_api_stock.py	/^    from rqalpha.api import order_target_percent, get_order, SIDE, LimitOrder$/;"	i
SIDE	tests/api/test_api_stock.py	/^    from rqalpha.api import order_value, get_order, SIDE, LimitOrder$/;"	i
SPECULATION	rqalpha/const.py	/^    SPECULATION = "speculation"$/;"	v	class:HEDGE_TYPE
SPHINXBUILD	docs/Makefile	/^SPHINXBUILD   = sphinx-build$/;"	m
SPHINXBUILD	docs/make.bat	/^	set SPHINXBUILD=sphinx-build$/;"	v
SPHINXBUILD	docs/make.bat	/^set SPHINXBUILD=python -m sphinx.__init__$/;"	v
SPHINXOPTS	docs/Makefile	/^SPHINXOPTS    =$/;"	m
STOCK	rqalpha/const.py	/^    STOCK = 2$/;"	v	class:ACCOUNT_TYPE
STOCK_TRADING_PERIOD	rqalpha/utils/__init__.py	/^from ..utils.default_future_info import STOCK_TRADING_PERIOD, TRADING_PERIOD_DICT$/;"	i
STOCK_TRADING_PERIOD	rqalpha/utils/default_future_info.py	/^STOCK_TRADING_PERIOD = [$/;"	v
SYSTEM_EXC	rqalpha/const.py	/^    SYSTEM_EXC = "SYSTEM_EXC"$/;"	v	class:EXC_TYPE
SYSTEM_MOD_LIST	rqalpha/__main__.py	/^    from rqalpha.mod import SYSTEM_MOD_LIST$/;"	i
SYSTEM_MOD_LIST	rqalpha/cmd.py	/^    from rqalpha.mod import SYSTEM_MOD_LIST$/;"	i
SYSTEM_MOD_LIST	rqalpha/mod/__init__.py	/^SYSTEM_MOD_LIST = [$/;"	v
Scheduler	rqalpha/main.py	/^from .utils.scheduler import Scheduler$/;"	i
Scheduler	rqalpha/utils/scheduler.py	/^class Scheduler(object):$/;"	c
SectorCode	rqalpha/model/instrument.py	/^class SectorCode(object):$/;"	c
SectorCode	rqalpha/utils/__init__.py	/^    from ..model.instrument import SectorCode, SectorCodeItem$/;"	i
SectorCodeItem	rqalpha/api/api_base.py	/^from ..model.instrument import SectorCodeItem, IndustryCodeItem$/;"	i
SectorCodeItem	rqalpha/model/instrument.py	/^class SectorCodeItem(object):$/;"	c
SectorCodeItem	rqalpha/utils/__init__.py	/^    from ..model.instrument import SectorCode, SectorCodeItem$/;"	i
SignalBroker	rqalpha/mod/rqalpha_mod_sys_simulation/mod.py	/^from .signal_broker import SignalBroker$/;"	i
SignalBroker	rqalpha/mod/rqalpha_mod_sys_simulation/signal_broker.py	/^class SignalBroker(AbstractBroker):$/;"	c
SimulationBroker	rqalpha/mod/rqalpha_mod_sys_simulation/mod.py	/^from .simulation_broker import SimulationBroker$/;"	i
SimulationBroker	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_broker.py	/^class SimulationBroker(AbstractBroker, Persistable):$/;"	c
SimulationEventSource	rqalpha/mod/rqalpha_mod_sys_simulation/mod.py	/^from .simulation_event_source import SimulationEventSource$/;"	i
SimulationEventSource	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_event_source.py	/^class SimulationEventSource(AbstractEventSource):$/;"	c
SimulationMod	rqalpha/mod/rqalpha_mod_sys_simulation/__init__.py	/^    from .mod import SimulationMod$/;"	i
SimulationMod	rqalpha/mod/rqalpha_mod_sys_simulation/mod.py	/^class SimulationMod(AbstractMod):$/;"	c
Singleton	rqalpha/utils/__init__.py	/^class Singleton(type):$/;"	c
SlippageDecider	rqalpha/mod/rqalpha_mod_sys_simulation/decider/__init__.py	/^class SlippageDecider(object):$/;"	c
SlippageDecider	rqalpha/mod/rqalpha_mod_sys_simulation/matcher.py	/^from .decider import CommissionDecider, SlippageDecider, TaxDecider$/;"	i
SlippageDecider	rqalpha/mod/rqalpha_mod_sys_simulation/signal_broker.py	/^from .decider import CommissionDecider, SlippageDecider, TaxDecider$/;"	i
SnapshotObject	rqalpha/data/data_proxy.py	/^from ..model.snapshot import SnapshotObject$/;"	i
SnapshotObject	rqalpha/mod/rqalpha_mod_sys_stock_realtime/data_source.py	/^from rqalpha.model.snapshot import SnapshotObject$/;"	i
SnapshotObject	rqalpha/model/snapshot.py	/^class SnapshotObject(object):$/;"	c
SourceCodeStrategyLoader	rqalpha/core/strategy_loader.py	/^class SourceCodeStrategyLoader(AbstractStrategyLoader):$/;"	c
SourceCodeStrategyLoader	rqalpha/main.py	/^from .core.strategy_loader import FileStrategyLoader, SourceCodeStrategyLoader$/;"	i
StockAccount	rqalpha/mod/rqalpha_mod_sys_simulation/utils.py	/^from rqalpha.model.account import StockAccount, FutureAccount$/;"	i
StockAccount	rqalpha/model/account/__init__.py	/^from .stock_account import StockAccount$/;"	i
StockAccount	rqalpha/model/account/benchmark_account.py	/^from .stock_account import StockAccount$/;"	i
StockAccount	rqalpha/model/account/stock_account.py	/^class StockAccount(BaseAccount):$/;"	c
StockBarConverter	rqalpha/data/base_data_source.py	/^from .converter import StockBarConverter, IndexBarConverter$/;"	i
StockBarConverter	rqalpha/data/converter.py	/^StockBarConverter = Converter({$/;"	v
StockCommission	rqalpha/mod/rqalpha_mod_sys_simulation/decider/__init__.py	/^from .commission import StockCommission, FutureCommission$/;"	i
StockCommission	rqalpha/mod/rqalpha_mod_sys_simulation/decider/commission.py	/^class StockCommission(BaseCommission):$/;"	c
StockPosition	rqalpha/main.py	/^    from .model.position import Positions, StockPosition$/;"	i
StockPosition	rqalpha/mod/rqalpha_mod_sys_simulation/utils.py	/^from rqalpha.model.position import Positions, StockPosition, FuturePosition$/;"	i
StockPosition	rqalpha/model/position/__init__.py	/^from .stock_position import StockPosition$/;"	i
StockPosition	rqalpha/model/position/stock_position.py	/^class StockPosition(BasePosition):$/;"	c
StockTax	rqalpha/mod/rqalpha_mod_sys_simulation/decider/__init__.py	/^from .tax import StockTax, FutureTax$/;"	i
StockTax	rqalpha/mod/rqalpha_mod_sys_simulation/decider/tax.py	/^class StockTax(BaseTax):$/;"	c
Strategy	rqalpha/core/strategy.py	/^class Strategy(object):$/;"	c
Strategy	rqalpha/main.py	/^from .core.strategy import Strategy$/;"	i
StrategyContext	rqalpha/core/strategy_context.py	/^class StrategyContext(object):$/;"	c
StrategyContext	rqalpha/main.py	/^from .core.strategy_context import StrategyContext$/;"	i
StrategyUniverse	rqalpha/core/strategy_universe.py	/^class StrategyUniverse(object):$/;"	c
StrategyUniverse	rqalpha/main.py	/^from .core.strategy_universe import StrategyUniverse$/;"	i
StringIO	rqalpha/main.py	/^    from six import StringIO$/;"	i
StringIO	rqalpha/mod/rqalpha_mod_sys_analyser/report.py	/^    from six import StringIO$/;"	i
TEST_DIR	test.py	/^TEST_DIR = os.path.abspath(".\/tests\/")$/;"	v
TEST_OUT	test.py	/^TEST_OUT = os.path.abspath(".\/tests\/outs\/")$/;"	v
TICK	rqalpha/events.py	/^    TICK = 'tick'$/;"	v	class:EVENT
TOTAL	rqalpha/const.py	/^    TOTAL = 0$/;"	v	class:ACCOUNT_TYPE
TRADE	rqalpha/events.py	/^    TRADE = 'trade'$/;"	v	class:EVENT
TRADING_DAYS_A_YEAR	rqalpha/const.py	/^    TRADING_DAYS_A_YEAR = 252$/;"	v	class:DAYS_CNT
TRADING_PERIOD_DICT	rqalpha/utils/__init__.py	/^from ..utils.default_future_info import STOCK_TRADING_PERIOD, TRADING_PERIOD_DICT$/;"	i
TRADING_PERIOD_DICT	rqalpha/utils/default_future_info.py	/^TRADING_PERIOD_DICT = dict()$/;"	v
TUSHARE_CODE_MAPPING	rqalpha/mod/rqalpha_mod_sys_stock_realtime/utils.py	/^TUSHARE_CODE_MAPPING = {$/;"	v
TaxDecider	rqalpha/mod/rqalpha_mod_sys_simulation/decider/__init__.py	/^class TaxDecider(object):$/;"	c
TaxDecider	rqalpha/mod/rqalpha_mod_sys_simulation/matcher.py	/^from .decider import CommissionDecider, SlippageDecider, TaxDecider$/;"	i
TaxDecider	rqalpha/mod/rqalpha_mod_sys_simulation/signal_broker.py	/^from .decider import CommissionDecider, SlippageDecider, TaxDecider$/;"	i
TelecommunicationServices	rqalpha/model/instrument.py	/^    TelecommunicationServices = SectorCodeItem("电信服务", "telecommunication services", 'TelecommunicationServices')$/;"	v	class:SectorCode
Thread	rqalpha/mod/rqalpha_mod_sys_stock_realtime/event_source.py	/^from threading import Thread$/;"	i
Tick	rqalpha/model/snapshot.py	/^from ..model.tick import Tick$/;"	i
Tick	rqalpha/model/tick.py	/^class Tick(object):$/;"	c
TimeRange	rqalpha/utils/__init__.py	/^from ..utils.datetime_func import TimeRange$/;"	i
TimeRange	rqalpha/utils/datetime_func.py	/^TimeRange = namedtuple('TimeRange', ['start', 'end'])$/;"	v
TimeRange	rqalpha/utils/default_future_info.py	/^from .datetime_func import TimeRange$/;"	i
Trade	rqalpha/mod/rqalpha_mod_sys_simulation/matcher.py	/^from rqalpha.model.trade import Trade$/;"	i
Trade	rqalpha/mod/rqalpha_mod_sys_simulation/signal_broker.py	/^from rqalpha.model.trade import Trade$/;"	i
Trade	rqalpha/model/trade.py	/^class Trade(object):$/;"	c
TradingDatesMixin	rqalpha/data/data_proxy.py	/^from .trading_dates_mixin import TradingDatesMixin$/;"	i
TradingDatesMixin	rqalpha/data/trading_dates_mixin.py	/^class TradingDatesMixin(object):$/;"	c
TradingDatesStore	rqalpha/data/base_data_source.py	/^from .trading_dates_store import TradingDatesStore$/;"	i
TradingDatesStore	rqalpha/data/trading_dates_store.py	/^class TradingDatesStore(object):$/;"	c
UNDERLYING_SYMBOL_PATTERN	rqalpha/const.py	/^UNDERLYING_SYMBOL_PATTERN = "([a-zA-Z]+)\\d+"$/;"	v
UNDERLYING_SYMBOL_PATTERN	rqalpha/utils/__init__.py	/^from ..const import EXC_TYPE, INSTRUMENT_TYPE, ACCOUNT_TYPE, UNDERLYING_SYMBOL_PATTERN, NIGHT_TRADING_NS$/;"	i
USER_EXC	rqalpha/const.py	/^    USER_EXC = "USER_EXC"$/;"	v	class:EXC_TYPE
UninstallCommand	rqalpha/__main__.py	/^        from pip.commands.uninstall import UninstallCommand$/;"	i
Utilities	rqalpha/model/instrument.py	/^    Utilities = SectorCodeItem("公共服务", "utilities", 'Utilities')$/;"	v	class:SectorCode
VALID_GET_PRICE_FIELDS	rqalpha/api/names.py	/^VALID_GET_PRICE_FIELDS = [$/;"	v
VALID_HISTORY_FIELDS	rqalpha/api/names.py	/^VALID_HISTORY_FIELDS = [$/;"	v
VALID_INSTRUMENT_TYPES	rqalpha/api/names.py	/^VALID_INSTRUMENT_TYPES = [$/;"	v
VALID_MARGIN_FIELDS	rqalpha/api/names.py	/^VALID_MARGIN_FIELDS = [$/;"	v
VALID_SHARE_FIELDS	rqalpha/api/names.py	/^VALID_SHARE_FIELDS = [$/;"	v
VALID_TENORS	rqalpha/api/names.py	/^VALID_TENORS = [$/;"	v
VALID_TURNOVER_FIELDS	rqalpha/api/names.py	/^VALID_TURNOVER_FIELDS = ($/;"	v
VALID_XUEQIU_FIELDS	rqalpha/api/names.py	/^VALID_XUEQIU_FIELDS = [$/;"	v
WEEKLY	rqalpha/utils/risk.py	/^WEEKLY = 'weekly'$/;"	v
WEEKS_PER_YEAR	rqalpha/utils/risk.py	/^WEEKS_PER_YEAR = 52$/;"	v
YEARLY	rqalpha/utils/risk.py	/^YEARLY = 'yearly'$/;"	v
YIELD_CURVE_DURATION	rqalpha/data/risk_free_helper.py	/^YIELD_CURVE_DURATION = sorted(YIELD_CURVE_TENORS.keys())$/;"	v
YIELD_CURVE_TENORS	rqalpha/data/risk_free_helper.py	/^YIELD_CURVE_TENORS = {$/;"	v
YieldCurveStore	rqalpha/data/base_data_source.py	/^from .yield_curve_store import YieldCurveStore$/;"	i
YieldCurveStore	rqalpha/data/yield_curve_store.py	/^class YieldCurveStore(object):$/;"	c
_	rqalpha/api/api_base.py	/^from ..utils.i18n import gettext as _$/;"	i
_	rqalpha/api/api_future.py	/^from ..utils.i18n import gettext as _$/;"	i
_	rqalpha/api/api_stock.py	/^from ..utils.i18n import gettext as _$/;"	i
_	rqalpha/core/strategy.py	/^from ..utils.i18n import gettext as _$/;"	i
_	rqalpha/core/strategy_context.py	/^from ..utils.i18n import gettext as _$/;"	i
_	rqalpha/execution_context.py	/^from .utils.i18n import gettext as _$/;"	i
_	rqalpha/main.py	/^from .utils.i18n import gettext as _$/;"	i
_	rqalpha/mod/__init__.py	/^from rqalpha.utils.i18n import gettext as _$/;"	i
_	rqalpha/mod/rqalpha_mod_sys_analyser/plot.py	/^    def _(txt):$/;"	f	function:plot_result
_	rqalpha/mod/rqalpha_mod_sys_risk/cash_validator.py	/^from rqalpha.utils.i18n import gettext as _$/;"	i
_	rqalpha/mod/rqalpha_mod_sys_risk/is_trading_validator.py	/^from rqalpha.utils.i18n import gettext as _$/;"	i
_	rqalpha/mod/rqalpha_mod_sys_risk/position_validator.py	/^from rqalpha.utils.i18n import gettext as _$/;"	i
_	rqalpha/mod/rqalpha_mod_sys_risk/price_validator.py	/^from rqalpha.utils.i18n import gettext as _$/;"	i
_	rqalpha/mod/rqalpha_mod_sys_simulation/decider/slippage.py	/^from rqalpha.utils.i18n import gettext as _$/;"	i
_	rqalpha/mod/rqalpha_mod_sys_simulation/matcher.py	/^from rqalpha.utils.i18n import gettext as _$/;"	i
_	rqalpha/mod/rqalpha_mod_sys_simulation/mod.py	/^from rqalpha.utils.i18n import gettext as _$/;"	i
_	rqalpha/mod/rqalpha_mod_sys_simulation/signal_broker.py	/^from rqalpha.utils.i18n import gettext as _$/;"	i
_	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_broker.py	/^from rqalpha.utils.i18n import gettext as _$/;"	i
_	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_event_source.py	/^from rqalpha.utils.i18n import gettext as _$/;"	i
_	rqalpha/model/account/future_account.py	/^from ...utils.i18n import gettext as _$/;"	i
_	rqalpha/model/account/stock_account.py	/^from ...utils.i18n import gettext as _$/;"	i
_	rqalpha/model/bar.py	/^from ..utils.i18n import gettext as _$/;"	i
_	rqalpha/utils/__init__.py	/^from ..utils.i18n import gettext as _$/;"	i
_	rqalpha/utils/arg_checker.py	/^from ..utils.i18n import gettext as _$/;"	i
_	rqalpha/utils/config.py	/^from ..utils.i18n import gettext as _, localization$/;"	i
_FUTURE_FIELDS	rqalpha/model/snapshot.py	/^    _FUTURE_FIELDS = _STOCK_FIELDS + [('open_interest', np.uint32), ('prev_settlement', np.float64)]$/;"	v	class:SnapshotObject
_FUTURE_FIELD_DTYPE	rqalpha/model/snapshot.py	/^    _FUTURE_FIELD_DTYPE = np.dtype(_FUTURE_FIELDS)$/;"	v	class:SnapshotObject
_FUTURE_FIELD_NAMES	rqalpha/model/snapshot.py	/^    _FUTURE_FIELD_NAMES = [_n for _n, _ in _FUTURE_FIELDS]$/;"	v	class:SnapshotObject
_NANDict	rqalpha/model/snapshot.py	/^    _NANDict = {_n: np.nan for _n in _FUTURE_FIELD_NAMES}$/;"	v	class:SnapshotObject
_STOCK_FIELDS	rqalpha/model/snapshot.py	/^    _STOCK_FIELDS = [$/;"	v	class:SnapshotObject
_STOCK_FIELD_DTYPE	rqalpha/model/snapshot.py	/^    _STOCK_FIELD_DTYPE = np.dtype(_STOCK_FIELDS)$/;"	v	class:SnapshotObject
_STOCK_FIELD_NAMES	rqalpha/model/snapshot.py	/^    _STOCK_FIELD_NAMES = [_n for _n, _ in _STOCK_FIELDS]$/;"	v	class:SnapshotObject
_TRADING_DATES	rqalpha/utils/scheduler.py	/^    _TRADING_DATES = None$/;"	v	class:Scheduler
__all__	rqalpha/__init__.py	/^__all__ = [$/;"	v
__all__	rqalpha/api/api_base.py	/^__all__ = [$/;"	v
__all__	rqalpha/api/api_future.py	/^__all__ = [$/;"	v
__all__	rqalpha/api/api_stock.py	/^__all__ = [$/;"	v
__all__	rqalpha/utils/logger.py	/^__all__ = [$/;"	v
__call__	rqalpha/utils/__init__.py	/^    def __call__(cls, *args, **kwargs):$/;"	m	class:Singleton	file:
__config__	rqalpha/mod/rqalpha_mod_sys_analyser/__init__.py	/^__config__ = {$/;"	v
__config__	rqalpha/mod/rqalpha_mod_sys_progress/__init__.py	/^__config__ = {$/;"	v
__config__	rqalpha/mod/rqalpha_mod_sys_risk/__init__.py	/^__config__ = {$/;"	v
__config__	rqalpha/mod/rqalpha_mod_sys_simulation/__init__.py	/^__config__ = {$/;"	v
__config__	rqalpha/mod/rqalpha_mod_sys_stock_realtime/__init__.py	/^__config__ = {$/;"	v
__config__	tests/test_f_buy_and_hold.py	/^__config__ = {$/;"	v
__config__	tests/test_f_macd.py	/^__config__ = {$/;"	v
__config__	tests/test_f_mean_reverting.py	/^__config__ = {$/;"	v
__config__	tests/test_s_buy_and_hold.py	/^__config__ = {$/;"	v
__config__	tests/test_s_dma.py	/^__config__ = {$/;"	v
__config__	tests/test_s_dual_thrust.py	/^__config__ = {$/;"	v
__config__	tests/test_s_golden_cross.py	/^__config__ = {$/;"	v
__config__	tests/test_s_scheduler.py	/^__config__ = {$/;"	v
__config__	tests/test_s_turtle.py	/^__config__ = {$/;"	v
__contains__	rqalpha/model/bar.py	/^    def __contains__(self, o):$/;"	m	class:BarMap	file:
__enter__	rqalpha/execution_context.py	/^    def __enter__(self):$/;"	m	class:ExecutionContext	file:
__enter__	rqalpha/utils/exception.py	/^    def __enter__(self):$/;"	m	class:ModifyExceptionFromType	file:
__exit__	rqalpha/execution_context.py	/^    def __exit__(self, exc_type, exc_val, exc_tb):$/;"	m	class:ExecutionContext	file:
__exit__	rqalpha/utils/exception.py	/^    def __exit__(self, exc_type, exc_val, exc_tb):$/;"	m	class:ModifyExceptionFromType	file:
__from_create__	rqalpha/model/order.py	/^    def __from_create__(cls, calendar_dt, trading_dt, order_book_id, quantity, side, style, position_effect):$/;"	m	class:Order	file:
__from_create__	rqalpha/model/trade.py	/^    def __from_create__(cls, order_id, calendar_dt, trading_dt, price, amount, side, position_effect, order_book_id,$/;"	m	class:Trade	file:
__get__	rqalpha/utils/cached_property.py	/^    def __get__(self, obj, cls):$/;"	m	class:CachedProperty	file:
__getattr__	rqalpha/data/data_proxy.py	/^    def __getattr__(self, item):$/;"	m	class:DataProxy	file:
__getattr__	rqalpha/utils/__init__.py	/^    def __getattr__(self, _):$/;"	m	class:Nop	file:
__getitem__	rqalpha/model/bar.py	/^    def __getitem__(self, key):$/;"	m	class:BarMap	file:
__getitem__	rqalpha/model/bar.py	/^    def __getitem__(self, key):$/;"	m	class:BarObject	file:
__getitem__	rqalpha/model/snapshot.py	/^    def __getitem__(self, key):$/;"	m	class:SnapshotObject	file:
__getitem__	rqalpha/model/tick.py	/^    def __getitem__(self, key):$/;"	m	class:Tick	file:
__init__	rqalpha/core/bar_dict_price_board.py	/^    def __init__(self, bar_dict):$/;"	m	class:BarDictPriceBoard
__init__	rqalpha/core/executor.py	/^    def __init__(self, env):$/;"	m	class:Executor
__init__	rqalpha/core/strategy.py	/^    def __init__(self, event_bus, scope, ucontext):$/;"	m	class:Strategy
__init__	rqalpha/core/strategy_context.py	/^    def __init__(self):$/;"	m	class:StrategyContext
__init__	rqalpha/core/strategy_context.py	/^    def __init__(self, config):$/;"	m	class:RunInfo
__init__	rqalpha/core/strategy_universe.py	/^    def __init__(self):$/;"	m	class:StrategyUniverse
__init__	rqalpha/data/base_data_source.py	/^    def __init__(self, path):$/;"	m	class:BaseDataSource
__init__	rqalpha/data/converter.py	/^    def __init__(self, rules):$/;"	m	class:Converter
__init__	rqalpha/data/data_proxy.py	/^    def __init__(self, data_source):$/;"	m	class:DataProxy
__init__	rqalpha/data/date_set.py	/^    def __init__(self, f):$/;"	m	class:DateSet
__init__	rqalpha/data/daybar_store.py	/^    def __init__(self, main, converter):$/;"	m	class:DayBarStore
__init__	rqalpha/data/dividend_store.py	/^    def __init__(self, f):$/;"	m	class:DividendStore
__init__	rqalpha/data/instrument_mixin.py	/^    def __init__(self, instruments):$/;"	m	class:InstrumentMixin
__init__	rqalpha/data/instrument_store.py	/^    def __init__(self, f):$/;"	m	class:InstrumentStore
__init__	rqalpha/data/trading_dates_mixin.py	/^    def __init__(self, dates):$/;"	m	class:TradingDatesMixin
__init__	rqalpha/data/trading_dates_store.py	/^    def __init__(self, f):$/;"	m	class:TradingDatesStore
__init__	rqalpha/data/yield_curve_store.py	/^    def __init__(self, f):$/;"	m	class:YieldCurveStore
__init__	rqalpha/environment.py	/^    def __init__(self, config):$/;"	m	class:Environment
__init__	rqalpha/events.py	/^    def __init__(self):$/;"	m	class:EventBus
__init__	rqalpha/events.py	/^    def __init__(self, event_type, **kwargs):$/;"	m	class:Event
__init__	rqalpha/execution_context.py	/^    def __init__(self):$/;"	m	class:ContextStack
__init__	rqalpha/execution_context.py	/^    def __init__(self, phase):$/;"	m	class:ExecutionContext
__init__	rqalpha/mod/__init__.py	/^    def __init__(self):$/;"	m	class:ModHandler
__init__	rqalpha/mod/rqalpha_mod_sys_analyser/mod.py	/^    def __init__(self):$/;"	m	class:AnalyserMod
__init__	rqalpha/mod/rqalpha_mod_sys_funcat/mod.py	/^            def __init__(self):$/;"	m	class:FuncatAPIMod.start_up.RQAlphaDataBackend
__init__	rqalpha/mod/rqalpha_mod_sys_progress/mod.py	/^    def __init__(self):$/;"	m	class:ProgressMod
__init__	rqalpha/mod/rqalpha_mod_sys_risk/cash_validator.py	/^    def __init__(self, env):$/;"	m	class:CashValidator
__init__	rqalpha/mod/rqalpha_mod_sys_risk/is_trading_validator.py	/^    def __init__(self, env):$/;"	m	class:IsTradingValidator
__init__	rqalpha/mod/rqalpha_mod_sys_risk/price_validator.py	/^    def __init__(self, env):$/;"	m	class:PriceValidator
__init__	rqalpha/mod/rqalpha_mod_sys_simulation/decider/__init__.py	/^    def __init__(self, multiplier):$/;"	m	class:CommissionDecider
__init__	rqalpha/mod/rqalpha_mod_sys_simulation/decider/__init__.py	/^    def __init__(self, rate):$/;"	m	class:SlippageDecider
__init__	rqalpha/mod/rqalpha_mod_sys_simulation/decider/__init__.py	/^    def __init__(self, rate=None):$/;"	m	class:TaxDecider
__init__	rqalpha/mod/rqalpha_mod_sys_simulation/decider/commission.py	/^    def __init__(self, multiplier, hedge_type=HEDGE_TYPE.SPECULATION):$/;"	m	class:FutureCommission
__init__	rqalpha/mod/rqalpha_mod_sys_simulation/decider/commission.py	/^    def __init__(self, multiplier, min_commission=5):$/;"	m	class:StockCommission
__init__	rqalpha/mod/rqalpha_mod_sys_simulation/decider/slippage.py	/^    def __init__(self, rate=0.):$/;"	m	class:PriceRatioSlippage
__init__	rqalpha/mod/rqalpha_mod_sys_simulation/decider/tax.py	/^    def __init__(self, rate=0):$/;"	m	class:FutureTax
__init__	rqalpha/mod/rqalpha_mod_sys_simulation/decider/tax.py	/^    def __init__(self, rate=None):$/;"	m	class:StockTax
__init__	rqalpha/mod/rqalpha_mod_sys_simulation/matcher.py	/^    def __init__(self, mod_config):$/;"	m	class:Matcher
__init__	rqalpha/mod/rqalpha_mod_sys_simulation/mod.py	/^    def __init__(self):$/;"	m	class:SimulationMod
__init__	rqalpha/mod/rqalpha_mod_sys_simulation/signal_broker.py	/^    def __init__(self, env, mod_config):$/;"	m	class:SignalBroker
__init__	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_broker.py	/^    def __init__(self, env, mod_config):$/;"	m	class:SimulationBroker
__init__	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_event_source.py	/^    def __init__(self, env, account_list):$/;"	m	class:SimulationEventSource
__init__	rqalpha/mod/rqalpha_mod_sys_stock_realtime/data_source.py	/^    def __init__(self, path):$/;"	m	class:DataSource
__init__	rqalpha/mod/rqalpha_mod_sys_stock_realtime/event_source.py	/^    def __init__(self, fps):$/;"	m	class:RealtimeEventSource
__init__	rqalpha/model/account/base_account.py	/^    def __init__(self, total_cash, positions, backward_trade_set=set(), register_event=True):$/;"	m	class:BaseAccount
__init__	rqalpha/model/account/benchmark_account.py	/^    def __init__(self, total_cash, positions, backward_trade_set=set(), dividend_receivable=None):$/;"	m	class:BenchmarkAccount
__init__	rqalpha/model/account/stock_account.py	/^    def __init__(self, total_cash, positions, backward_trade_set=set(), dividend_receivable=None, register_event=True):$/;"	m	class:StockAccount
__init__	rqalpha/model/bar.py	/^    def __init__(self, data_proxy, frequency):$/;"	m	class:BarMap
__init__	rqalpha/model/bar.py	/^    def __init__(self, instrument, data, dt=None):$/;"	m	class:BarObject
__init__	rqalpha/model/instrument.py	/^    def __init__(self, cn, en, name):$/;"	m	class:SectorCodeItem
__init__	rqalpha/model/instrument.py	/^    def __init__(self, code, name):$/;"	m	class:IndustryCodeItem
__init__	rqalpha/model/instrument.py	/^    def __init__(self, dic):$/;"	m	class:Instrument
__init__	rqalpha/model/order.py	/^    def __init__(self):$/;"	m	class:Order
__init__	rqalpha/model/order.py	/^    def __init__(self, limit_price):$/;"	m	class:LimitOrder
__init__	rqalpha/model/portfolio.py	/^    def __init__(self, accounts):$/;"	m	class:MixedPositions
__init__	rqalpha/model/portfolio.py	/^    def __init__(self, start_date, static_unit_net_value, units, accounts, register_event=True):$/;"	m	class:Portfolio
__init__	rqalpha/model/position/__init__.py	/^    def __init__(self, position_cls):$/;"	m	class:Positions
__init__	rqalpha/model/position/base_position.py	/^    def __init__(self, order_book_id):$/;"	m	class:BasePosition
__init__	rqalpha/model/position/future_position.py	/^    def __init__(self, order_book_id):$/;"	m	class:FuturePosition
__init__	rqalpha/model/position/stock_position.py	/^    def __init__(self, order_book_id):$/;"	m	class:StockPosition
__init__	rqalpha/model/snapshot.py	/^    def __init__(self, instrument, data, dt=None):$/;"	m	class:SnapshotObject
__init__	rqalpha/model/tick.py	/^    def __init__(self, order_book_id, tick):$/;"	m	class:Tick
__init__	rqalpha/model/trade.py	/^    def __init__(self):$/;"	m	class:Trade
__init__	rqalpha/utils/__init__.py	/^    def __init__(self):$/;"	m	class:Nop
__init__	rqalpha/utils/__init__.py	/^    def __init__(self, d=None):$/;"	m	class:RqAttrDict
__init__	rqalpha/utils/arg_checker.py	/^    def __init__(self, arg_name):$/;"	m	class:ArgumentChecker
__init__	rqalpha/utils/cached_property.py	/^    def __init__(self, func):$/;"	m	class:CachedProperty
__init__	rqalpha/utils/click_helper.py	/^    def __init__(self, tz=None):$/;"	m	class:Date
__init__	rqalpha/utils/disk_persist_provider.py	/^    def __init__(self, path=".\/persist"):$/;"	m	class:DiskPersistProvider
__init__	rqalpha/utils/exception.py	/^    def __init__(self):$/;"	m	class:CustomError
__init__	rqalpha/utils/exception.py	/^    def __init__(self, error):$/;"	m	class:CustomException
__init__	rqalpha/utils/exception.py	/^    def __init__(self, exc_from_type, force=False):$/;"	m	class:ModifyExceptionFromType
__init__	rqalpha/utils/i18n.py	/^    def __init__(self, trans=None):$/;"	m	class:Localization
__init__	rqalpha/utils/persisit_helper.py	/^    def __init__(self, persist_provider, event_bus, persist_mode):$/;"	m	class:PersistHelper
__init__	rqalpha/utils/persisit_helper.py	/^    def __init__(self, scheduler):$/;"	m	class:CoreObjectsPersistProxy
__init__	rqalpha/utils/plot_store.py	/^    def __init__(self):$/;"	m	class:PlotStore
__init__	rqalpha/utils/risk.py	/^    def __init__(self, daily_returns, benchmark_daily_returns, risk_free_rate, days, period=DAILY):$/;"	m	class:Risk
__init__	rqalpha/utils/scheduler.py	/^    def __init__(self, frequency):$/;"	m	class:Scheduler
__iter__	rqalpha/model/portfolio.py	/^    def __iter__(self):$/;"	m	class:MixedPositions	file:
__iter__	rqalpha/utils/__init__.py	/^    def __iter__(self):$/;"	m	class:RqAttrDict	file:
__len__	rqalpha/model/bar.py	/^    def __len__(self):$/;"	m	class:BarMap	file:
__len__	rqalpha/model/portfolio.py	/^    def __len__(self):$/;"	m	class:MixedPositions	file:
__main_version__	rqalpha/__init__.py	/^__main_version__ = "%s.%s.x" % (version_info[0], version_info[1])$/;"	v
__missing__	rqalpha/model/portfolio.py	/^    def __missing__(self, key):$/;"	m	class:MixedPositions	file:
__missing__	rqalpha/model/position/__init__.py	/^    def __missing__(self, key):$/;"	m	class:Positions	file:
__repr__	rqalpha/const.py	/^    def __repr__(self):$/;"	m	class:CustomEnum	file:
__repr__	rqalpha/core/strategy_context.py	/^    __repr__ = property_repr$/;"	v	class:RunInfo
__repr__	rqalpha/core/strategy_context.py	/^    def __repr__(self):$/;"	m	class:StrategyContext	file:
__repr__	rqalpha/events.py	/^    def __repr__(self):$/;"	m	class:Event	file:
__repr__	rqalpha/model/bar.py	/^    def __repr__(self):$/;"	m	class:BarMap	file:
__repr__	rqalpha/model/bar.py	/^    def __repr__(self):$/;"	m	class:BarObject	file:
__repr__	rqalpha/model/instrument.py	/^    def __repr__(self):$/;"	m	class:IndustryCodeItem	file:
__repr__	rqalpha/model/instrument.py	/^    def __repr__(self):$/;"	m	class:Instrument	file:
__repr__	rqalpha/model/instrument.py	/^    def __repr__(self):$/;"	m	class:SectorCodeItem	file:
__repr__	rqalpha/model/order.py	/^    __repr__ = ORDER_TYPE.LIMIT.__repr__$/;"	v	class:LimitOrder
__repr__	rqalpha/model/order.py	/^    __repr__ = ORDER_TYPE.MARKET.__repr__$/;"	v	class:MarketOrder
__repr__	rqalpha/model/order.py	/^    __repr__ = property_repr$/;"	v	class:Order
__repr__	rqalpha/model/portfolio.py	/^    __repr__ = property_repr$/;"	v	class:Portfolio
__repr__	rqalpha/model/portfolio.py	/^    def __repr__(self):$/;"	m	class:MixedPositions	file:
__repr__	rqalpha/model/position/base_position.py	/^    __repr__ = property_repr$/;"	v	class:BasePosition
__repr__	rqalpha/model/snapshot.py	/^    def __repr__(self):$/;"	m	class:SnapshotObject	file:
__repr__	rqalpha/model/tick.py	/^    def __repr__(self):$/;"	m	class:Tick	file:
__repr__	rqalpha/model/trade.py	/^    __repr__ = property_repr$/;"	v	class:Trade
__repr__	rqalpha/utils/__init__.py	/^    def __repr__(self):$/;"	m	class:RqAttrDict	file:
__repr__	rqalpha/utils/exception.py	/^    def __repr__(self):$/;"	m	class:CustomError	file:
__simple_object__	rqalpha/model/order.py	/^    def __simple_object__(self):$/;"	m	class:Order	file:
__simple_object__	rqalpha/model/trade.py	/^    def __simple_object__(self):$/;"	m	class:Trade	file:
__subclasshook__	rqalpha/interface.py	/^    def __subclasshook__(cls, C):$/;"	m	class:Persistable	file:
__version__	rqalpha/__init__.py	/^__version__ = pkgutil.get_data(__package__, 'VERSION.txt').decode('ascii').strip()$/;"	v
_adjust_start_date	rqalpha/main.py	/^def _adjust_start_date(config, data_proxy):$/;"	f
_all_day_bars_of	rqalpha/data/base_data_source.py	/^    def _all_day_bars_of(self, instrument):$/;"	m	class:BaseDataSource
_always_true	rqalpha/utils/scheduler.py	/^    def _always_true():$/;"	m	class:Scheduler
_annual_factor	rqalpha/utils/risk.py	/^def _annual_factor(period):$/;"	f
_apply_trade	rqalpha/model/account/future_account.py	/^    def _apply_trade(self, trade):$/;"	m	class:FutureAccount
_apply_trade	rqalpha/model/account/stock_account.py	/^    def _apply_trade(self, trade):$/;"	m	class:StockAccount
_are_fields_valid	rqalpha/data/base_data_source.py	/^    def _are_fields_valid(fields, valid_fields):$/;"	m	class:BaseDataSource
_are_valid_instruments	rqalpha/utils/arg_checker.py	/^    def _are_valid_instruments(self, func_name, values):$/;"	m	class:ArgumentChecker
_are_valid_query_entities	rqalpha/utils/arg_checker.py	/^    def _are_valid_query_entities(self, func_name, entities):$/;"	m	class:ArgumentChecker
_bar_status	rqalpha/model/bar.py	/^    def _bar_status(self):$/;"	m	class:BarObject
_before_trading	rqalpha/model/account/stock_account.py	/^    def _before_trading(self, event):$/;"	m	class:StockAccount
_buy_holding_cost	rqalpha/model/position/future_position.py	/^    def _buy_holding_cost(self):$/;"	m	class:FuturePosition
_cal_realized_pnl	rqalpha/model/position/future_position.py	/^    def _cal_realized_pnl(self, cost_price, trade_price, side, consumed_quantity):$/;"	m	class:FuturePosition
_calc_benchmark_volatility	rqalpha/utils/risk.py	/^    def _calc_benchmark_volatility(self):$/;"	m	class:Risk
_calc_downside_risk	rqalpha/utils/risk.py	/^    def _calc_downside_risk(self):$/;"	m	class:Risk
_calc_tracking_error	rqalpha/utils/risk.py	/^    def _calc_tracking_error(self):$/;"	m	class:Risk
_calc_volatility	rqalpha/utils/risk.py	/^    def _calc_volatility(self):$/;"	m	class:Risk
_clear_de_listed	rqalpha/core/strategy_universe.py	/^    def _clear_de_listed(self, event):$/;"	m	class:StrategyUniverse
_close_holding	rqalpha/model/position/future_position.py	/^    def _close_holding(self, trade):$/;"	m	class:FuturePosition
_collect_daily	rqalpha/mod/rqalpha_mod_sys_analyser/mod.py	/^    def _collect_daily(self, event):$/;"	m	class:AnalyserMod
_collect_order	rqalpha/mod/rqalpha_mod_sys_analyser/mod.py	/^    def _collect_order(self, event):$/;"	m	class:AnalyserMod
_collect_trade	rqalpha/mod/rqalpha_mod_sys_analyser/mod.py	/^    def _collect_trade(self, event):$/;"	m	class:AnalyserMod
_convert_int_to_date	rqalpha/utils/datetime_func.py	/^def _convert_int_to_date(dt_int):$/;"	f
_create_deal_price_decider	rqalpha/mod/rqalpha_mod_sys_simulation/matcher.py	/^    def _create_deal_price_decider(self, matching_type):$/;"	m	class:Matcher
_enum_to_str	rqalpha/model/order.py	/^    def _enum_to_str(v):$/;"	m	class:Order
_env	rqalpha/environment.py	/^    _env = None$/;"	v	class:Environment
_fill_month	rqalpha/utils/scheduler.py	/^    def _fill_month(self):$/;"	m	class:Scheduler
_fill_week	rqalpha/utils/scheduler.py	/^    def _fill_week(self):$/;"	m	class:Scheduler
_filtered_day_bars	rqalpha/data/base_data_source.py	/^    def _filtered_day_bars(self, instrument):$/;"	m	class:BaseDataSource
_fix_date	rqalpha/model/instrument.py	/^    def _fix_date(ds, dflt):$/;"	m	class:Instrument
_frozen_cash_of_order	rqalpha/model/account/future_account.py	/^    def _frozen_cash_of_order(order):$/;"	m	class:FutureAccount
_frozen_cash_of_trade	rqalpha/model/account/future_account.py	/^    def _frozen_cash_of_trade(trade):$/;"	m	class:FutureAccount
_future_validator	rqalpha/mod/rqalpha_mod_sys_risk/cash_validator.py	/^    def _future_validator(self, account, order):$/;"	m	class:CashValidator
_future_validator	rqalpha/mod/rqalpha_mod_sys_risk/position_validator.py	/^    def _future_validator(account, order):$/;"	m	class:PositionValidator
_get_future_trading_date	rqalpha/data/trading_dates_mixin.py	/^    def _get_future_trading_date(self, dt):$/;"	m	class:TradingDatesMixin
_get_future_trading_minutes	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_event_source.py	/^    def _get_future_trading_minutes(self, trading_date):$/;"	m	class:SimulationEventSource
_get_prev_close	rqalpha/data/data_proxy.py	/^    def _get_prev_close(self, order_book_id, dt):$/;"	m	class:DataProxy
_get_prev_settlement	rqalpha/data/data_proxy.py	/^    def _get_prev_settlement(self, instrument, dt):$/;"	m	class:DataProxy
_get_previous_trading_date	rqalpha/data/trading_dates_mixin.py	/^    def _get_previous_trading_date(self, date):$/;"	m	class:TradingDatesMixin
_get_set	rqalpha/data/date_set.py	/^    def _get_set(self, s, e):$/;"	m	class:DateSet
_get_stock_trading_minutes	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_event_source.py	/^    def _get_stock_trading_minutes(trading_date):$/;"	m	class:SimulationEventSource
_get_trading_minutes	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_event_source.py	/^    def _get_trading_minutes(self, trading_date):$/;"	m	class:SimulationEventSource
_get_universe	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_event_source.py	/^    def _get_universe(self):$/;"	m	class:SimulationEventSource
_handle_dividend_book_closure	rqalpha/model/account/stock_account.py	/^    def _handle_dividend_book_closure(self, trading_date):$/;"	m	class:StockAccount
_handle_dividend_payable	rqalpha/model/account/stock_account.py	/^    def _handle_dividend_payable(self, trading_date):$/;"	m	class:StockAccount
_handle_split	rqalpha/model/account/stock_account.py	/^    def _handle_split(self, trading_date):$/;"	m	class:StockAccount
_index_of	rqalpha/data/base_data_source.py	/^    def _index_of(self, instrument):$/;"	m	class:BaseDataSource
_init	rqalpha/mod/rqalpha_mod_sys_progress/mod.py	/^    def _init(self, event):$/;"	m	class:ProgressMod
_instances	rqalpha/utils/__init__.py	/^    _instances = {}$/;"	v	class:Singleton
_instrument	rqalpha/data/instrument_mixin.py	/^    def _instrument(self, sym_or_id):$/;"	m	class:InstrumentMixin
_is_before_trading	rqalpha/utils/scheduler.py	/^    def _is_before_trading(self):$/;"	m	class:Scheduler
_is_nth_trading_day_in_month	rqalpha/utils/scheduler.py	/^    def _is_nth_trading_day_in_month(self, n):$/;"	m	class:Scheduler
_is_nth_trading_day_in_week	rqalpha/utils/scheduler.py	/^    def _is_nth_trading_day_in_week(self, n):$/;"	m	class:Scheduler
_is_number	rqalpha/utils/arg_checker.py	/^    def _is_number(self, func_name, value):$/;"	m	class:ArgumentChecker
_is_valid_frequency	rqalpha/utils/arg_checker.py	/^    def _is_valid_frequency(self, func_name, value):$/;"	m	class:ArgumentChecker
_is_valid_future	rqalpha/utils/arg_checker.py	/^    def _is_valid_future(self, func_name, value):$/;"	m	class:ArgumentChecker
_is_valid_instrument	rqalpha/utils/arg_checker.py	/^    def _is_valid_instrument(self, func_name, value):$/;"	m	class:ArgumentChecker
_is_valid_interval	rqalpha/utils/arg_checker.py	/^    def _is_valid_interval(self, func_name, value):$/;"	m	class:ArgumentChecker
_is_valid_stock	rqalpha/utils/arg_checker.py	/^    def _is_valid_stock(self, func_name, value):$/;"	m	class:ArgumentChecker
_is_weekday	rqalpha/utils/scheduler.py	/^    def _is_weekday(self, wd):$/;"	m	class:Scheduler
_lock_settlement	rqalpha/core/bar_dict_price_board.py	/^    def _lock_settlement(self, event):$/;"	m	class:BarDictPriceBoard
_match	rqalpha/mod/rqalpha_mod_sys_simulation/signal_broker.py	/^    def _match(self, account, order):$/;"	m	class:SignalBroker
_match	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_broker.py	/^    def _match(self, order_book_id=None):$/;"	m	class:SimulationBroker
_minutes_since_midnight	rqalpha/utils/scheduler.py	/^    def _minutes_since_midnight(hour, minute):$/;"	m	class:Scheduler
_on_bar	rqalpha/model/account/benchmark_account.py	/^    def _on_bar(self, event):$/;"	m	class:BenchmarkAccount
_on_order_creation_reject	rqalpha/model/account/future_account.py	/^    def _on_order_creation_reject(self, event):$/;"	m	class:FutureAccount
_on_order_pending_new	rqalpha/model/account/future_account.py	/^    def _on_order_pending_new(self, event):$/;"	m	class:FutureAccount
_on_order_pending_new	rqalpha/model/account/stock_account.py	/^    def _on_order_pending_new(self, event):$/;"	m	class:StockAccount
_on_order_unsolicited_update	rqalpha/model/account/future_account.py	/^    def _on_order_unsolicited_update(self, event):$/;"	m	class:FutureAccount
_on_order_unsolicited_update	rqalpha/model/account/stock_account.py	/^    def _on_order_unsolicited_update(self, event):$/;"	m	class:StockAccount
_on_settlement	rqalpha/model/account/benchmark_account.py	/^    def _on_settlement(self, event):$/;"	m	class:BenchmarkAccount
_on_settlement	rqalpha/model/account/stock_account.py	/^    def _on_settlement(self, event):$/;"	m	class:StockAccount
_on_tick	rqalpha/model/account/benchmark_account.py	/^    def _on_tick(self, event):$/;"	m	class:BenchmarkAccount
_on_trade	rqalpha/model/account/future_account.py	/^    def _on_trade(self, event):$/;"	m	class:FutureAccount
_on_trade	rqalpha/model/account/stock_account.py	/^    def _on_trade(self, event):$/;"	m	class:StockAccount
_on_universe_changed	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_event_source.py	/^    def _on_universe_changed(self, event):$/;"	m	class:SimulationEventSource
_p	rqalpha/data/base_data_source.py	/^        def _p(name):$/;"	f	function:BaseDataSource.__init__
_pop	rqalpha/execution_context.py	/^    def _pop(self):$/;"	m	class:ExecutionContext
_post_settlement	rqalpha/model/portfolio.py	/^    def _post_settlement(self, event):$/;"	m	class:Portfolio
_pre_before_trading	rqalpha/mod/rqalpha_mod_sys_funcat/mod.py	/^            def _pre_before_trading(self, *args, **kwargs):$/;"	m	class:FuncatAPIMod.start_up.RQAlphaDataBackend
_pre_handle_bar	rqalpha/mod/rqalpha_mod_sys_funcat/mod.py	/^            def _pre_handle_bar(self, *args, **kwargs):$/;"	m	class:FuncatAPIMod.start_up.RQAlphaDataBackend
_push	rqalpha/execution_context.py	/^    def _push(self):$/;"	m	class:ExecutionContext
_remove_	rqalpha/data/daybar_store.py	/^    def _remove_(l, v):$/;"	m	class:DayBarStore
_repr	rqalpha/utils/exception.py	/^        def _repr(v):$/;"	f	function:CustomError.__repr__
_safe_convert	rqalpha/mod/rqalpha_mod_sys_analyser/mod.py	/^    def _safe_convert(value, ndigits=3):$/;"	m	class:AnalyserMod
_scheduler	rqalpha/utils/scheduler.py	/^_scheduler = None$/;"	v
_sell_holding_cost	rqalpha/model/position/future_position.py	/^    def _sell_holding_cost(self):$/;"	m	class:FuturePosition
_settlement	rqalpha/model/account/future_account.py	/^    def _settlement(self, event):$/;"	m	class:FutureAccount
_should_trigger	rqalpha/utils/scheduler.py	/^    def _should_trigger(self, n):$/;"	m	class:Scheduler
_stock_validator	rqalpha/mod/rqalpha_mod_sys_risk/cash_validator.py	/^    def _stock_validator(self, account, order):$/;"	m	class:CashValidator
_stock_validator	rqalpha/mod/rqalpha_mod_sys_risk/position_validator.py	/^    def _stock_validator(account, order):$/;"	m	class:PositionValidator
_str_to_enum	rqalpha/model/order.py	/^    def _str_to_enum(enum_class, s):$/;"	m	class:Order
_symbol	rqalpha/mod/rqalpha_mod_sys_analyser/mod.py	/^    def _symbol(self, order_book_id):$/;"	m	class:AnalyserMod
_tick	rqalpha/mod/rqalpha_mod_sys_progress/mod.py	/^    def _tick(self, event):$/;"	m	class:ProgressMod
_time_rule_for	rqalpha/utils/scheduler.py	/^    def _time_rule_for(self, time_rule):$/;"	m	class:Scheduler
_to_account_record	rqalpha/mod/rqalpha_mod_sys_analyser/mod.py	/^    def _to_account_record(self, date, account):$/;"	m	class:AnalyserMod
_to_dt_int	rqalpha/data/date_set.py	/^        def _to_dt_int(d):$/;"	f	function:DateSet.contains
_to_portfolio_record	rqalpha/mod/rqalpha_mod_sys_analyser/mod.py	/^    def _to_portfolio_record(self, date, portfolio):$/;"	m	class:AnalyserMod
_to_position_record	rqalpha/mod/rqalpha_mod_sys_analyser/mod.py	/^    def _to_position_record(self, date, order_book_id, position):$/;"	m	class:AnalyserMod
_to_trade_record	rqalpha/mod/rqalpha_mod_sys_analyser/mod.py	/^    def _to_trade_record(self, trade):$/;"	m	class:AnalyserMod
_unlock_settlement	rqalpha/core/bar_dict_price_board.py	/^    def _unlock_settlement(self, event):$/;"	m	class:BarDictPriceBoard
_update_dict_recursive	rqalpha/utils/__init__.py	/^    def _update_dict_recursive(target, other):$/;"	m	class:RqAttrDict
_validate_benchmark	rqalpha/main.py	/^def _validate_benchmark(config, data_proxy):$/;"	f
_verify_function	rqalpha/utils/scheduler.py	/^def _verify_function(name, func):$/;"	f
a1	rqalpha/model/tick.py	/^    def a1(self):$/;"	m	class:Tick
a1_v	rqalpha/model/tick.py	/^    def a1_v(self):$/;"	m	class:Tick
a2	rqalpha/model/tick.py	/^    def a2(self):$/;"	m	class:Tick
a2_v	rqalpha/model/tick.py	/^    def a2_v(self):$/;"	m	class:Tick
a3	rqalpha/model/tick.py	/^    def a3(self):$/;"	m	class:Tick
a3_v	rqalpha/model/tick.py	/^    def a3_v(self):$/;"	m	class:Tick
a4	rqalpha/model/tick.py	/^    def a4(self):$/;"	m	class:Tick
a4_v	rqalpha/model/tick.py	/^    def a4_v(self):$/;"	m	class:Tick
a5	rqalpha/model/tick.py	/^    def a5(self):$/;"	m	class:Tick
a5_v	rqalpha/model/tick.py	/^    def a5_v(self):$/;"	m	class:Tick
abc	rqalpha/interface.py	/^import abc$/;"	i
abc	rqalpha/mod/rqalpha_mod_sys_simulation/decider/commission.py	/^import abc$/;"	i
abc	rqalpha/mod/rqalpha_mod_sys_simulation/decider/slippage.py	/^import abc$/;"	i
abc	rqalpha/mod/rqalpha_mod_sys_simulation/decider/tax.py	/^import abc$/;"	i
acc_net_value	rqalpha/model/bar.py	/^    def acc_net_value(self):$/;"	m	class:BarObject
accounts	rqalpha/model/portfolio.py	/^    def accounts(self):$/;"	m	class:Portfolio
active	rqalpha/model/order.py	/^    def active(self):$/;"	m	class:Order
add_frontend_validator	rqalpha/environment.py	/^    def add_frontend_validator(self, validator):$/;"	m	class:Environment
add_listener	rqalpha/events.py	/^    def add_listener(self, event, listener):$/;"	m	class:EventBus
add_plot	rqalpha/environment.py	/^    def add_plot(self, series_name, value):$/;"	m	class:Environment
add_plot	rqalpha/utils/plot_store.py	/^    def add_plot(self, dt, series_name, value):$/;"	m	class:PlotStore
add_stack_info	rqalpha/utils/exception.py	/^    def add_stack_info(self, filename, lineno, func_name, code, local_variables={}):$/;"	m	class:CustomError
after_trading	rqalpha/core/strategy.py	/^    def after_trading(self, event):$/;"	m	class:Strategy
after_trading	rqalpha/examples/test_pt.py	/^def after_trading(context):$/;"	f
after_trading	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_broker.py	/^    def after_trading(self, event):$/;"	m	class:SimulationBroker
after_trading	tests/test_s_buy_and_hold.py	/^def after_trading(context):$/;"	f
all	rqalpha/utils/risk.py	/^    def all(self):$/;"	m	class:Risk
all_instruments	rqalpha/api/api_base.py	/^def all_instruments(type=None):$/;"	f
all_instruments	rqalpha/data/instrument_mixin.py	/^    def all_instruments(self, itype='CS'):$/;"	m	class:InstrumentMixin
all_instruments	tests/api/test_api_base.py	/^    from rqalpha.api import all_instruments$/;"	i
alpha	rqalpha/utils/risk.py	/^    def alpha(self):$/;"	m	class:Risk
annotation	rqalpha/utils/cached_property.py	/^    def annotation(self):$/;"	m	class:CachedProperty
annual_downside_risk	rqalpha/utils/risk.py	/^    def annual_downside_risk(self):$/;"	m	class:Risk
annual_return	rqalpha/utils/risk.py	/^    def annual_return(self):$/;"	m	class:Risk
annual_tracking_error	rqalpha/utils/risk.py	/^    def annual_tracking_error(self):$/;"	m	class:Risk
annual_volatility	rqalpha/utils/risk.py	/^    def annual_volatility(self):$/;"	m	class:Risk
annualized_returns	rqalpha/model/portfolio.py	/^    def annualized_returns(self):$/;"	m	class:Portfolio
api_base	rqalpha/api/helper.py	/^from . import api_base, api_future, api_stock$/;"	i
api_exc_patch	rqalpha/api/api_base.py	/^def api_exc_patch(func):$/;"	f
api_future	rqalpha/api/helper.py	/^from . import api_base, api_future, api_stock$/;"	i
api_helper	rqalpha/main.py	/^from .api import helper as api_helper$/;"	i
api_rule_check_wrapper	rqalpha/utils/arg_checker.py	/^        def api_rule_check_wrapper(*args, **kwargs):$/;"	f	function:apply_rules.decorator
api_stock	rqalpha/api/helper.py	/^from . import api_base, api_future, api_stock$/;"	i
apply_rules	rqalpha/api/api_base.py	/^from ..utils.arg_checker import apply_rules, verify_that$/;"	i
apply_rules	rqalpha/api/api_future.py	/^from ..utils.arg_checker import apply_rules, verify_that$/;"	i
apply_rules	rqalpha/api/api_stock.py	/^from ..utils.arg_checker import apply_rules, verify_that$/;"	i
apply_rules	rqalpha/utils/arg_checker.py	/^def apply_rules(*rules):$/;"	f
apply_settlement	rqalpha/model/position/base_position.py	/^    def apply_settlement(self):$/;"	m	class:BasePosition
apply_settlement	rqalpha/model/position/future_position.py	/^    def apply_settlement(self):$/;"	m	class:FuturePosition
apply_settlement	rqalpha/model/position/stock_position.py	/^    def apply_settlement(self):$/;"	m	class:StockPosition
apply_trade	rqalpha/model/position/base_position.py	/^    def apply_trade(self, trade):$/;"	m	class:BasePosition
apply_trade	rqalpha/model/position/future_position.py	/^    def apply_trade(self, trade):$/;"	m	class:FuturePosition
apply_trade	rqalpha/model/position/stock_position.py	/^    def apply_trade(self, trade):$/;"	m	class:StockPosition
are_valid_fields	rqalpha/utils/arg_checker.py	/^    def are_valid_fields(self, valid_fields, ignore_none=True):$/;"	m	class:ArgumentChecker
are_valid_instruments	rqalpha/utils/arg_checker.py	/^    def are_valid_instruments(self):$/;"	m	class:ArgumentChecker
are_valid_query_entities	rqalpha/utils/arg_checker.py	/^    def are_valid_query_entities(self):$/;"	m	class:ArgumentChecker
arg_name	rqalpha/utils/arg_checker.py	/^    def arg_name(self):$/;"	m	class:ArgumentChecker
assure_future_order_book_id	rqalpha/api/api_future.py	/^def assure_future_order_book_id(id_or_symbols):$/;"	f
assure_order_book_id	rqalpha/api/api_base.py	/^def assure_order_book_id(id_or_ins):$/;"	f
assure_stock_order_book_id	rqalpha/api/api_stock.py	/^def assure_stock_order_book_id(id_or_symbols):$/;"	f
author	docs/source/conf.py	/^author = 'RiceQuant'$/;"	v
author	setup.py	/^    author='ricequant',$/;"	v
author_email	setup.py	/^    author_email='public@ricequant.com',$/;"	v
available_data_range	rqalpha/data/base_data_source.py	/^    def available_data_range(self, frequency):$/;"	m	class:BaseDataSource
available_data_range	rqalpha/data/data_proxy.py	/^    def available_data_range(self, frequency):$/;"	m	class:DataProxy
available_data_range	rqalpha/interface.py	/^    def available_data_range(self, frequency):$/;"	m	class:AbstractDataSource
available_data_range	rqalpha/mod/rqalpha_mod_sys_stock_realtime/data_source.py	/^    def available_data_range(self, frequency):$/;"	m	class:DataSource
average_cost	rqalpha/model/position/stock_position.py	/^    def average_cost(self):$/;"	m	class:StockPosition
avg_excess_return	rqalpha/utils/risk.py	/^    def avg_excess_return(self):$/;"	m	class:Risk
avg_price	rqalpha/model/order.py	/^    def avg_price(self):$/;"	m	class:Order
avg_price	rqalpha/model/position/stock_position.py	/^    def avg_price(self):$/;"	m	class:StockPosition
b1	rqalpha/model/tick.py	/^    def b1(self):$/;"	m	class:Tick
b1_v	rqalpha/model/tick.py	/^    def b1_v(self):$/;"	m	class:Tick
b2	rqalpha/model/tick.py	/^    def b2(self):$/;"	m	class:Tick
b2_v	rqalpha/model/tick.py	/^    def b2_v(self):$/;"	m	class:Tick
b3	rqalpha/model/tick.py	/^    def b3(self):$/;"	m	class:Tick
b3_v	rqalpha/model/tick.py	/^    def b3_v(self):$/;"	m	class:Tick
b4	rqalpha/model/tick.py	/^    def b4(self):$/;"	m	class:Tick
b4_v	rqalpha/model/tick.py	/^    def b4_v(self):$/;"	m	class:Tick
b5	rqalpha/model/tick.py	/^    def b5(self):$/;"	m	class:Tick
b5_v	rqalpha/model/tick.py	/^    def b5_v(self):$/;"	m	class:Tick
basis_spread	rqalpha/model/bar.py	/^    def basis_spread(self):$/;"	m	class:BarObject
bcolz	rqalpha/data/date_set.py	/^import bcolz$/;"	i
bcolz	rqalpha/data/daybar_store.py	/^import bcolz$/;"	i
bcolz	rqalpha/data/dividend_store.py	/^import bcolz$/;"	i
bcolz	rqalpha/data/trading_dates_store.py	/^import bcolz$/;"	i
bcolz	rqalpha/data/yield_curve_store.py	/^import bcolz$/;"	i
before_trading	rqalpha/core/strategy.py	/^    def before_trading(self, event):$/;"	m	class:Strategy
before_trading	rqalpha/examples/buy_and_hold.py	/^def before_trading(context):$/;"	f
before_trading	rqalpha/examples/pair_trading.py	/^def before_trading(context):$/;"	f
before_trading	rqalpha/examples/test_pt.py	/^def before_trading(context):$/;"	f
before_trading	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_broker.py	/^    def before_trading(self, event):$/;"	m	class:SimulationBroker
before_trading	tests/test_s_buy_and_hold.py	/^def before_trading(context):$/;"	f
before_trading_	rqalpha/utils/scheduler.py	/^    def before_trading_(self, event):$/;"	m	class:Scheduler
benchmark	rqalpha/core/strategy_context.py	/^    def benchmark(self):$/;"	m	class:RunInfo
benchmark	rqalpha/core/strategy_context.py	/^    def benchmark(self):$/;"	m	class:StrategyContext
benchmark	rqalpha/core/strategy_context.py	/^    def benchmark(self, value):$/;"	m	class:StrategyContext
benchmark_annual_return	rqalpha/utils/risk.py	/^    def benchmark_annual_return(self):$/;"	m	class:Risk
benchmark_annual_volatility	rqalpha/utils/risk.py	/^    def benchmark_annual_volatility(self):$/;"	m	class:Risk
benchmark_return	rqalpha/utils/risk.py	/^    def benchmark_return(self):$/;"	m	class:Risk
benchmark_volatility	rqalpha/utils/risk.py	/^    def benchmark_volatility(self):$/;"	m	class:Risk
beta	rqalpha/utils/risk.py	/^    def beta(self):$/;"	m	class:Risk
better_exceptions	rqalpha/main.py	/^import better_exceptions$/;"	i
better_exceptions	rqalpha/utils/logger.py	/^import better_exceptions$/;"	i
bought_quantity	rqalpha/model/position/stock_position.py	/^    def bought_quantity(self):$/;"	m	class:StockPosition
bought_value	rqalpha/model/position/stock_position.py	/^    def bought_value(self):$/;"	m	class:StockPosition
buy_avg_holding_price	rqalpha/model/position/future_position.py	/^    def buy_avg_holding_price(self):$/;"	m	class:FuturePosition
buy_avg_open_price	rqalpha/model/position/future_position.py	/^    def buy_avg_open_price(self):$/;"	m	class:FuturePosition
buy_close	rqalpha/api/api_future.py	/^def buy_close(id_or_ins, amount, style=MarketOrder()):$/;"	f
buy_close	tests/api/test_api_future.py	/^    from rqalpha.api import buy_close, subscribe, get_order, ORDER_STATUS, POSITION_EFFECT, SIDE$/;"	i
buy_close_order_quantity	rqalpha/model/position/future_position.py	/^    def buy_close_order_quantity(self):$/;"	m	class:FuturePosition
buy_holding_list	rqalpha/model/position/future_position.py	/^    def buy_holding_list(self):$/;"	m	class:FuturePosition
buy_holding_pnl	rqalpha/model/position/future_position.py	/^    def buy_holding_pnl(self):$/;"	m	class:FuturePosition
buy_margin	rqalpha/model/account/future_account.py	/^    def buy_margin(self):$/;"	m	class:FutureAccount
buy_margin	rqalpha/model/position/future_position.py	/^    def buy_margin(self):$/;"	m	class:FuturePosition
buy_market_value	rqalpha/model/position/future_position.py	/^    def buy_market_value(self):$/;"	m	class:FuturePosition
buy_old_quantity	rqalpha/model/position/future_position.py	/^    def buy_old_quantity(self):$/;"	m	class:FuturePosition
buy_open	rqalpha/api/api_future.py	/^def buy_open(id_or_ins, amount, style=MarketOrder()):$/;"	f
buy_open	tests/api/test_api_future.py	/^    from rqalpha.api import buy_open, subscribe, get_order, ORDER_STATUS, POSITION_EFFECT, SIDE$/;"	i
buy_open_order_quantity	rqalpha/model/position/future_position.py	/^    def buy_open_order_quantity(self):$/;"	m	class:FuturePosition
buy_pnl	rqalpha/model/position/future_position.py	/^    def buy_pnl(self):$/;"	m	class:FuturePosition
buy_quantity	rqalpha/model/position/future_position.py	/^    def buy_quantity(self):$/;"	m	class:FuturePosition
buy_realized_pnl	rqalpha/model/position/future_position.py	/^    def buy_realized_pnl(self):$/;"	m	class:FuturePosition
buy_today_quantity	rqalpha/model/position/future_position.py	/^    def buy_today_quantity(self):$/;"	m	class:FuturePosition
buy_transaction_cost	rqalpha/model/position/future_position.py	/^    def buy_transaction_cost(self):$/;"	m	class:FuturePosition
cal_close_today_amount	rqalpha/model/position/future_position.py	/^    def cal_close_today_amount(self, trade_amount, trade_side):$/;"	m	class:FuturePosition
cal_close_today_amount	rqalpha/model/position/stock_position.py	/^    def cal_close_today_amount(self, *args):$/;"	m	class:StockPosition
calmar	rqalpha/utils/risk.py	/^    def calmar(self):$/;"	m	class:Risk
can_cancel_order	rqalpha/environment.py	/^    def can_cancel_order(self, order):$/;"	m	class:Environment
can_cancel_order	rqalpha/interface.py	/^    def can_cancel_order(self, account, order):$/;"	m	class:AbstractFrontendValidator
can_cancel_order	rqalpha/mod/rqalpha_mod_sys_risk/cash_validator.py	/^    def can_cancel_order(self, account, order):$/;"	m	class:CashValidator
can_cancel_order	rqalpha/mod/rqalpha_mod_sys_risk/is_trading_validator.py	/^    def can_cancel_order(self, account, order):$/;"	m	class:IsTradingValidator
can_cancel_order	rqalpha/mod/rqalpha_mod_sys_risk/position_validator.py	/^    def can_cancel_order(self, account, order):$/;"	m	class:PositionValidator
can_cancel_order	rqalpha/mod/rqalpha_mod_sys_risk/price_validator.py	/^    def can_cancel_order(self, account, order):$/;"	m	class:PriceValidator
can_submit_order	rqalpha/environment.py	/^    def can_submit_order(self, order):$/;"	m	class:Environment
can_submit_order	rqalpha/interface.py	/^    def can_submit_order(self, account, order):$/;"	m	class:AbstractFrontendValidator
can_submit_order	rqalpha/mod/rqalpha_mod_sys_risk/cash_validator.py	/^    def can_submit_order(self, account, order):$/;"	m	class:CashValidator
can_submit_order	rqalpha/mod/rqalpha_mod_sys_risk/is_trading_validator.py	/^    def can_submit_order(self, account, order):$/;"	m	class:IsTradingValidator
can_submit_order	rqalpha/mod/rqalpha_mod_sys_risk/position_validator.py	/^    def can_submit_order(self, account, order):$/;"	m	class:PositionValidator
can_submit_order	rqalpha/mod/rqalpha_mod_sys_risk/price_validator.py	/^    def can_submit_order(self, account, order):$/;"	m	class:PriceValidator
cancel_hold_strategy	rqalpha/environment.py	/^    def cancel_hold_strategy(self):$/;"	m	class:Environment
cancel_order	rqalpha/api/api_base.py	/^def cancel_order(order):$/;"	f
cancel_order	rqalpha/interface.py	/^    def cancel_order(self, order):$/;"	m	class:AbstractBroker
cancel_order	rqalpha/mod/rqalpha_mod_sys_simulation/signal_broker.py	/^    def cancel_order(self, order):$/;"	m	class:SignalBroker
cancel_order	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_broker.py	/^    def cancel_order(self, order):$/;"	m	class:SimulationBroker
cancel_order	tests/api/test_api_base.py	/^    from rqalpha.api import order_shares, cancel_order, get_order$/;"	i
cash	rqalpha/model/account/base_account.py	/^    def cash(self):$/;"	m	class:BaseAccount
cash	rqalpha/model/portfolio.py	/^    def cash(self):$/;"	m	class:Portfolio
check_are_valid_fields	rqalpha/utils/arg_checker.py	/^        def check_are_valid_fields(func_name, fields):$/;"	f	function:ArgumentChecker.are_valid_fields
check_greater_or_equal_than	rqalpha/utils/arg_checker.py	/^        def check_greater_or_equal_than(func_name, value):$/;"	f	function:ArgumentChecker.is_greater_or_equal_than
check_greater_than	rqalpha/utils/arg_checker.py	/^        def check_greater_than(func_name, value):$/;"	f	function:ArgumentChecker.is_greater_than
check_is_in	rqalpha/utils/arg_checker.py	/^        def check_is_in(func_name, value):$/;"	f	function:ArgumentChecker.is_in
check_is_instance_of	rqalpha/utils/arg_checker.py	/^        def check_is_instance_of(func_name, value):$/;"	f	function:ArgumentChecker.is_instance_of
check_is_valid_date	rqalpha/utils/arg_checker.py	/^        def check_is_valid_date(func_name, value):$/;"	f	function:ArgumentChecker.is_valid_date
check_less_or_equal_than	rqalpha/utils/arg_checker.py	/^        def check_less_or_equal_than(func_name, value):$/;"	f	function:ArgumentChecker.is_less_or_equal_than
check_less_than	rqalpha/utils/arg_checker.py	/^        def check_less_than(func_name, value):$/;"	f	function:ArgumentChecker.is_less_than
classifiers	setup.py	/^    classifiers=[$/;"	v
clear_cache	rqalpha/utils/cached_property.py	/^def clear_cache(obj):$/;"	f
cli	rqalpha/__main__.py	/^def cli(ctx, verbose):$/;"	f
cli	rqalpha/mod/rqalpha_mod_sys_analyser/__init__.py	/^from rqalpha.__main__ import cli$/;"	i
cli	rqalpha/mod/rqalpha_mod_sys_progress/__init__.py	/^from rqalpha.__main__ import cli$/;"	i
cli	rqalpha/mod/rqalpha_mod_sys_risk/__init__.py	/^from rqalpha.__main__ import cli$/;"	i
cli	rqalpha/mod/rqalpha_mod_sys_simulation/__init__.py	/^from rqalpha.__main__ import cli$/;"	i
cli_prefix	rqalpha/mod/rqalpha_mod_sys_progress/__init__.py	/^cli_prefix = "mod__sys_progress__"$/;"	v
cli_prefix	rqalpha/mod/rqalpha_mod_sys_risk/__init__.py	/^cli_prefix = "mod__sys_risk__"$/;"	v
cli_prefix	rqalpha/mod/rqalpha_mod_sys_simulation/__init__.py	/^cli_prefix = "mod__sys_simulation__"$/;"	v
click	rqalpha/__main__.py	/^import click$/;"	i
click	rqalpha/cmd.py	/^import click$/;"	i
click	rqalpha/main.py	/^import click$/;"	i
click	rqalpha/mod/rqalpha_mod_sys_analyser/__init__.py	/^import click$/;"	i
click	rqalpha/mod/rqalpha_mod_sys_progress/__init__.py	/^import click$/;"	i
click	rqalpha/mod/rqalpha_mod_sys_progress/mod.py	/^import click$/;"	i
click	rqalpha/mod/rqalpha_mod_sys_risk/__init__.py	/^import click$/;"	i
click	rqalpha/mod/rqalpha_mod_sys_simulation/__init__.py	/^import click$/;"	i
click	rqalpha/utils/click_helper.py	/^import click$/;"	i
clock_worker	rqalpha/mod/rqalpha_mod_sys_stock_realtime/event_source.py	/^    def clock_worker(self):$/;"	m	class:RealtimeEventSource
closable_buy_quantity	rqalpha/model/position/future_position.py	/^    def closable_buy_quantity(self):$/;"	m	class:FuturePosition
closable_sell_quantity	rqalpha/model/position/future_position.py	/^    def closable_sell_quantity(self):$/;"	m	class:FuturePosition
close	rqalpha/model/bar.py	/^    def close(self):$/;"	m	class:BarObject
close_today_amount	rqalpha/model/trade.py	/^    def close_today_amount(self):$/;"	m	class:Trade
cmd_cli	rqalpha/__init__.py	/^from .cmd import cmd_cli$/;"	i
cmd_cli	rqalpha/cmd.py	/^def cmd_cli(ctx, verbose):$/;"	f
cn	rqalpha/model/instrument.py	/^    def cn(self):$/;"	m	class:SectorCodeItem
code	rqalpha/model/instrument.py	/^    def code(self):$/;"	m	class:IndustryCodeItem
codecs	rqalpha/core/strategy_loader.py	/^import codecs$/;"	i
codecs	rqalpha/utils/config.py	/^import codecs$/;"	i
collections	rqalpha/utils/__init__.py	/^import collections$/;"	i
collections	rqalpha/utils/dict_func.py	/^import collections$/;"	i
commission	rqalpha/core/strategy_context.py	/^    def commission(self):$/;"	m	class:StrategyContext
commission	rqalpha/core/strategy_context.py	/^    def commission(self, value):$/;"	m	class:StrategyContext
commission	rqalpha/model/trade.py	/^    def commission(self):$/;"	m	class:Trade
commission_multiplier	rqalpha/core/strategy_context.py	/^    def commission_multiplier(self):$/;"	m	class:RunInfo
compile_strategy	rqalpha/core/strategy_loader.py	/^from ..utils.strategy_loader_help import compile_strategy$/;"	i
compile_strategy	rqalpha/utils/strategy_loader_help.py	/^def compile_strategy(source_code, strategy, scope):$/;"	f
concept	rqalpha/api/api_base.py	/^def concept(*concept_names):$/;"	f
concept	rqalpha/data/instrument_mixin.py	/^    def concept(self, *concepts):$/;"	m	class:InstrumentMixin
concept	tests/api/test_api_base.py	/^    from rqalpha.api import concept, instruments$/;"	i
const	rqalpha/main.py	/^from . import const$/;"	i
const	rqalpha/utils/exception.py	/^from .. import const$/;"	i
const	rqalpha/utils/rq_json.py	/^from .. import const$/;"	i
contains	rqalpha/data/date_set.py	/^    def contains(self, order_book_id, dates):$/;"	m	class:DateSet
contextmanager	rqalpha/execution_context.py	/^from contextlib import contextmanager$/;"	i
contextmanager	rqalpha/utils/__init__.py	/^from contextlib import contextmanager$/;"	i
contract_multiplier	rqalpha/model/position/future_position.py	/^    def contract_multiplier(self):$/;"	m	class:FuturePosition
convert	rqalpha/data/converter.py	/^    def convert(self, name, data):$/;"	m	class:Converter
convert	rqalpha/utils/click_helper.py	/^    def convert(self, value, param, ctx):$/;"	m	class:Date
convert_date_time_ms_int_to_datetime	rqalpha/model/tick.py	/^from rqalpha.utils.datetime_func import convert_date_time_ms_int_to_datetime$/;"	i
convert_date_time_ms_int_to_datetime	rqalpha/utils/datetime_func.py	/^def convert_date_time_ms_int_to_datetime(date_int, time_int):$/;"	f
convert_date_to_date_int	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_event_source.py	/^from rqalpha.utils.datetime_func import convert_int_to_datetime, convert_date_to_date_int, convert_dt_to_int$/;"	i
convert_date_to_date_int	rqalpha/utils/datetime_func.py	/^def convert_date_to_date_int(dt):$/;"	f
convert_date_to_int	rqalpha/data/base_data_source.py	/^from ..utils.datetime_func import convert_date_to_int, convert_int_to_date$/;"	i
convert_date_to_int	rqalpha/utils/datetime_func.py	/^def convert_date_to_int(dt):$/;"	f
convert_dict_to_json	rqalpha/utils/rq_json.py	/^def convert_dict_to_json(dict_obj):$/;"	f
convert_dt_to_int	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_event_source.py	/^from rqalpha.utils.datetime_func import convert_int_to_datetime, convert_date_to_date_int, convert_dt_to_int$/;"	i
convert_dt_to_int	rqalpha/mod/rqalpha_mod_sys_stock_realtime/utils.py	/^from rqalpha.utils.datetime_func import convert_dt_to_int$/;"	i
convert_dt_to_int	rqalpha/utils/datetime_func.py	/^def convert_dt_to_int(dt):$/;"	f
convert_int_to_date	rqalpha/data/base_data_source.py	/^from ..utils.datetime_func import convert_date_to_int, convert_int_to_date$/;"	i
convert_int_to_date	rqalpha/utils/datetime_func.py	/^def convert_int_to_date(dt_int):$/;"	f
convert_int_to_datetime	rqalpha/data/data_proxy.py	/^from ..utils.datetime_func import convert_int_to_datetime$/;"	i
convert_int_to_datetime	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_event_source.py	/^from rqalpha.utils.datetime_func import convert_int_to_datetime, convert_date_to_date_int, convert_dt_to_int$/;"	i
convert_int_to_datetime	rqalpha/model/bar.py	/^from ..utils.datetime_func import convert_int_to_datetime$/;"	i
convert_int_to_datetime	rqalpha/model/snapshot.py	/^from ..utils.datetime_func import convert_int_to_datetime$/;"	i
convert_int_to_datetime	rqalpha/utils/datetime_func.py	/^def convert_int_to_datetime(dt_int):$/;"	f
convert_json_to_dict	rqalpha/utils/rq_json.py	/^def convert_json_to_dict(json_str):$/;"	f
copy	rqalpha/core/strategy_universe.py	/^import copy$/;"	i
copy	rqalpha/main.py	/^    import copy$/;"	i
copy	rqalpha/mod/__init__.py	/^import copy$/;"	i
copy	rqalpha/mod/rqalpha_mod_sys_funcat/mod.py	/^import copy$/;"	i
copyright	docs/source/conf.py	/^copyright = '2017, RiceQuant'$/;"	v
cov	test.py	/^        cov = coverage.Coverage()$/;"	v
coverage	test.py	/^import coverage$/;"	i
create_base_scope	rqalpha/main.py	/^def create_base_scope():$/;"	f
create_benchmark_portfolio	rqalpha/main.py	/^def create_benchmark_portfolio(env):$/;"	f
create_custom_exception	rqalpha/execution_context.py	/^        from .utils import create_custom_exception$/;"	i
create_custom_exception	rqalpha/main.py	/^from .utils import create_custom_exception, run_with_user_log_disabled, scheduler as mod_scheduler$/;"	i
create_custom_exception	rqalpha/utils/__init__.py	/^def create_custom_exception(exc_type, exc_val, exc_tb, strategy_filename):$/;"	f
csv	test.py	/^import csv$/;"	i
current_snapshot	rqalpha/api/api_base.py	/^def current_snapshot(id_or_symbol):$/;"	f
current_snapshot	rqalpha/data/base_data_source.py	/^    def current_snapshot(self, instrument, frequency, dt):$/;"	m	class:BaseDataSource
current_snapshot	rqalpha/data/data_proxy.py	/^    def current_snapshot(self, order_book_id, frequency, dt):$/;"	m	class:DataProxy
current_snapshot	rqalpha/interface.py	/^    def current_snapshot(self, instrument, frequency, dt):$/;"	m	class:AbstractDataSource
current_snapshot	rqalpha/mod/rqalpha_mod_sys_stock_realtime/data_source.py	/^    def current_snapshot(self, instrument, frequency, dt):$/;"	m	class:DataSource
custom_decode	rqalpha/utils/rq_json.py	/^def custom_decode(obj):$/;"	f
custom_encode	rqalpha/utils/rq_json.py	/^def custom_encode(obj):$/;"	f
daily_pnl	rqalpha/model/account/future_account.py	/^    def daily_pnl(self):$/;"	m	class:FutureAccount
daily_pnl	rqalpha/model/portfolio.py	/^    def daily_pnl(self):$/;"	m	class:Portfolio
daily_pnl	rqalpha/model/position/future_position.py	/^    def daily_pnl(self):$/;"	m	class:FuturePosition
daily_returns	rqalpha/model/portfolio.py	/^    def daily_returns(self):$/;"	m	class:Portfolio
data_board	rqalpha/mod/rqalpha_mod_sys_stock_realtime/data_source.py	/^from . import data_board$/;"	i
data_board	rqalpha/mod/rqalpha_mod_sys_stock_realtime/event_source.py	/^from . import data_board$/;"	i
datetime	rqalpha/api/api_base.py	/^import datetime$/;"	i
datetime	rqalpha/data/trading_dates_mixin.py	/^import datetime$/;"	i
datetime	rqalpha/main.py	/^import datetime$/;"	i
datetime	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_event_source.py	/^import datetime$/;"	i
datetime	rqalpha/mod/rqalpha_mod_sys_stock_realtime/data_source.py	/^import datetime$/;"	i
datetime	rqalpha/mod/rqalpha_mod_sys_stock_realtime/event_source.py	/^import datetime$/;"	i
datetime	rqalpha/mod/rqalpha_mod_sys_stock_realtime/utils.py	/^import datetime$/;"	i
datetime	rqalpha/model/bar.py	/^    def datetime(self):$/;"	m	class:BarObject
datetime	rqalpha/model/instrument.py	/^import datetime$/;"	i
datetime	rqalpha/model/order.py	/^    def datetime(self):$/;"	m	class:Order
datetime	rqalpha/model/snapshot.py	/^    def datetime(self):$/;"	m	class:SnapshotObject
datetime	rqalpha/model/snapshot.py	/^import datetime$/;"	i
datetime	rqalpha/model/tick.py	/^    def datetime(self):$/;"	m	class:Tick
datetime	rqalpha/model/trade.py	/^    def datetime(self):$/;"	m	class:Trade
datetime	rqalpha/utils/arg_checker.py	/^import datetime$/;"	i
datetime	rqalpha/utils/config.py	/^import datetime$/;"	i
datetime	rqalpha/utils/datetime_func.py	/^import datetime$/;"	i
datetime	rqalpha/utils/rq_json.py	/^import datetime$/;"	i
datetime	rqalpha/utils/scheduler.py	/^import datetime$/;"	i
datetime	test.py	/^from datetime import datetime$/;"	i
datetime	tests/api/test_api_base.py	/^    import datetime$/;"	i
datetime	tests/api/test_api_stock.py	/^import datetime$/;"	i
day	rqalpha/main.py	/^            day = day - datetime.timedelta(days=1)$/;"	v
day	rqalpha/main.py	/^    day = datetime.date.today()$/;"	v
days_from_listed	rqalpha/model/instrument.py	/^    def days_from_listed(self):$/;"	m	class:Instrument
days_to_expire	rqalpha/model/instrument.py	/^    def days_to_expire(self):$/;"	m	class:Instrument
deco	rqalpha/api/api_base.py	/^        def deco(*args, **kwargs):$/;"	f	function:api_exc_patch
decorate_api_exc	rqalpha/api/api_base.py	/^def decorate_api_exc(func):$/;"	f
decorate_api_exc	rqalpha/api/api_future.py	/^from .api_base import decorate_api_exc, instruments$/;"	i
decorate_api_exc	rqalpha/api/api_stock.py	/^from .api_base import decorate_api_exc, instruments$/;"	i
decorator	rqalpha/execution_context.py	/^        def decorator(func):$/;"	f	function:ExecutionContext.enforce_phase
decorator	rqalpha/utils/arg_checker.py	/^    def decorator(func):$/;"	f	function:apply_rules
deep_update	rqalpha/utils/config.py	/^from ..utils.dict_func import deep_update$/;"	i
deep_update	rqalpha/utils/dict_func.py	/^def deep_update(from_dict, to_dict):$/;"	f
default	rqalpha/mod/rqalpha_mod_sys_analyser/__init__.py	/^        default=None,$/;"	v
defaultdict	rqalpha/events.py	/^from collections import defaultdict$/;"	i
defaultdict	rqalpha/mod/rqalpha_mod_sys_analyser/mod.py	/^from collections import defaultdict$/;"	i
defaultdict	rqalpha/mod/rqalpha_mod_sys_simulation/decider/commission.py	/^from collections import defaultdict$/;"	i
defaultdict	rqalpha/mod/rqalpha_mod_sys_simulation/matcher.py	/^from collections import defaultdict$/;"	i
defaultdict	rqalpha/model/account/stock_account.py	/^from collections import defaultdict$/;"	i
defaultdict	rqalpha/utils/plot_store.py	/^from collections import defaultdict$/;"	i
description	setup.py	/^    description='Ricequant Algorithm Trading System',$/;"	v
dict_repr	rqalpha/utils/repr.py	/^def dict_repr(inst):$/;"	f
dirname	setup.py	/^from os.path import dirname, join$/;"	i
disable	rqalpha/__main__.py	/^    def disable(params):$/;"	f	function:mod
discount_rate	rqalpha/model/bar.py	/^    def discount_rate(self):$/;"	m	class:BarObject
dividend_receivable	rqalpha/model/account/stock_account.py	/^    def dividend_receivable(self):$/;"	m	class:StockAccount
dividend_receivable	rqalpha/model/portfolio.py	/^    def dividend_receivable(self):$/;"	m	class:Portfolio
division	rqalpha/api/api_base.py	/^from __future__ import division$/;"	i
division	rqalpha/api/api_future.py	/^from __future__ import division$/;"	i
division	rqalpha/utils/__init__.py	/^from __future__ import division$/;"	i
division	rqalpha/utils/risk.py	/^from __future__ import division$/;"	i
downside_risk	rqalpha/utils/risk.py	/^    def downside_risk(self):$/;"	m	class:Risk
downsize_amount	rqalpha/api/api_stock.py	/^def downsize_amount(amount, position):$/;"	f
dt	rqalpha/model/bar.py	/^    def dt(self):$/;"	m	class:BarMap
dtype_for_	rqalpha/model/snapshot.py	/^    def dtype_for_(instrument):$/;"	m	class:SnapshotObject
dummy_func	rqalpha/utils/__init__.py	/^def dummy_func(*args, **kwargs):$/;"	f
dump_config	rqalpha/__main__.py	/^from .utils.config import parse_config, get_mod_config_path, load_config, dump_config$/;"	i
dump_config	rqalpha/utils/config.py	/^def dump_config(config_path, config, dumper=yaml.RoundTripDumper):$/;"	f
en	rqalpha/model/instrument.py	/^    def en(self):$/;"	m	class:SectorCodeItem
enable	rqalpha/__main__.py	/^    def enable(params):$/;"	f	function:mod
enable_profiler	rqalpha/main.py	/^def enable_profiler(env, scope):$/;"	f
end	docs/make.bat	/^:end$/;"	l
end_date	rqalpha/core/strategy_context.py	/^    def end_date(self):$/;"	m	class:RunInfo
end_time	test.py	/^            end_time = datetime.now()$/;"	v
end_time	test.py	/^        end_time = datetime.now()$/;"	v
enforce_phase	rqalpha/execution_context.py	/^    def enforce_phase(cls, *phases):$/;"	m	class:ExecutionContext
entry_point	rqalpha/__main__.py	/^def entry_point():$/;"	f
entry_point	rqalpha/cmd.py	/^def entry_point():$/;"	f
entry_points	setup.py	/^    entry_points={$/;"	v
enum_type	rqalpha/model/instrument.py	/^    def enum_type(self):$/;"	m	class:Instrument
errno	rqalpha/__main__.py	/^import errno$/;"	i
error_count	test.py	/^        error_count = get_test_files()$/;"	v
events	rqalpha/interface.py	/^    def events(self, start_date, end_date, frequency):$/;"	m	class:AbstractEventSource
events	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_event_source.py	/^    def events(self, start_date, end_date, frequency):$/;"	m	class:SimulationEventSource
events	rqalpha/mod/rqalpha_mod_sys_stock_realtime/event_source.py	/^    def events(self, start_date, end_date, frequency):$/;"	m	class:RealtimeEventSource
examples	rqalpha/__main__.py	/^def examples(directory):$/;"	f
exclude_patterns	docs/source/conf.py	/^exclude_patterns = []$/;"	v
exec_	rqalpha/utils/strategy_loader_help.py	/^from six import exec_$/;"	i
exec_id	rqalpha/model/trade.py	/^    def exec_id(self):$/;"	m	class:Trade
export_as_api	rqalpha/api/api_base.py	/^def export_as_api(func):$/;"	f
export_as_api	rqalpha/api/api_future.py	/^def export_as_api(func):$/;"	f
export_as_api	rqalpha/api/api_stock.py	/^def export_as_api(func):$/;"	f
ext	rqalpha/main.py	/^import jsonpickle.ext.numpy as jsonpickle_numpy$/;"	i
extensions	docs/source/conf.py	/^extensions = [$/;"	v
fast_forward	rqalpha/model/account/base_account.py	/^    def fast_forward(self, orders, trades=list()):$/;"	m	class:BaseAccount
fast_forward	rqalpha/model/account/future_account.py	/^    def fast_forward(self, orders, trades=list()):$/;"	m	class:FutureAccount
fast_forward	rqalpha/model/account/stock_account.py	/^    def fast_forward(self, orders, trades=list()):$/;"	m	class:StockAccount
fast_history	rqalpha/data/data_proxy.py	/^    def fast_history(self, order_book_id, bar_count, frequency, field, dt):$/;"	m	class:DataProxy
field_names	test.py	/^    field_names = ['date_time', 'time_spend']$/;"	v
field_type	rqalpha/data/converter.py	/^    def field_type(self, name, dt):$/;"	m	class:Converter
fields_for_	rqalpha/model/snapshot.py	/^    def fields_for_(instrument):$/;"	m	class:SnapshotObject
fill	rqalpha/model/order.py	/^    def fill(self, trade):$/;"	m	class:Order
filled_quantity	rqalpha/model/order.py	/^    def filled_quantity(self):$/;"	m	class:Order
findfont	rqalpha/mod/rqalpha_mod_sys_analyser/plot.py	/^    from matplotlib.font_manager import findfont, FontProperties$/;"	i
float64	rqalpha/data/converter.py	/^float64 = np.dtype('float64')$/;"	v
format_exception	rqalpha/utils/logger.py	/^def format_exception(exc, value, tb):$/;"	f
formatter	rqalpha/utils/logger.py	/^    def formatter(record, handler):$/;"	f	function:formatter_builder
formatter_builder	rqalpha/utils/logger.py	/^def formatter_builder(tag):$/;"	f
frequency	rqalpha/core/strategy_context.py	/^    def frequency(self):$/;"	m	class:RunInfo
from_utf8	rqalpha/utils/logger.py	/^from .py2 import to_utf8, from_utf8$/;"	i
from_utf8	rqalpha/utils/py2.py	/^def from_utf8(string):$/;"	f
frozen_cash	rqalpha/model/account/base_account.py	/^    def frozen_cash(self):$/;"	m	class:BaseAccount
frozen_price	rqalpha/model/order.py	/^    def frozen_price(self):$/;"	m	class:Order
frozen_price	rqalpha/model/trade.py	/^    def frozen_price(self):$/;"	m	class:Trade
func	tests/api/__init__.py	/^def func():$/;"	f
funcat	rqalpha/mod/rqalpha_mod_sys_funcat/mod.py	/^            import funcat$/;"	i
future_account	rqalpha/core/strategy_context.py	/^    def future_account(self):$/;"	m	class:StrategyContext
future_account	rqalpha/model/portfolio.py	/^    def future_account(self):$/;"	m	class:Portfolio
future_portfolio	rqalpha/core/strategy_context.py	/^    def future_portfolio(self):$/;"	m	class:StrategyContext
future_starting_cash	rqalpha/core/strategy_context.py	/^    def future_starting_cash(self):$/;"	m	class:RunInfo
generate_config	rqalpha/__main__.py	/^def generate_config(directory):$/;"	f
generate_report	rqalpha/mod/rqalpha_mod_sys_analyser/__init__.py	/^    from .report import generate_report$/;"	i
generate_report	rqalpha/mod/rqalpha_mod_sys_analyser/mod.py	/^            from .report import generate_report$/;"	i
generate_report	rqalpha/mod/rqalpha_mod_sys_analyser/report.py	/^def generate_report(result_dict, target_report_csv_path):$/;"	f
get	rqalpha/core/strategy_universe.py	/^    def get(self):$/;"	m	class:StrategyUniverse
get_a1	rqalpha/interface.py	/^    def get_a1(self, order_book_id):$/;"	m	class:AbstractPriceBoard
get_account	rqalpha/environment.py	/^    def get_account(self, order_book_id):$/;"	m	class:Environment
get_account_type	rqalpha/environment.py	/^from .utils import get_account_type$/;"	i
get_account_type	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_event_source.py	/^from rqalpha.utils import get_account_type$/;"	i
get_account_type	rqalpha/model/portfolio.py	/^from ..utils import get_account_type, merge_dicts$/;"	i
get_account_type	rqalpha/utils/__init__.py	/^def get_account_type(order_book_id):$/;"	f
get_all_instruments	rqalpha/data/base_data_source.py	/^    def get_all_instruments(self):$/;"	m	class:BaseDataSource
get_all_instruments	rqalpha/data/instrument_store.py	/^    def get_all_instruments(self):$/;"	m	class:InstrumentStore
get_all_instruments	rqalpha/interface.py	/^    def get_all_instruments(self):$/;"	m	class:AbstractDataSource
get_apis	rqalpha/api/helper.py	/^def get_apis(account_list):$/;"	f
get_atr_and_unit	rqalpha/examples/turtle.py	/^def  get_atr_and_unit( atr_array_result,  atr_length_result, portfolio_value_result):$/;"	f
get_atr_and_unit	tests/test_s_turtle.py	/^def get_atr_and_unit( atr_array_result,  atr_length_result, portfolio_value_result):$/;"	f
get_b1	rqalpha/interface.py	/^    def get_b1(self, order_book_id):$/;"	m	class:AbstractPriceBoard
get_bar	rqalpha/data/base_data_source.py	/^    def get_bar(self, instrument, dt, frequency):$/;"	m	class:BaseDataSource
get_bar	rqalpha/data/data_proxy.py	/^    def get_bar(self, order_book_id, dt, frequency='1d'):$/;"	m	class:DataProxy
get_bar	rqalpha/environment.py	/^    def get_bar(self, order_book_id):$/;"	m	class:Environment
get_bar	rqalpha/interface.py	/^    def get_bar(self, instrument, dt, frequency):$/;"	m	class:AbstractDataSource
get_bar	rqalpha/mod/rqalpha_mod_sys_stock_realtime/data_source.py	/^    def get_bar(self, instrument, dt, frequency):$/;"	m	class:DataSource
get_bars	rqalpha/data/daybar_store.py	/^    def get_bars(self, order_book_id, fields=None):$/;"	m	class:DayBarStore
get_commission	rqalpha/mod/rqalpha_mod_sys_simulation/decider/__init__.py	/^    def get_commission(self, account_type, trade):$/;"	m	class:CommissionDecider
get_commission	rqalpha/mod/rqalpha_mod_sys_simulation/decider/commission.py	/^    def get_commission(self, trade):$/;"	m	class:BaseCommission
get_commission	rqalpha/mod/rqalpha_mod_sys_simulation/decider/commission.py	/^    def get_commission(self, trade):$/;"	m	class:FutureCommission
get_commission	rqalpha/mod/rqalpha_mod_sys_simulation/decider/commission.py	/^    def get_commission(self, trade):$/;"	m	class:StockCommission
get_current_bar_dict	rqalpha/api/ext.py	/^def get_current_bar_dict():$/;"	f
get_date_range	rqalpha/data/daybar_store.py	/^    def get_date_range(self, order_book_id):$/;"	m	class:DayBarStore
get_days	rqalpha/data/date_set.py	/^    def get_days(self, order_book_id):$/;"	m	class:DateSet
get_default_config_path	rqalpha/cmd.py	/^    from rqalpha.utils.config import get_default_config_path, load_config$/;"	i
get_dividend	rqalpha/api/api_base.py	/^def get_dividend(order_book_id, start_date, adjusted=True):$/;"	f
get_dividend	rqalpha/data/base_data_source.py	/^    def get_dividend(self, order_book_id, adjusted=True):$/;"	m	class:BaseDataSource
get_dividend	rqalpha/data/data_proxy.py	/^    def get_dividend(self, order_book_id, adjusted=True):$/;"	m	class:DataProxy
get_dividend	rqalpha/data/dividend_store.py	/^    def get_dividend(self, order_book_id):$/;"	m	class:DividendStore
get_dividend	rqalpha/interface.py	/^    def get_dividend(self, order_book_id, adjusted=True):$/;"	m	class:AbstractDataSource
get_dividend	tests/api/test_api_base.py	/^    from rqalpha.api import get_dividend$/;"	i
get_dividend_by_book_date	rqalpha/data/data_proxy.py	/^    def get_dividend_by_book_date(self, order_book_id, date, adjusted=True):$/;"	m	class:DataProxy
get_exc_from_type	rqalpha/utils/exception.py	/^def get_exc_from_type(exc_val):$/;"	f
get_extreme	rqalpha/examples/turtle.py	/^def get_extreme(array_high_price_result, array_low_price_result):$/;"	f
get_extreme	tests/test_s_turtle.py	/^def get_extreme(array_high_price_result, array_low_price_result):$/;"	f
get_future_commission_info	rqalpha/environment.py	/^    def get_future_commission_info(self, order_book_id, hedge_type):$/;"	m	class:Environment
get_future_contracts	rqalpha/api/api_future.py	/^def get_future_contracts(underlying_symbol):$/;"	f
get_future_contracts	rqalpha/data/instrument_mixin.py	/^    def get_future_contracts(self, underlying, date):$/;"	m	class:InstrumentMixin
get_future_info	rqalpha/data/base_data_source.py	/^    def get_future_info(self, instrument, hedge_type):$/;"	m	class:BaseDataSource
get_future_info	rqalpha/data/data_proxy.py	/^    def get_future_info(self, order_book_id, hedge_type=HEDGE_TYPE.SPECULATION):$/;"	m	class:DataProxy
get_future_info	rqalpha/environment.py	/^    def get_future_info(self, order_book_id, hedge_type):$/;"	m	class:Environment
get_future_info	rqalpha/interface.py	/^    def get_future_info(self, instrument, hedge_type):$/;"	m	class:AbstractDataSource
get_future_margin_rate	rqalpha/environment.py	/^    def get_future_margin_rate(self, order_book_id):$/;"	m	class:Environment
get_future_trading_date	rqalpha/data/trading_dates_mixin.py	/^    def get_future_trading_date(self, dt):$/;"	m	class:TradingDatesMixin
get_instance	rqalpha/environment.py	/^    def get_instance(cls):$/;"	m	class:Environment
get_instrument	rqalpha/environment.py	/^    def get_instrument(self, order_book_id):$/;"	m	class:Environment
get_last_date	rqalpha/utils/datetime_func.py	/^def get_last_date(trading_calendar, dt):$/;"	f
get_last_price	rqalpha/core/bar_dict_price_board.py	/^    def get_last_price(self, order_book_id):$/;"	m	class:BarDictPriceBoard
get_last_price	rqalpha/data/data_proxy.py	/^    def get_last_price(self, order_book_id, dt):$/;"	m	class:DataProxy
get_last_price	rqalpha/environment.py	/^    def get_last_price(self, order_book_id):$/;"	m	class:Environment
get_last_price	rqalpha/interface.py	/^    def get_last_price(self, order_book_id):$/;"	m	class:AbstractPriceBoard
get_last_price	rqalpha/mod/rqalpha_mod_sys_stock_realtime/data_source.py	/^    def get_last_price(self, instrument, dt):$/;"	m	class:DataSource
get_limit_down	rqalpha/core/bar_dict_price_board.py	/^    def get_limit_down(self, order_book_id):$/;"	m	class:BarDictPriceBoard
get_limit_down	rqalpha/interface.py	/^    def get_limit_down(self, order_book_id):$/;"	m	class:AbstractPriceBoard
get_limit_price	rqalpha/model/order.py	/^    def get_limit_price(self):$/;"	m	class:LimitOrder
get_limit_price	rqalpha/model/order.py	/^    def get_limit_price(self):$/;"	m	class:MarketOrder
get_limit_price	rqalpha/model/order.py	/^    def get_limit_price(self):$/;"	m	class:OrderStyle
get_limit_up	rqalpha/core/bar_dict_price_board.py	/^    def get_limit_up(self, order_book_id):$/;"	m	class:BarDictPriceBoard
get_limit_up	rqalpha/interface.py	/^    def get_limit_up(self, order_book_id):$/;"	m	class:AbstractPriceBoard
get_merge_ticks	rqalpha/data/data_proxy.py	/^    def get_merge_ticks(self, order_book_id_list, trading_date, last_dt=None):$/;"	m	class:DataProxy
get_merge_ticks	rqalpha/interface.py	/^    def get_merge_ticks(self, order_book_id_list, trading_date, last_dt=None):$/;"	m	class:AbstractDataSource
get_mod_config_path	rqalpha/__main__.py	/^from .utils.config import parse_config, get_mod_config_path, load_config, dump_config$/;"	i
get_mod_config_path	rqalpha/utils/config.py	/^def get_mod_config_path(generate=False):$/;"	f
get_month_begin_time	rqalpha/utils/datetime_func.py	/^def get_month_begin_time(time=None):$/;"	f
get_month_end_time	rqalpha/utils/datetime_func.py	/^def get_month_end_time(time=None):$/;"	f
get_n_trading_dates_until	rqalpha/data/trading_dates_mixin.py	/^    def get_n_trading_dates_until(self, dt, n):$/;"	m	class:TradingDatesMixin
get_next_trading_date	rqalpha/api/api_base.py	/^def get_next_trading_date(date):$/;"	f
get_next_trading_date	rqalpha/data/trading_dates_mixin.py	/^    def get_next_trading_date(self, date):$/;"	m	class:TradingDatesMixin
get_next_trading_date	tests/api/test_api_base.py	/^    from rqalpha.api import get_next_trading_date$/;"	i
get_nth_previous_trading_date	rqalpha/data/trading_dates_mixin.py	/^    def get_nth_previous_trading_date(self, date, n):$/;"	m	class:TradingDatesMixin
get_open_orders	rqalpha/api/api_base.py	/^def get_open_orders():$/;"	f
get_open_orders	rqalpha/environment.py	/^    def get_open_orders(self, order_book_id=None):$/;"	m	class:Environment
get_open_orders	rqalpha/interface.py	/^    def get_open_orders(self, order_book_id=None):$/;"	m	class:AbstractBroker
get_open_orders	rqalpha/mod/rqalpha_mod_sys_simulation/signal_broker.py	/^    def get_open_orders(self, order_book_id=None):$/;"	m	class:SignalBroker
get_open_orders	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_broker.py	/^    def get_open_orders(self, order_book_id=None):$/;"	m	class:SimulationBroker
get_open_orders	tests/api/test_api_base.py	/^    from rqalpha.api import order_shares, get_open_orders, get_order$/;"	i
get_or_create	rqalpha/model/position/__init__.py	/^    def get_or_create(self, key):$/;"	m	class:Positions
get_order	rqalpha/api/api_base.py	/^def get_order(order):$/;"	f
get_order	tests/api/test_api_base.py	/^    from rqalpha.api import order_shares, cancel_order, get_order$/;"	i
get_order	tests/api/test_api_base.py	/^    from rqalpha.api import order_shares, get_open_orders, get_order$/;"	i
get_order	tests/api/test_api_base.py	/^    from rqalpha.api import order_shares, get_order$/;"	i
get_order	tests/api/test_api_future.py	/^    from rqalpha.api import buy_close, subscribe, get_order, ORDER_STATUS, POSITION_EFFECT, SIDE$/;"	i
get_order	tests/api/test_api_future.py	/^    from rqalpha.api import buy_open, subscribe, get_order, ORDER_STATUS, POSITION_EFFECT, SIDE$/;"	i
get_order	tests/api/test_api_future.py	/^    from rqalpha.api import sell_close, subscribe, get_order, ORDER_STATUS, POSITION_EFFECT, SIDE$/;"	i
get_order	tests/api/test_api_future.py	/^    from rqalpha.api import sell_open, subscribe, get_order, ORDER_STATUS, POSITION_EFFECT, SIDE$/;"	i
get_order	tests/api/test_api_stock.py	/^    from rqalpha.api import order_lots, get_order, SIDE, LimitOrder$/;"	i
get_order	tests/api/test_api_stock.py	/^    from rqalpha.api import order_percent, get_order, SIDE, LimitOrder$/;"	i
get_order	tests/api/test_api_stock.py	/^    from rqalpha.api import order_shares, get_order, SIDE, LimitOrder$/;"	i
get_order	tests/api/test_api_stock.py	/^    from rqalpha.api import order_target_percent, get_order, SIDE, LimitOrder$/;"	i
get_order	tests/api/test_api_stock.py	/^    from rqalpha.api import order_value, get_order, SIDE, LimitOrder$/;"	i
get_order_book_id_list	rqalpha/mod/rqalpha_mod_sys_funcat/mod.py	/^            def get_order_book_id_list(self):$/;"	m	class:FuncatAPIMod.start_up.RQAlphaDataBackend
get_plot_store	rqalpha/environment.py	/^    def get_plot_store(self):$/;"	m	class:Environment
get_plots	rqalpha/utils/plot_store.py	/^    def get_plots(self):$/;"	m	class:PlotStore
get_portfolio	rqalpha/interface.py	/^    def get_portfolio(self):$/;"	m	class:AbstractBroker
get_portfolio	rqalpha/mod/rqalpha_mod_sys_simulation/signal_broker.py	/^    def get_portfolio(self):$/;"	m	class:SignalBroker
get_portfolio	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_broker.py	/^    def get_portfolio(self):$/;"	m	class:SimulationBroker
get_prev_close	rqalpha/data/data_proxy.py	/^    def get_prev_close(self, order_book_id, dt):$/;"	m	class:DataProxy
get_prev_settlement	rqalpha/data/data_proxy.py	/^    def get_prev_settlement(self, order_book_id, dt):$/;"	m	class:DataProxy
get_previous_trading_date	rqalpha/api/api_base.py	/^def get_previous_trading_date(date):$/;"	f
get_previous_trading_date	rqalpha/data/trading_dates_mixin.py	/^    def get_previous_trading_date(self, date):$/;"	m	class:TradingDatesMixin
get_previous_trading_date	tests/api/test_api_base.py	/^    from rqalpha.api import get_previous_trading_date$/;"	i
get_price	rqalpha/mod/rqalpha_mod_sys_funcat/mod.py	/^            def get_price(self, order_book_id, start, end):$/;"	m	class:FuncatAPIMod.start_up.RQAlphaDataBackend
get_realtime_quotes	rqalpha/mod/rqalpha_mod_sys_stock_realtime/event_source.py	/^from .utils import get_realtime_quotes, order_book_id_2_tushare_code, is_holiday_today, is_tradetime_now$/;"	i
get_realtime_quotes	rqalpha/mod/rqalpha_mod_sys_stock_realtime/utils.py	/^def get_realtime_quotes(code_list, open_only=False):$/;"	f
get_risk_free_rate	rqalpha/data/base_data_source.py	/^    def get_risk_free_rate(self, start_date, end_date):$/;"	m	class:BaseDataSource
get_risk_free_rate	rqalpha/data/data_proxy.py	/^    def get_risk_free_rate(self, start_date, end_date):$/;"	m	class:DataProxy
get_risk_free_rate	rqalpha/data/yield_curve_store.py	/^    def get_risk_free_rate(self, start_date, end_date):$/;"	m	class:YieldCurveStore
get_settle_price	rqalpha/data/base_data_source.py	/^    def get_settle_price(self, instrument, date):$/;"	m	class:BaseDataSource
get_settle_price	rqalpha/data/data_proxy.py	/^    def get_settle_price(self, order_book_id, date):$/;"	m	class:DataProxy
get_settle_price	rqalpha/interface.py	/^    def get_settle_price(self, instrument, date):$/;"	m	class:AbstractDataSource
get_split	rqalpha/data/base_data_source.py	/^    def get_split(self, order_book_id):$/;"	m	class:BaseDataSource
get_split	rqalpha/data/data_proxy.py	/^    def get_split(self, order_book_id):$/;"	m	class:DataProxy
get_split	rqalpha/interface.py	/^    def get_split(self, order_book_id):$/;"	m	class:AbstractDataSource
get_split_by_ex_date	rqalpha/data/data_proxy.py	/^    def get_split_by_ex_date(self, order_book_id, date):$/;"	m	class:DataProxy
get_start_date	rqalpha/mod/rqalpha_mod_sys_funcat/mod.py	/^            def get_start_date(self):$/;"	m	class:FuncatAPIMod.start_up.RQAlphaDataBackend
get_state	rqalpha/core/global_var.py	/^    def get_state(self):$/;"	m	class:GlobalVars
get_state	rqalpha/core/strategy_context.py	/^    def get_state(self):$/;"	m	class:StrategyContext
get_state	rqalpha/core/strategy_universe.py	/^    def get_state(self):$/;"	m	class:StrategyUniverse
get_state	rqalpha/interface.py	/^    def get_state(self):$/;"	m	class:Persistable
get_state	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_broker.py	/^    def get_state(self):$/;"	m	class:SimulationBroker
get_state	rqalpha/mod/rqalpha_mod_sys_stock_realtime/event_source.py	/^    def get_state(self):$/;"	m	class:RealtimeEventSource
get_state	rqalpha/model/account/base_account.py	/^    def get_state(self):$/;"	m	class:BaseAccount
get_state	rqalpha/model/account/future_account.py	/^    def get_state(self):$/;"	m	class:FutureAccount
get_state	rqalpha/model/account/stock_account.py	/^    def get_state(self):$/;"	m	class:StockAccount
get_state	rqalpha/model/order.py	/^    def get_state(self):$/;"	m	class:Order
get_state	rqalpha/model/portfolio.py	/^    def get_state(self):$/;"	m	class:Portfolio
get_state	rqalpha/model/position/base_position.py	/^    def get_state(self):$/;"	m	class:BasePosition
get_state	rqalpha/model/position/future_position.py	/^    def get_state(self):$/;"	m	class:FuturePosition
get_state	rqalpha/model/position/stock_position.py	/^    def get_state(self):$/;"	m	class:StockPosition
get_state	rqalpha/utils/persisit_helper.py	/^    def get_state(self):$/;"	m	class:CoreObjectsPersistProxy
get_state	rqalpha/utils/scheduler.py	/^    def get_state(self):$/;"	m	class:Scheduler
get_stop_price	rqalpha/examples/turtle.py	/^def get_stop_price(first_open_price_result, units_hold_result, atr_result):$/;"	f
get_stop_price	tests/test_s_turtle.py	/^def get_stop_price(first_open_price_result, units_hold_result, atr_result):$/;"	f
get_tax	rqalpha/mod/rqalpha_mod_sys_simulation/decider/__init__.py	/^    def get_tax(self, account_type, trade):$/;"	m	class:TaxDecider
get_tax	rqalpha/mod/rqalpha_mod_sys_simulation/decider/tax.py	/^    def get_tax(self, trade):$/;"	m	class:BaseTax
get_tax	rqalpha/mod/rqalpha_mod_sys_simulation/decider/tax.py	/^    def get_tax(self, trade):$/;"	m	class:FutureTax
get_tax	rqalpha/mod/rqalpha_mod_sys_simulation/decider/tax.py	/^    def get_tax(self, trade):$/;"	m	class:StockTax
get_tenor_for	rqalpha/data/risk_free_helper.py	/^def get_tenor_for(start_date, end_date):$/;"	f
get_test_files	test.py	/^def get_test_files(file_path=None):$/;"	f
get_ticks	rqalpha/data/base_data_source.py	/^    def get_ticks(self, order_book_id, date):$/;"	m	class:BaseDataSource
get_ticks	rqalpha/data/data_proxy.py	/^    def get_ticks(self, order_book_id, date):$/;"	m	class:DataProxy
get_trade_price	rqalpha/mod/rqalpha_mod_sys_simulation/decider/__init__.py	/^    def get_trade_price(self, side, price):$/;"	m	class:SlippageDecider
get_trade_price	rqalpha/mod/rqalpha_mod_sys_simulation/decider/slippage.py	/^    def get_trade_price(self, order, price):$/;"	m	class:BaseSlippage
get_trade_price	rqalpha/mod/rqalpha_mod_sys_simulation/decider/slippage.py	/^    def get_trade_price(self, side, price):$/;"	m	class:PriceRatioSlippage
get_trading_calendar	rqalpha/data/base_data_source.py	/^    def get_trading_calendar(self):$/;"	m	class:BaseDataSource
get_trading_calendar	rqalpha/data/trading_dates_store.py	/^    def get_trading_calendar(self):$/;"	m	class:TradingDatesStore
get_trading_calendar	rqalpha/interface.py	/^    def get_trading_calendar(self):$/;"	m	class:AbstractDataSource
get_trading_dates	rqalpha/api/api_base.py	/^def get_trading_dates(start_date, end_date):$/;"	f
get_trading_dates	rqalpha/data/trading_dates_mixin.py	/^    def get_trading_dates(self, start_date, end_date):$/;"	m	class:TradingDatesMixin
get_trading_dates	rqalpha/mod/rqalpha_mod_sys_funcat/mod.py	/^            def get_trading_dates(self, start, end):$/;"	m	class:FuncatAPIMod.start_up.RQAlphaDataBackend
get_trading_dates	tests/api/test_api_base.py	/^    from rqalpha.api import get_trading_dates$/;"	i
get_trading_dt	rqalpha/data/trading_dates_mixin.py	/^    def get_trading_dt(self, calendar_dt):$/;"	m	class:TradingDatesMixin
get_trading_minutes_for	rqalpha/data/base_data_source.py	/^    def get_trading_minutes_for(self, order_book_id, trading_dt):$/;"	m	class:BaseDataSource
get_trading_minutes_for	rqalpha/data/data_proxy.py	/^    def get_trading_minutes_for(self, order_book_id, dt):$/;"	m	class:DataProxy
get_trading_minutes_for	rqalpha/interface.py	/^    def get_trading_minutes_for(self, instrument, trading_dt):$/;"	m	class:AbstractDataSource
get_trading_period	rqalpha/utils/__init__.py	/^def get_trading_period(universe, account_list):$/;"	f
get_universe	rqalpha/environment.py	/^    def get_universe(self):$/;"	m	class:Environment
get_upper_underlying_symbol	rqalpha/utils/__init__.py	/^def get_upper_underlying_symbol(order_book_id):$/;"	f
get_user_config_path	rqalpha/utils/config.py	/^def get_user_config_path(config_path=None):$/;"	f
get_yield_curve	rqalpha/api/api_base.py	/^def get_yield_curve(date=None, tenor=None):$/;"	f
get_yield_curve	rqalpha/data/base_data_source.py	/^    def get_yield_curve(self, start_date, end_date, tenor=None):$/;"	m	class:BaseDataSource
get_yield_curve	rqalpha/data/data_proxy.py	/^    def get_yield_curve(self, start_date, end_date, tenor=None):$/;"	m	class:DataProxy
get_yield_curve	rqalpha/data/yield_curve_store.py	/^    def get_yield_curve(self, start_date, end_date, tenor):$/;"	m	class:YieldCurveStore
get_yield_curve	rqalpha/interface.py	/^    def get_yield_curve(self, start_date, end_date, tenor=None):$/;"	m	class:AbstractDataSource
get_yield_curve	tests/api/test_api_base.py	/^    from rqalpha.api import get_yield_curve$/;"	i
getcontext	rqalpha/api/api_stock.py	/^from decimal import Decimal, getcontext$/;"	i
gettext	rqalpha/mod/rqalpha_mod_sys_analyser/plot.py	/^from rqalpha.utils.i18n import gettext$/;"	i
gettext	rqalpha/utils/i18n.py	/^def gettext(message):$/;"	f
gridspec	rqalpha/mod/rqalpha_mod_sys_analyser/plot.py	/^    from matplotlib import rcParams, gridspec, ticker, image as mpimg, pyplot as plt$/;"	i
handle_bar	rqalpha/core/strategy.py	/^    def handle_bar(self, event):$/;"	m	class:Strategy
handle_bar	rqalpha/examples/IF_macd.py	/^def handle_bar(context, bar_dict):$/;"	f
handle_bar	rqalpha/examples/buy_and_hold.py	/^def handle_bar(context, bar_dict):$/;"	f
handle_bar	rqalpha/examples/golden_cross.py	/^def handle_bar(context, bar_dict):$/;"	f
handle_bar	rqalpha/examples/macd.py	/^def handle_bar(context, bar_dict):$/;"	f
handle_bar	rqalpha/examples/pair_trading.py	/^def handle_bar(context, bar_dict):$/;"	f
handle_bar	rqalpha/examples/rsi.py	/^def handle_bar(context, bar_dict):$/;"	f
handle_bar	rqalpha/examples/technical_analysis/dma.py	/^def handle_bar(context, bar_dict):$/;"	f
handle_bar	rqalpha/examples/technical_analysis/golden_cross.py	/^def handle_bar(context, bar_dict):$/;"	f
handle_bar	rqalpha/examples/test_pt.py	/^def handle_bar(context, bar_dict):$/;"	f
handle_bar	rqalpha/examples/turtle.py	/^def handle_bar(context, bar_dict):$/;"	f
handle_bar	tests/api/test_api_base.py	/^    def handle_bar(context, bar_dict):$/;"	f	function:test_all_instruments
handle_bar	tests/api/test_api_base.py	/^    def handle_bar(context, bar_dict):$/;"	f	function:test_cancel_order
handle_bar	tests/api/test_api_base.py	/^    def handle_bar(context, bar_dict):$/;"	f	function:test_concept
handle_bar	tests/api/test_api_base.py	/^    def handle_bar(context, bar_dict):$/;"	f	function:test_get_dividend
handle_bar	tests/api/test_api_base.py	/^    def handle_bar(context, bar_dict):$/;"	f	function:test_get_next_trading_date
handle_bar	tests/api/test_api_base.py	/^    def handle_bar(context, bar_dict):$/;"	f	function:test_get_open_order
handle_bar	tests/api/test_api_base.py	/^    def handle_bar(context, bar_dict):$/;"	f	function:test_get_order
handle_bar	tests/api/test_api_base.py	/^    def handle_bar(context, bar_dict):$/;"	f	function:test_get_previous_trading_date
handle_bar	tests/api/test_api_base.py	/^    def handle_bar(context, bar_dict):$/;"	f	function:test_get_trading_dates
handle_bar	tests/api/test_api_base.py	/^    def handle_bar(context, bar_dict):$/;"	f	function:test_get_yield_curve
handle_bar	tests/api/test_api_base.py	/^    def handle_bar(context, bar_dict):$/;"	f	function:test_history_bars
handle_bar	tests/api/test_api_base.py	/^    def handle_bar(context, bar_dict):$/;"	f	function:test_industry
handle_bar	tests/api/test_api_base.py	/^    def handle_bar(context, bar_dict):$/;"	f	function:test_instruments_code
handle_bar	tests/api/test_api_base.py	/^    def handle_bar(context, bar_dict):$/;"	f	function:test_sector
handle_bar	tests/api/test_api_base.py	/^    def handle_bar(context, bar_dict):$/;"	f	function:test_subscribe
handle_bar	tests/api/test_api_base.py	/^    def handle_bar(context, bar_dict):$/;"	f	function:test_unsubscribe
handle_bar	tests/api/test_api_base.py	/^    def handle_bar(context, bar_dict):$/;"	f	function:test_update_universe
handle_bar	tests/api/test_api_future.py	/^    def handle_bar(context, bar_dict):$/;"	f	function:test_buy_close
handle_bar	tests/api/test_api_future.py	/^    def handle_bar(context, bar_dict):$/;"	f	function:test_buy_open
handle_bar	tests/api/test_api_future.py	/^    def handle_bar(context, bar_dict):$/;"	f	function:test_sell_close
handle_bar	tests/api/test_api_future.py	/^    def handle_bar(context, bar_dict):$/;"	f	function:test_sell_open
handle_bar	tests/api/test_api_stock.py	/^    def handle_bar(context, bar_dict):$/;"	f	function:test_order_lots
handle_bar	tests/api/test_api_stock.py	/^    def handle_bar(context, bar_dict):$/;"	f	function:test_order_percent
handle_bar	tests/api/test_api_stock.py	/^    def handle_bar(context, bar_dict):$/;"	f	function:test_order_shares
handle_bar	tests/api/test_api_stock.py	/^    def handle_bar(context, bar_dict):$/;"	f	function:test_order_target_value
handle_bar	tests/api/test_api_stock.py	/^    def handle_bar(context, bar_dict):$/;"	f	function:test_order_value
handle_bar	tests/test_f_buy_and_hold.py	/^def handle_bar(context, bar_dict):$/;"	f
handle_bar	tests/test_f_macd.py	/^def handle_bar(context, bar_dict):$/;"	f
handle_bar	tests/test_f_mean_reverting.py	/^def handle_bar(context, bar_dict):$/;"	f
handle_bar	tests/test_s_buy_and_hold.py	/^def handle_bar(context, bar_dict):$/;"	f
handle_bar	tests/test_s_dma.py	/^def handle_bar(context, bar_dict):$/;"	f
handle_bar	tests/test_s_dual_thrust.py	/^def handle_bar(context, bar_dict):$/;"	f
handle_bar	tests/test_s_golden_cross.py	/^def handle_bar(context, bar_dict):$/;"	f
handle_bar	tests/test_s_turtle.py	/^def handle_bar(context, bar_dict):$/;"	f
handle_tick	rqalpha/core/strategy.py	/^    def handle_tick(self, event):$/;"	m	class:Strategy
hashlib	rqalpha/utils/persisit_helper.py	/^import hashlib$/;"	i
help	rqalpha/mod/rqalpha_mod_sys_analyser/__init__.py	/^        help="[sys_analyser] output result pickle file"$/;"	v
help	rqalpha/mod/rqalpha_mod_sys_analyser/__init__.py	/^        help="[sys_analyser] plot result"$/;"	v
help	rqalpha/mod/rqalpha_mod_sys_analyser/__init__.py	/^        help="[sys_analyser] save plot to file"$/;"	v
help	rqalpha/mod/rqalpha_mod_sys_simulation/__init__.py	/^        help="[Deprecated][sys_simulation] set matching type"$/;"	v
help	rqalpha/mod/rqalpha_mod_sys_simulation/__init__.py	/^        help="[sys_simulation] set commission multiplier"$/;"	v
help	rqalpha/mod/rqalpha_mod_sys_simulation/__init__.py	/^        help="[sys_simulation] set matching type"$/;"	v
help	rqalpha/mod/rqalpha_mod_sys_simulation/__init__.py	/^        help="[sys_simulation]set slippage"$/;"	v
high	rqalpha/model/bar.py	/^    def high(self):$/;"	m	class:BarObject
high	rqalpha/model/snapshot.py	/^    def high(self):$/;"	m	class:SnapshotObject
high	rqalpha/model/tick.py	/^    def high(self):$/;"	m	class:Tick
history	rqalpha/data/data_proxy.py	/^    def history(self, order_book_id, bar_count, frequency, field, dt):$/;"	m	class:DataProxy
history_bars	rqalpha/api/api_base.py	/^def history_bars(order_book_id, bar_count, frequency, fields=None, skip_suspended=True):$/;"	f
history_bars	rqalpha/data/base_data_source.py	/^    def history_bars(self, instrument, bar_count, frequency, fields, dt, skip_suspended=True):$/;"	m	class:BaseDataSource
history_bars	rqalpha/data/data_proxy.py	/^    def history_bars(self, order_book_id, bar_count, frequency, field, dt, skip_suspended=True):$/;"	m	class:DataProxy
history_bars	rqalpha/interface.py	/^    def history_bars(self, instrument, bar_count, frequency, fields, dt, skip_suspended=True):$/;"	m	class:AbstractDataSource
history_bars	tests/api/test_api_base.py	/^    from rqalpha.api import history_bars$/;"	i
history_bars	tests/api/test_api_base.py	/^    from rqalpha.api import update_universe, history_bars$/;"	i
holding_pnl	rqalpha/model/account/future_account.py	/^    def holding_pnl(self):$/;"	m	class:FutureAccount
holding_pnl	rqalpha/model/position/future_position.py	/^    def holding_pnl(self):$/;"	m	class:FuturePosition
html_last_updated_fmt	docs/source/conf.py	/^html_last_updated_fmt = '%b %d, %Y'$/;"	v
html_static_path	docs/source/conf.py	/^html_static_path = ['_static']$/;"	v
html_theme	docs/source/conf.py	/^html_theme = 'sphinx_rtd_theme'$/;"	v
html_theme_path	docs/source/conf.py	/^html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]$/;"	v
htmlhelp_basename	docs/source/conf.py	/^htmlhelp_basename = 'rqalphadoc'$/;"	v
id_gen	rqalpha/model/order.py	/^from ..utils import id_gen$/;"	i
id_gen	rqalpha/model/trade.py	/^from ..utils import id_gen$/;"	i
id_gen	rqalpha/utils/__init__.py	/^def id_gen(start=1):$/;"	f
ignore_unknown_options	rqalpha/__main__.py	/^    ignore_unknown_options=True,$/;"	v
import_mod	rqalpha/__main__.py	/^    from rqalpha.utils.package_helper import import_mod$/;"	i
import_mod	rqalpha/cmd.py	/^    from rqalpha.utils.package_helper import import_mod$/;"	i
import_mod	rqalpha/mod/__init__.py	/^from rqalpha.utils.package_helper import import_mod$/;"	i
import_mod	rqalpha/utils/package_helper.py	/^def import_mod(mod_name):$/;"	f
index_contract_warning_flag	rqalpha/utils/arg_checker.py	/^index_contract_warning_flag = True$/;"	v
industry	rqalpha/api/api_base.py	/^def industry(code):$/;"	f
industry	rqalpha/data/instrument_mixin.py	/^    def industry(self, code):$/;"	m	class:InstrumentMixin
industry	tests/api/test_api_base.py	/^    from rqalpha.api import industry, instruments$/;"	i
industry_code	rqalpha/api/api_base.py	/^from ..model.instrument import Instrument, SectorCode as sector_code, IndustryCode as industry_code$/;"	i
information_ratio	rqalpha/utils/risk.py	/^    def information_ratio(self):$/;"	m	class:Risk
init	rqalpha/__main__.py	/^        from colorama import init, Fore$/;"	i
init	rqalpha/core/strategy.py	/^    def init(self):$/;"	m	class:Strategy
init	rqalpha/examples/IF_macd.py	/^def init(context):$/;"	f
init	rqalpha/examples/buy_and_hold.py	/^def init(context):$/;"	f
init	rqalpha/examples/golden_cross.py	/^def init(context):$/;"	f
init	rqalpha/examples/macd.py	/^def init(context):$/;"	f
init	rqalpha/examples/pair_trading.py	/^def init(context):$/;"	f
init	rqalpha/examples/rsi.py	/^def init(context):$/;"	f
init	rqalpha/examples/technical_analysis/dma.py	/^def init(context):$/;"	f
init	rqalpha/examples/technical_analysis/golden_cross.py	/^def init(context):$/;"	f
init	rqalpha/examples/test_pt.py	/^def init(context):$/;"	f
init	rqalpha/examples/turtle.py	/^def init(context):$/;"	f
init	tests/api/test_api_base.py	/^    def init(context):$/;"	f	function:test_all_instruments
init	tests/api/test_api_base.py	/^    def init(context):$/;"	f	function:test_cancel_order
init	tests/api/test_api_base.py	/^    def init(context):$/;"	f	function:test_concept
init	tests/api/test_api_base.py	/^    def init(context):$/;"	f	function:test_get_dividend
init	tests/api/test_api_base.py	/^    def init(context):$/;"	f	function:test_get_next_trading_date
init	tests/api/test_api_base.py	/^    def init(context):$/;"	f	function:test_get_open_order
init	tests/api/test_api_base.py	/^    def init(context):$/;"	f	function:test_get_order
init	tests/api/test_api_base.py	/^    def init(context):$/;"	f	function:test_get_previous_trading_date
init	tests/api/test_api_base.py	/^    def init(context):$/;"	f	function:test_get_trading_dates
init	tests/api/test_api_base.py	/^    def init(context):$/;"	f	function:test_get_yield_curve
init	tests/api/test_api_base.py	/^    def init(context):$/;"	f	function:test_history_bars
init	tests/api/test_api_base.py	/^    def init(context):$/;"	f	function:test_industry
init	tests/api/test_api_base.py	/^    def init(context):$/;"	f	function:test_instruments_code
init	tests/api/test_api_base.py	/^    def init(context):$/;"	f	function:test_sector
init	tests/api/test_api_base.py	/^    def init(context):$/;"	f	function:test_subscribe
init	tests/api/test_api_base.py	/^    def init(context):$/;"	f	function:test_unsubscribe
init	tests/api/test_api_base.py	/^    def init(context):$/;"	f	function:test_update_universe
init	tests/api/test_api_future.py	/^    def init(context):$/;"	f	function:test_buy_close
init	tests/api/test_api_future.py	/^    def init(context):$/;"	f	function:test_buy_open
init	tests/api/test_api_future.py	/^    def init(context):$/;"	f	function:test_sell_close
init	tests/api/test_api_future.py	/^    def init(context):$/;"	f	function:test_sell_open
init	tests/api/test_api_stock.py	/^    def init(context):$/;"	f	function:test_order_lots
init	tests/api/test_api_stock.py	/^    def init(context):$/;"	f	function:test_order_percent
init	tests/api/test_api_stock.py	/^    def init(context):$/;"	f	function:test_order_shares
init	tests/api/test_api_stock.py	/^    def init(context):$/;"	f	function:test_order_target_value
init	tests/api/test_api_stock.py	/^    def init(context):$/;"	f	function:test_order_value
init	tests/test_f_buy_and_hold.py	/^def init(context):$/;"	f
init	tests/test_f_macd.py	/^def init(context):$/;"	f
init	tests/test_f_mean_reverting.py	/^def init(context):$/;"	f
init	tests/test_s_buy_and_hold.py	/^def init(context):$/;"	f
init	tests/test_s_dma.py	/^def init(context):$/;"	f
init	tests/test_s_dual_thrust.py	/^def init(context):$/;"	f
init	tests/test_s_golden_cross.py	/^def init(context):$/;"	f
init	tests/test_s_scheduler.py	/^def init(context):$/;"	f
init	tests/test_s_turtle.py	/^def init(context):$/;"	f
init_portfolio	rqalpha/mod/rqalpha_mod_sys_simulation/signal_broker.py	/^from .utils import init_portfolio$/;"	i
init_portfolio	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_broker.py	/^from .utils import init_portfolio$/;"	i
init_portfolio	rqalpha/mod/rqalpha_mod_sys_simulation/utils.py	/^def init_portfolio(env):$/;"	f
inspect	rqalpha/api/api_base.py	/^import inspect$/;"	i
inspect	rqalpha/main.py	/^    import inspect$/;"	i
inspect	rqalpha/utils/arg_checker.py	/^import inspect$/;"	i
inspect	rqalpha/utils/cached_property.py	/^import inspect$/;"	i
inspect	tests/api/test_api_base.py	/^import inspect$/;"	i
inspect	tests/api/test_api_future.py	/^import inspect$/;"	i
inspect	tests/api/test_api_stock.py	/^import inspect$/;"	i
install	rqalpha/__main__.py	/^    def install(params):$/;"	f	function:mod
install_requires	setup.py	/^    install_requires=requirements,$/;"	v
instrument	rqalpha/model/bar.py	/^    def instrument(self):$/;"	m	class:BarObject
instrument	rqalpha/model/snapshot.py	/^    def instrument(self):$/;"	m	class:SnapshotObject
instrument_type_str2enum	rqalpha/model/instrument.py	/^from ..utils import instrument_type_str2enum$/;"	i
instrument_type_str2enum	rqalpha/utils/__init__.py	/^def instrument_type_str2enum(type_str):$/;"	f
instruments	rqalpha/api/api_base.py	/^def instruments(id_or_symbols):$/;"	f
instruments	rqalpha/api/api_future.py	/^from .api_base import decorate_api_exc, instruments$/;"	i
instruments	rqalpha/api/api_stock.py	/^from .api_base import decorate_api_exc, instruments$/;"	i
instruments	rqalpha/api/ext.py	/^from .api_base import instruments$/;"	i
instruments	rqalpha/data/instrument_mixin.py	/^    def instruments(self, sym_or_ids):$/;"	m	class:InstrumentMixin
instruments	tests/api/test_api_base.py	/^    from rqalpha.api import concept, instruments$/;"	i
instruments	tests/api/test_api_base.py	/^    from rqalpha.api import industry, instruments$/;"	i
instruments	tests/api/test_api_base.py	/^    from rqalpha.api import instruments$/;"	i
is_active	rqalpha/model/order.py	/^    def is_active(self):$/;"	m	class:Order
is_de_listed	rqalpha/model/position/base_position.py	/^    def is_de_listed(self):$/;"	m	class:BasePosition
is_enable_coverage	test.py	/^def is_enable_coverage():$/;"	f
is_final	rqalpha/model/order.py	/^    def is_final(self):$/;"	m	class:Order
is_greater_or_equal_than	rqalpha/utils/arg_checker.py	/^    def is_greater_or_equal_than(self, low):$/;"	m	class:ArgumentChecker
is_greater_than	rqalpha/utils/arg_checker.py	/^    def is_greater_than(self, low):$/;"	m	class:ArgumentChecker
is_holiday_today	rqalpha/mod/rqalpha_mod_sys_stock_realtime/event_source.py	/^from .utils import get_realtime_quotes, order_book_id_2_tushare_code, is_holiday_today, is_tradetime_now$/;"	i
is_holiday_today	rqalpha/mod/rqalpha_mod_sys_stock_realtime/utils.py	/^def is_holiday_today():$/;"	f
is_in	rqalpha/utils/arg_checker.py	/^    def is_in(self, valid_values, ignore_none=True):$/;"	m	class:ArgumentChecker
is_instance_of	rqalpha/utils/arg_checker.py	/^    def is_instance_of(self, types):$/;"	m	class:ArgumentChecker
is_less_or_equal_than	rqalpha/utils/arg_checker.py	/^    def is_less_or_equal_than(self, high):$/;"	m	class:ArgumentChecker
is_less_than	rqalpha/utils/arg_checker.py	/^    def is_less_than(self, high):$/;"	m	class:ArgumentChecker
is_night_trading	rqalpha/utils/__init__.py	/^def is_night_trading(universe):$/;"	f
is_number	rqalpha/utils/arg_checker.py	/^    def is_number(self):$/;"	m	class:ArgumentChecker
is_st_stock	rqalpha/api/api_stock.py	/^def is_st_stock(order_book_id, count=1):$/;"	f
is_st_stock	rqalpha/data/base_data_source.py	/^    def is_st_stock(self, order_book_id, dates):$/;"	m	class:BaseDataSource
is_st_stock	rqalpha/data/data_proxy.py	/^    def is_st_stock(self, order_book_id, dt, count=1):$/;"	m	class:DataProxy
is_suspended	rqalpha/api/api_stock.py	/^def is_suspended(order_book_id, count=1):$/;"	f
is_suspended	rqalpha/data/base_data_source.py	/^    def is_suspended(self, order_book_id, dates):$/;"	m	class:BaseDataSource
is_suspended	rqalpha/data/data_proxy.py	/^    def is_suspended(self, order_book_id, dt, count=1):$/;"	m	class:DataProxy
is_system_exc	rqalpha/utils/exception.py	/^def is_system_exc(exc_val):$/;"	f
is_tradetime_now	rqalpha/mod/rqalpha_mod_sys_stock_realtime/event_source.py	/^from .utils import get_realtime_quotes, order_book_id_2_tushare_code, is_holiday_today, is_tradetime_now$/;"	i
is_tradetime_now	rqalpha/mod/rqalpha_mod_sys_stock_realtime/utils.py	/^def is_tradetime_now():$/;"	f
is_trading	rqalpha/model/bar.py	/^    def is_trading(self):$/;"	m	class:BarObject
is_trading	rqalpha/utils/__init__.py	/^def is_trading(dt, trading_period):$/;"	f
is_trading_date	rqalpha/data/trading_dates_mixin.py	/^    def is_trading_date(self, date):$/;"	m	class:TradingDatesMixin
is_user_exc	rqalpha/main.py	/^from .utils.exception import CustomException, is_user_exc, patch_user_exc$/;"	i
is_user_exc	rqalpha/utils/exception.py	/^def is_user_exc(exc_val):$/;"	f
is_valid_date	rqalpha/utils/arg_checker.py	/^    def is_valid_date(self, ignore_none=True):$/;"	m	class:ArgumentChecker
is_valid_frequency	rqalpha/utils/arg_checker.py	/^    def is_valid_frequency(self):$/;"	m	class:ArgumentChecker
is_valid_future	rqalpha/utils/arg_checker.py	/^    def is_valid_future(self):$/;"	m	class:ArgumentChecker
is_valid_instrument	rqalpha/utils/arg_checker.py	/^    def is_valid_instrument(self):$/;"	m	class:ArgumentChecker
is_valid_interval	rqalpha/utils/arg_checker.py	/^    def is_valid_interval(self):$/;"	m	class:ArgumentChecker
is_valid_stock	rqalpha/utils/arg_checker.py	/^    def is_valid_stock(self):$/;"	m	class:ArgumentChecker
isnan	rqalpha/model/bar.py	/^    def isnan(self):$/;"	m	class:BarObject
isnan	rqalpha/model/snapshot.py	/^    def isnan(self):$/;"	m	class:SnapshotObject
items	rqalpha/model/bar.py	/^    def items(self):$/;"	m	class:BarMap
items	rqalpha/model/portfolio.py	/^    def items(self):$/;"	m	class:MixedPositions
items	rqalpha/utils/__init__.py	/^    def items(self):$/;"	m	class:RqAttrDict
iter_properties_of_class	rqalpha/utils/repr.py	/^def iter_properties_of_class(cls):$/;"	f
iteritems	rqalpha/utils/__init__.py	/^    iteritems = items$/;"	v	class:RqAttrDict
iteritems	test.py	/^from six import iteritems$/;"	i
join	setup.py	/^from os.path import dirname, join$/;"	i
json	rqalpha/core/strategy_universe.py	/^import json$/;"	i
json	rqalpha/utils/config.py	/^        import simplejson as json$/;"	i
json	rqalpha/utils/rq_json.py	/^import simplejson as json$/;"	i
json	rqalpha/utils/scheduler.py	/^import json$/;"	i
jsonpickle	rqalpha/main.py	/^import jsonpickle.ext.numpy as jsonpickle_numpy$/;"	i
jsonpickle	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_broker.py	/^import jsonpickle$/;"	i
jsonpickle	rqalpha/model/portfolio.py	/^import jsonpickle$/;"	i
jsonpickle	rqalpha/utils/persisit_helper.py	/^import jsonpickle$/;"	i
jsonpickle_numpy	rqalpha/main.py	/^import jsonpickle.ext.numpy as jsonpickle_numpy$/;"	i
keys	rqalpha/model/bar.py	/^    def keys(self):$/;"	m	class:BarMap
keys	rqalpha/model/portfolio.py	/^    def keys(self):$/;"	m	class:MixedPositions
language	docs/source/conf.py	/^language = 'en'$/;"	v
last	rqalpha/model/bar.py	/^    def last(self):$/;"	m	class:BarObject
last	rqalpha/model/snapshot.py	/^    def last(self):$/;"	m	class:SnapshotObject
last	rqalpha/model/tick.py	/^    def last(self):$/;"	m	class:Tick
last_price	rqalpha/model/position/base_position.py	/^    def last_price(self):$/;"	m	class:BasePosition
last_price	rqalpha/model/trade.py	/^    def last_price(self):$/;"	m	class:Trade
last_quantity	rqalpha/model/trade.py	/^    def last_quantity(self):$/;"	m	class:Trade
lib	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_event_source.py	/^import numpy.lib.recfunctions as nprf$/;"	i
license	setup.py	/^    license='Apache License v2',$/;"	v
limit_down	rqalpha/model/bar.py	/^    def limit_down(self):$/;"	m	class:BarObject
limit_down	rqalpha/model/tick.py	/^    def limit_down(self):$/;"	m	class:Tick
limit_up	rqalpha/model/bar.py	/^    def limit_up(self):$/;"	m	class:BarObject
limit_up	rqalpha/model/tick.py	/^    def limit_up(self):$/;"	m	class:Tick
line_profiler	rqalpha/main.py	/^    import line_profiler$/;"	i
linecache	rqalpha/utils/__init__.py	/^    import linecache$/;"	i
list	rqalpha/__main__.py	/^    def list(params):$/;"	f	function:mod
listing	rqalpha/model/instrument.py	/^    def listing(self):$/;"	m	class:Instrument
load	rqalpha/core/strategy_loader.py	/^    def load(self, strategy, scope):$/;"	m	class:FileStrategyLoader
load	rqalpha/core/strategy_loader.py	/^    def load(self, strategy, scope):$/;"	m	class:SourceCodeStrategyLoader
load	rqalpha/interface.py	/^    def load(self, key):$/;"	m	class:AbstractPersistProvider
load	rqalpha/interface.py	/^    def load(self, strategy, scope):$/;"	m	class:AbstractStrategyLoader
load	rqalpha/utils/disk_persist_provider.py	/^    def load(self, key, large_file=False):$/;"	m	class:DiskPersistProvider
load_config	rqalpha/__main__.py	/^from .utils.config import parse_config, get_mod_config_path, load_config, dump_config$/;"	i
load_config	rqalpha/cmd.py	/^    from rqalpha.utils.config import get_default_config_path, load_config$/;"	i
load_config	rqalpha/utils/config.py	/^def load_config(config_path, loader=yaml.Loader):$/;"	f
load_mod	rqalpha/mod/rqalpha_mod_sys_analyser/__init__.py	/^def load_mod():$/;"	f
load_mod	rqalpha/mod/rqalpha_mod_sys_funcat/__init__.py	/^def load_mod():$/;"	f
load_mod	rqalpha/mod/rqalpha_mod_sys_progress/__init__.py	/^def load_mod():$/;"	f
load_mod	rqalpha/mod/rqalpha_mod_sys_risk/__init__.py	/^def load_mod():$/;"	f
load_mod	rqalpha/mod/rqalpha_mod_sys_simulation/__init__.py	/^def load_mod():$/;"	f
load_mod	rqalpha/mod/rqalpha_mod_sys_stock_realtime/__init__.py	/^def load_mod():$/;"	f
locale	rqalpha/utils/config.py	/^import locale$/;"	i
localization	rqalpha/utils/config.py	/^from ..utils.i18n import gettext as _, localization$/;"	i
localization	rqalpha/utils/i18n.py	/^localization = Localization()$/;"	v
logbook	rqalpha/utils/config.py	/^import logbook$/;"	i
logbook	rqalpha/utils/logger.py	/^import logbook$/;"	i
logger	rqalpha/utils/config.py	/^from . import RqAttrDict, logger$/;"	i
low	rqalpha/model/bar.py	/^    def low(self):$/;"	m	class:BarObject
low	rqalpha/model/snapshot.py	/^    def low(self):$/;"	m	class:SnapshotObject
low	rqalpha/model/tick.py	/^    def low(self):$/;"	m	class:Tick
lru_cache	rqalpha/data/base_data_source.py	/^from ..utils.py2 import lru_cache$/;"	i
lru_cache	rqalpha/data/data_proxy.py	/^from ..utils.py2 import lru_cache$/;"	i
lru_cache	rqalpha/data/date_set.py	/^from ..utils.py2 import lru_cache$/;"	i
lru_cache	rqalpha/data/dividend_store.py	/^from ..utils.py2 import lru_cache$/;"	i
lru_cache	rqalpha/data/trading_dates_mixin.py	/^from ..utils.py2 import lru_cache$/;"	i
lru_cache	rqalpha/utils/__init__.py	/^from ..utils.py2 import lru_cache$/;"	i
lru_cache	rqalpha/utils/datetime_func.py	/^from .py2 import lru_cache$/;"	i
lru_cache	rqalpha/utils/py2.py	/^    from fastcache import lru_cache$/;"	i
lru_cache	rqalpha/utils/py2.py	/^    from functools import lru_cache$/;"	i
main	rqalpha/__init__.py	/^    from . import main$/;"	i
main	rqalpha/__main__.py	/^    from . import main$/;"	i
main_contract_warning_flag	rqalpha/utils/arg_checker.py	/^main_contract_warning_flag = True$/;"	v
margin	rqalpha/model/account/future_account.py	/^    def margin(self):$/;"	m	class:FutureAccount
margin	rqalpha/model/position/future_position.py	/^    def margin(self):$/;"	m	class:FuturePosition
margin_multiplier	rqalpha/core/strategy_context.py	/^    def margin_multiplier(self):$/;"	m	class:RunInfo
margin_of	rqalpha/model/account/future_account.py	/^def margin_of(order_book_id, quantity, price):$/;"	f
margin_rate	rqalpha/core/strategy_context.py	/^    def margin_rate(self):$/;"	m	class:StrategyContext
margin_rate	rqalpha/core/strategy_context.py	/^    def margin_rate(self, value):$/;"	m	class:StrategyContext
margin_rate	rqalpha/model/position/future_position.py	/^    def margin_rate(self):$/;"	m	class:FuturePosition
mark_cancelled	rqalpha/model/order.py	/^    def mark_cancelled(self, cancelled_reason, user_warn=True):$/;"	m	class:Order
mark_rejected	rqalpha/model/order.py	/^    def mark_rejected(self, reject_reason):$/;"	m	class:Order
market_close	rqalpha/api/api_stock.py	/^from ..utils.scheduler import market_close, market_open$/;"	i
market_close	rqalpha/utils/scheduler.py	/^def market_close(hour=0, minute=0):$/;"	f
market_open	rqalpha/api/api_stock.py	/^from ..utils.scheduler import market_close, market_open$/;"	i
market_open	rqalpha/utils/scheduler.py	/^def market_open(hour=0, minute=0):$/;"	f
market_value	rqalpha/model/account/base_account.py	/^    def market_value(self):$/;"	m	class:BaseAccount
market_value	rqalpha/model/portfolio.py	/^    def market_value(self):$/;"	m	class:Portfolio
market_value	rqalpha/model/position/base_position.py	/^    def market_value(self):$/;"	m	class:BasePosition
market_value	rqalpha/model/position/future_position.py	/^    def market_value(self):$/;"	m	class:FuturePosition
market_value	rqalpha/model/position/stock_position.py	/^    def market_value(self):$/;"	m	class:StockPosition
master_doc	docs/source/conf.py	/^master_doc = 'index'$/;"	v
match	rqalpha/mod/rqalpha_mod_sys_simulation/matcher.py	/^    def match(self, open_orders):$/;"	m	class:Matcher
matching_type	rqalpha/core/strategy_context.py	/^    def matching_type(self):$/;"	m	class:RunInfo
math	rqalpha/examples/turtle.py	/^import math$/;"	i
math	rqalpha/mod/rqalpha_mod_sys_stock_realtime/utils.py	/^import math$/;"	i
math	tests/test_s_turtle.py	/^import math$/;"	i
mavg	rqalpha/model/bar.py	/^    def mavg(self, intervals, frequency='1d'):$/;"	m	class:BarObject
max_drawdown	rqalpha/utils/risk.py	/^    def max_drawdown(self):$/;"	m	class:Risk
merge_dicts	rqalpha/model/portfolio.py	/^from ..utils import get_account_type, merge_dicts$/;"	i
merge_dicts	rqalpha/utils/__init__.py	/^def merge_dicts(*dict_args):$/;"	f
merge_trading_period	rqalpha/utils/__init__.py	/^def merge_trading_period(trading_period):$/;"	f
message	rqalpha/model/order.py	/^    def message(self):$/;"	m	class:Order
mod	rqalpha/__main__.py	/^def mod(cmd, params):$/;"	f
mod_config_value_parse	rqalpha/mod/utils.py	/^def mod_config_value_parse(value):$/;"	f
mod_config_value_parse	rqalpha/utils/config.py	/^from ..mod.utils import mod_config_value_parse$/;"	i
mod_scheduler	rqalpha/main.py	/^from .utils import create_custom_exception, run_with_user_log_disabled, scheduler as mod_scheduler$/;"	i
mpimg	rqalpha/mod/rqalpha_mod_sys_analyser/plot.py	/^    from matplotlib import rcParams, gridspec, ticker, image as mpimg, pyplot as plt$/;"	i
name	rqalpha/model/instrument.py	/^    def name(self):$/;"	m	class:IndustryCodeItem
name	rqalpha/model/instrument.py	/^    def name(self):$/;"	m	class:SectorCodeItem
name	rqalpha/utils/click_helper.py	/^    def name(self):$/;"	m	class:Date
name	setup.py	/^    name='rqalpha',$/;"	v
namedtuple	rqalpha/data/converter.py	/^from collections import namedtuple$/;"	i
namedtuple	rqalpha/utils/datetime_func.py	/^from collections import namedtuple$/;"	i
names	rqalpha/api/api_base.py	/^from . import names$/;"	i
next_bar_	rqalpha/utils/scheduler.py	/^    def next_bar_(self, event):$/;"	m	class:Scheduler
next_day_	rqalpha/utils/scheduler.py	/^    def next_day_(self, event):$/;"	m	class:Scheduler
nop	rqalpha/utils/__init__.py	/^    def nop(*args, **kw):$/;"	m	class:Nop
now	rqalpha/core/strategy_context.py	/^    def now(self):$/;"	m	class:StrategyContext
now_time_str	rqalpha/api/ext.py	/^def now_time_str(str_format="%H:%M:%S"):$/;"	f
np	rqalpha/api/api_future.py	/^import numpy as np$/;"	i
np	rqalpha/data/base_data_source.py	/^import numpy as np$/;"	i
np	rqalpha/data/converter.py	/^import numpy as np$/;"	i
np	rqalpha/data/data_proxy.py	/^import numpy as np$/;"	i
np	rqalpha/data/date_set.py	/^import numpy as np$/;"	i
np	rqalpha/data/daybar_store.py	/^import numpy as np$/;"	i
np	rqalpha/data/yield_curve_store.py	/^import numpy as np$/;"	i
np	rqalpha/examples/pair_trading.py	/^import numpy as np$/;"	i
np	rqalpha/examples/turtle.py	/^import numpy as np$/;"	i
np	rqalpha/mod/rqalpha_mod_sys_analyser/mod.py	/^import numpy as np$/;"	i
np	rqalpha/mod/rqalpha_mod_sys_analyser/plot.py	/^    import numpy as np$/;"	i
np	rqalpha/mod/rqalpha_mod_sys_funcat/mod.py	/^import numpy as np$/;"	i
np	rqalpha/mod/rqalpha_mod_sys_simulation/matcher.py	/^import numpy as np$/;"	i
np	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_event_source.py	/^import numpy as np$/;"	i
np	rqalpha/model/account/benchmark_account.py	/^import numpy as np$/;"	i
np	rqalpha/model/bar.py	/^import numpy as np$/;"	i
np	rqalpha/model/snapshot.py	/^import numpy as np$/;"	i
np	rqalpha/utils/risk.py	/^import numpy as np$/;"	i
np	test.py	/^import numpy as np$/;"	i
np	tests/test_f_macd.py	/^import numpy as np$/;"	i
np	tests/test_f_mean_reverting.py	/^import numpy as np$/;"	i
np	tests/test_s_turtle.py	/^import numpy as np$/;"	i
nprf	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_event_source.py	/^import numpy.lib.recfunctions as nprf$/;"	i
numpy	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_event_source.py	/^import numpy.lib.recfunctions as nprf$/;"	i
obj	rqalpha/mod/rqalpha_mod_sys_funcat/mod.py	/^            obj = getattr(funcat, name)$/;"	v	class:FuncatAPIMod.start_up.RQAlphaDataBackend
on_bar	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_broker.py	/^    def on_bar(self, event):$/;"	m	class:SimulationBroker
on_order_cancel_	rqalpha/model/position/stock_position.py	/^    def on_order_cancel_(self, order):$/;"	m	class:StockPosition
on_order_creation_reject_	rqalpha/model/position/stock_position.py	/^    def on_order_creation_reject_(self, order):$/;"	m	class:StockPosition
on_order_pending_new_	rqalpha/model/position/stock_position.py	/^    def on_order_pending_new_(self, order):$/;"	m	class:StockPosition
on_tick	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_broker.py	/^    def on_tick(self, event):$/;"	m	class:SimulationBroker
open	rqalpha/model/bar.py	/^    def open(self):$/;"	m	class:BarObject
open	rqalpha/model/snapshot.py	/^    def open(self):$/;"	m	class:SnapshotObject
open	rqalpha/model/tick.py	/^    def open(self):$/;"	m	class:Tick
open_interest	rqalpha/model/bar.py	/^    def open_interest(self):$/;"	m	class:BarObject
open_interest	rqalpha/model/snapshot.py	/^    def open_interest(self):$/;"	m	class:SnapshotObject
open_interest	rqalpha/model/tick.py	/^    def open_interest(self):$/;"	m	class:Tick
open_orders	rqalpha/model/position/future_position.py	/^    def open_orders(self):$/;"	m	class:FuturePosition
order	rqalpha/api/api_future.py	/^def order(id_or_ins, amount, side, position_effect, style):$/;"	f
order_book_id	rqalpha/model/bar.py	/^    def order_book_id(self):$/;"	m	class:BarObject
order_book_id	rqalpha/model/order.py	/^    def order_book_id(self):$/;"	m	class:Order
order_book_id	rqalpha/model/position/base_position.py	/^    def order_book_id(self):$/;"	m	class:BasePosition
order_book_id	rqalpha/model/snapshot.py	/^    def order_book_id(self):$/;"	m	class:SnapshotObject
order_book_id	rqalpha/model/tick.py	/^    def order_book_id(self):$/;"	m	class:Tick
order_book_id	rqalpha/model/trade.py	/^    def order_book_id(self):$/;"	m	class:Trade
order_book_id_2_tushare_code	rqalpha/mod/rqalpha_mod_sys_stock_realtime/event_source.py	/^from .utils import get_realtime_quotes, order_book_id_2_tushare_code, is_holiday_today, is_tradetime_now$/;"	i
order_book_id_2_tushare_code	rqalpha/mod/rqalpha_mod_sys_stock_realtime/utils.py	/^def order_book_id_2_tushare_code(order_book_id):$/;"	f
order_id	rqalpha/model/order.py	/^    def order_id(self):$/;"	m	class:Order
order_id	rqalpha/model/trade.py	/^    def order_id(self):$/;"	m	class:Trade
order_id_gen	rqalpha/model/order.py	/^    order_id_gen = id_gen(int(time.time()))$/;"	v	class:Order
order_lots	rqalpha/api/api_stock.py	/^def order_lots(id_or_ins, amount, style=MarketOrder()):$/;"	f
order_lots	tests/api/test_api_stock.py	/^    from rqalpha.api import order_lots, get_order, SIDE, LimitOrder$/;"	i
order_percent	rqalpha/api/api_stock.py	/^def order_percent(id_or_ins, percent, style=MarketOrder()):$/;"	f
order_percent	tests/api/test_api_stock.py	/^    from rqalpha.api import order_percent, get_order, SIDE, LimitOrder$/;"	i
order_shares	rqalpha/api/api_stock.py	/^def order_shares(id_or_ins, amount, style=MarketOrder()):$/;"	f
order_shares	tests/api/test_api_base.py	/^    from rqalpha.api import order_shares, cancel_order, get_order$/;"	i
order_shares	tests/api/test_api_base.py	/^    from rqalpha.api import order_shares, get_open_orders, get_order$/;"	i
order_shares	tests/api/test_api_base.py	/^    from rqalpha.api import order_shares, get_order$/;"	i
order_shares	tests/api/test_api_stock.py	/^    from rqalpha.api import order_shares, get_order, SIDE, LimitOrder$/;"	i
order_target_percent	rqalpha/api/api_stock.py	/^def order_target_percent(id_or_ins, percent, style=MarketOrder()):$/;"	f
order_target_percent	tests/api/test_api_stock.py	/^    from rqalpha.api import order_target_percent, get_order, SIDE, LimitOrder$/;"	i
order_target_value	rqalpha/api/api_stock.py	/^def order_target_value(id_or_ins, cash_amount, style=MarketOrder()):$/;"	f
order_value	rqalpha/api/api_stock.py	/^def order_value(id_or_ins, cash_amount, style=MarketOrder()):$/;"	f
order_value	tests/api/test_api_stock.py	/^    from rqalpha.api import order_value, get_order, SIDE, LimitOrder$/;"	i
os	rqalpha/__main__.py	/^import os$/;"	i
os	rqalpha/data/base_data_source.py	/^import os$/;"	i
os	rqalpha/main.py	/^import os$/;"	i
os	rqalpha/mod/rqalpha_mod_sys_analyser/mod.py	/^import os$/;"	i
os	rqalpha/mod/rqalpha_mod_sys_analyser/plot.py	/^    import os$/;"	i
os	rqalpha/mod/rqalpha_mod_sys_analyser/report.py	/^import os$/;"	i
os	rqalpha/utils/config.py	/^import os$/;"	i
os	rqalpha/utils/disk_persist_provider.py	/^import os$/;"	i
os	rqalpha/utils/i18n.py	/^import os.path$/;"	i
os	test.py	/^import os$/;"	i
out	rqalpha/main.py	/^        out = open(tmp, 'wb')$/;"	v
output_profile_result	rqalpha/main.py	/^def output_profile_result(env):$/;"	f
package_data	setup.py	/^    package_data={'': ['*.*']},$/;"	v
packages	setup.py	/^    packages=find_packages(exclude=[]),$/;"	v
pandas	tests/api/test_api_base.py	/^    import pandas$/;"	i
parse	rqalpha/api/api_base.py	/^from dateutil.parser import parse$/;"	i
parse	rqalpha/utils/scheduler.py	/^from dateutil.parser import parse$/;"	i
parse_account_list	rqalpha/utils/config.py	/^def parse_account_list(securities):$/;"	f
parse_config	rqalpha/__init__.py	/^    from .utils.config import parse_config$/;"	i
parse_config	rqalpha/__main__.py	/^from .utils.config import parse_config, get_mod_config_path, load_config, dump_config$/;"	i
parse_config	rqalpha/utils/config.py	/^def parse_config(config_args, config_path=None, click_type=True, source_code=None):$/;"	f
parse_date	rqalpha/utils/arg_checker.py	/^from dateutil.parser import parse as parse_date$/;"	i
parse_event	rqalpha/events.py	/^def parse_event(event_str):$/;"	f
parse_matching_type	rqalpha/mod/rqalpha_mod_sys_simulation/mod.py	/^    def parse_matching_type(me_str):$/;"	m	class:SimulationMod
parse_persist_mode	rqalpha/utils/config.py	/^def parse_persist_mode(persist_mode):$/;"	f
parse_requirements	setup.py	/^from pip.req import parse_requirements$/;"	i
parse_run_type	rqalpha/utils/config.py	/^def parse_run_type(rt_str):$/;"	f
parse_user_config_from_code	rqalpha/utils/config.py	/^def parse_user_config_from_code(config, source_code=None):$/;"	f
patch_system_exc	rqalpha/api/api_base.py	/^from ..utils.exception import patch_user_exc, patch_system_exc, EXC_EXT_NAME, RQInvalidArgument$/;"	i
patch_system_exc	rqalpha/utils/exception.py	/^def patch_system_exc(exc_val, force=False):$/;"	f
patch_user_exc	rqalpha/api/api_base.py	/^from ..utils.exception import patch_user_exc, patch_system_exc, EXC_EXT_NAME, RQInvalidArgument$/;"	i
patch_user_exc	rqalpha/api/api_stock.py	/^from ..utils.exception import patch_user_exc, RQInvalidArgument$/;"	i
patch_user_exc	rqalpha/execution_context.py	/^from .utils.exception import CustomException, patch_user_exc$/;"	i
patch_user_exc	rqalpha/main.py	/^from .utils.exception import CustomException, is_user_exc, patch_user_exc$/;"	i
patch_user_exc	rqalpha/mod/rqalpha_mod_sys_simulation/decider/slippage.py	/^from rqalpha.utils.exception import patch_user_exc$/;"	i
patch_user_exc	rqalpha/mod/rqalpha_mod_sys_simulation/mod.py	/^from rqalpha.utils.exception import patch_user_exc$/;"	i
patch_user_exc	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_event_source.py	/^from rqalpha.utils.exception import CustomException, CustomError, patch_user_exc$/;"	i
patch_user_exc	rqalpha/model/bar.py	/^from ..utils.exception import patch_user_exc$/;"	i
patch_user_exc	rqalpha/utils/config.py	/^from .exception import patch_user_exc$/;"	i
patch_user_exc	rqalpha/utils/exception.py	/^def patch_user_exc(exc_val, force=False):$/;"	f
patch_user_exc	rqalpha/utils/scheduler.py	/^from ..utils.exception import patch_user_exc, ModifyExceptionFromType$/;"	i
patch_user_exc	rqalpha/utils/strategy_loader_help.py	/^from .exception import patch_user_exc, CustomError, CustomException$/;"	i
path	docs/source/conf.py	/^from os import path$/;"	i
path	rqalpha/utils/i18n.py	/^import os.path$/;"	i
pd	rqalpha/api/api_base.py	/^import pandas as pd$/;"	i
pd	rqalpha/data/data_proxy.py	/^import pandas as pd$/;"	i
pd	rqalpha/data/dividend_store.py	/^import pandas as pd$/;"	i
pd	rqalpha/data/instrument_mixin.py	/^import pandas as pd$/;"	i
pd	rqalpha/data/trading_dates_mixin.py	/^import pandas as pd$/;"	i
pd	rqalpha/data/trading_dates_store.py	/^import pandas as pd$/;"	i
pd	rqalpha/data/yield_curve_store.py	/^import pandas as pd$/;"	i
pd	rqalpha/mod/rqalpha_mod_sys_analyser/__init__.py	/^    import pandas as pd$/;"	i
pd	rqalpha/mod/rqalpha_mod_sys_analyser/mod.py	/^import pandas as pd$/;"	i
pd	rqalpha/mod/rqalpha_mod_sys_analyser/report.py	/^import pandas as pd$/;"	i
pd	rqalpha/mod/rqalpha_mod_sys_stock_realtime/data_board.py	/^import pandas as pd$/;"	i
pd	rqalpha/utils/arg_checker.py	/^import pandas as pd$/;"	i
pd	rqalpha/utils/click_helper.py	/^import pandas as pd$/;"	i
pd	test.py	/^import pandas as pd$/;"	i
performance_path	test.py	/^            performance_path = sys.argv[2]$/;"	v
performance_path	test.py	/^    performance_path = None$/;"	v
persist	rqalpha/utils/persisit_helper.py	/^    def persist(self, *args):$/;"	m	class:PersistHelper
pformat	rqalpha/utils/config.py	/^from pprint import pformat$/;"	i
phase	rqalpha/execution_context.py	/^    def phase(cls):$/;"	m	class:ExecutionContext
pickle	rqalpha/core/global_var.py	/^import pickle$/;"	i
pickle	rqalpha/core/strategy_context.py	/^import pickle$/;"	i
pickle	rqalpha/data/instrument_store.py	/^import pickle$/;"	i
pickle	rqalpha/mod/rqalpha_mod_sys_analyser/mod.py	/^import pickle$/;"	i
pickle	test.py	/^import pickle$/;"	i
pip_main	rqalpha/__main__.py	/^        from pip import main as pip_main$/;"	i
pkgutil	rqalpha/__init__.py	/^import pkgutil$/;"	i
plot	rqalpha/api/api_base.py	/^def plot(series_name, value):$/;"	f
plot	rqalpha/mod/rqalpha_mod_sys_analyser/__init__.py	/^def plot(result_dict_file, show, plot_save_file):$/;"	f
plot_result	rqalpha/mod/rqalpha_mod_sys_analyser/__init__.py	/^    from .plot import plot_result$/;"	i
plot_result	rqalpha/mod/rqalpha_mod_sys_analyser/mod.py	/^            from .plot import plot_result$/;"	i
plot_result	rqalpha/mod/rqalpha_mod_sys_analyser/plot.py	/^def plot_result(result_dict, show_windows=True, savefile=None):$/;"	f
plt	rqalpha/mod/rqalpha_mod_sys_analyser/plot.py	/^    from matplotlib import rcParams, gridspec, ticker, image as mpimg, pyplot as plt$/;"	i
pnl	rqalpha/model/position/future_position.py	/^    def pnl(self):$/;"	m	class:FuturePosition
pnl	rqalpha/model/position/stock_position.py	/^    def pnl(self):$/;"	m	class:StockPosition
pop	rqalpha/execution_context.py	/^    def pop(self):$/;"	m	class:ContextStack
portfolio	rqalpha/core/strategy_context.py	/^    def portfolio(self):$/;"	m	class:StrategyContext
portfolio_value	rqalpha/model/portfolio.py	/^    def portfolio_value(self):$/;"	m	class:Portfolio
position_effect	rqalpha/model/order.py	/^    def position_effect(self):$/;"	m	class:Order
position_effect	rqalpha/model/trade.py	/^    def position_effect(self):$/;"	m	class:Trade
positions	rqalpha/model/account/base_account.py	/^    def positions(self):$/;"	m	class:BaseAccount
positions	rqalpha/model/portfolio.py	/^    def positions(self):$/;"	m	class:Portfolio
pprint	rqalpha/utils/__init__.py	/^import pprint$/;"	i
prepend_listener	rqalpha/events.py	/^    def prepend_listener(self, event, listener):$/;"	m	class:EventBus
prev_close	rqalpha/model/bar.py	/^    def prev_close(self):$/;"	m	class:BarObject
prev_close	rqalpha/model/snapshot.py	/^    def prev_close(self):$/;"	m	class:SnapshotObject
prev_close	rqalpha/model/tick.py	/^    def prev_close(self):$/;"	m	class:Tick
prev_settlement	rqalpha/model/bar.py	/^    def prev_settlement(self):$/;"	m	class:BarObject
prev_settlement	rqalpha/model/snapshot.py	/^    def prev_settlement(self):$/;"	m	class:SnapshotObject
prev_settlement	rqalpha/model/tick.py	/^    def prev_settlement(self):$/;"	m	class:Tick
price	rqalpha/model/order.py	/^    def price(self):$/;"	m	class:Order
price_change	rqalpha/api/ext.py	/^def price_change(stock):$/;"	f
project	docs/source/conf.py	/^project = 'rqalpha'$/;"	v
properties	rqalpha/model/order.py	/^from ..utils.repr import property_repr, properties$/;"	i
properties	rqalpha/model/trade.py	/^from ..utils.repr import property_repr, properties$/;"	i
properties	rqalpha/utils/repr.py	/^def properties(inst):$/;"	f
property_repr	rqalpha/core/strategy_context.py	/^from ..utils.repr import property_repr$/;"	i
property_repr	rqalpha/model/order.py	/^from ..utils.repr import property_repr, properties$/;"	i
property_repr	rqalpha/model/portfolio.py	/^from ..utils.repr import property_repr$/;"	i
property_repr	rqalpha/model/position/base_position.py	/^from ...utils.repr import property_repr$/;"	i
property_repr	rqalpha/model/trade.py	/^from ..utils.repr import property_repr, properties$/;"	i
property_repr	rqalpha/utils/repr.py	/^def property_repr(inst):$/;"	f
publish_event	rqalpha/events.py	/^    def publish_event(self, event):$/;"	m	class:EventBus
push	rqalpha/execution_context.py	/^    def push(self, obj):$/;"	m	class:ContextStack
pushed	rqalpha/execution_context.py	/^    def pushed(self, obj):$/;"	m	class:ContextStack
pygments_style	docs/source/conf.py	/^pygments_style = 'sphinx'$/;"	v
pytz	rqalpha/main.py	/^import pytz$/;"	i
quantity	rqalpha/model/order.py	/^    def quantity(self):$/;"	m	class:Order
quantity	rqalpha/model/position/stock_position.py	/^    def quantity(self):$/;"	m	class:StockPosition
quotation_worker	rqalpha/mod/rqalpha_mod_sys_stock_realtime/event_source.py	/^    def quotation_worker(self):$/;"	m	class:RealtimeEventSource
r	rqalpha/main.py	/^        r = requests.get(url, stream=True)$/;"	v
raise_not_valid_future_error	rqalpha/utils/arg_checker.py	/^    def raise_not_valid_future_error(self, func_name, arg_name, value):$/;"	m	class:ArgumentChecker
raise_not_valid_instrument_error	rqalpha/utils/arg_checker.py	/^    def raise_not_valid_instrument_error(self, func_name, arg_name, value):$/;"	m	class:ArgumentChecker
raise_not_valid_stock_error	rqalpha/utils/arg_checker.py	/^    def raise_not_valid_stock_error(self, func_name, arg_name, value):$/;"	m	class:ArgumentChecker
rcParams	rqalpha/mod/rqalpha_mod_sys_analyser/plot.py	/^    from matplotlib import rcParams, gridspec, ticker, image as mpimg, pyplot as plt$/;"	i
re	rqalpha/utils/__init__.py	/^import re$/;"	i
realized_pnl	rqalpha/model/account/future_account.py	/^    def realized_pnl(self):$/;"	m	class:FutureAccount
realized_pnl	rqalpha/model/position/future_position.py	/^    def realized_pnl(self):$/;"	m	class:FuturePosition
realtime_quotes_df	rqalpha/mod/rqalpha_mod_sys_stock_realtime/data_board.py	/^realtime_quotes_df = pd.DataFrame()$/;"	v
rebalance	tests/test_s_scheduler.py	/^def rebalance(context, bar_dict):$/;"	f
reduce	rqalpha/mod/rqalpha_mod_sys_stock_realtime/utils.py	/^from six.moves import reduce$/;"	i
register	rqalpha/utils/persisit_helper.py	/^    def register(self, key, obj):$/;"	m	class:PersistHelper
register_api	rqalpha/api/api_base.py	/^def register_api(name, func):$/;"	f
register_api	rqalpha/mod/rqalpha_mod_sys_funcat/mod.py	/^        from rqalpha.api.api_base import register_api$/;"	i
register_event	rqalpha/model/account/base_account.py	/^    def register_event(self):$/;"	m	class:BaseAccount
register_event	rqalpha/model/account/benchmark_account.py	/^    def register_event(self):$/;"	m	class:BenchmarkAccount
register_event	rqalpha/model/account/future_account.py	/^    def register_event(self):$/;"	m	class:FutureAccount
register_event	rqalpha/model/account/stock_account.py	/^    def register_event(self):$/;"	m	class:StockAccount
register_event	rqalpha/model/portfolio.py	/^    def register_event(self):$/;"	m	class:Portfolio
release	docs/source/conf.py	/^    release = '0.0'$/;"	v
release	docs/source/conf.py	/^    release = version$/;"	v
report	rqalpha/mod/rqalpha_mod_sys_analyser/__init__.py	/^def report(result_pickle_file_path, target_report_csv_path):$/;"	f
requests	rqalpha/main.py	/^import requests$/;"	i
requirements	setup.py	/^requirements = [str(ir.req) for ir in parse_requirements("requirements.txt", session=False)]$/;"	v
reset_frozen	rqalpha/model/position/stock_position.py	/^    def reset_frozen(self, frozen):$/;"	m	class:StockPosition
restore	rqalpha/utils/persisit_helper.py	/^    def restore(self):$/;"	m	class:PersistHelper
return_rate	rqalpha/utils/risk.py	/^    def return_rate(self):$/;"	m	class:Risk
rfn	rqalpha/mod/rqalpha_mod_sys_funcat/mod.py	/^        from numpy.lib import recfunctions as rfn$/;"	i
ricequant_exc	rqalpha/utils/exception.py	/^    ricequant_exc = const.EXC_TYPE.USER_EXC$/;"	v	class:RQUserError
risk_free_helper	rqalpha/data/data_proxy.py	/^from . import risk_free_helper$/;"	i
risk_free_helper	rqalpha/data/yield_curve_store.py	/^from . import risk_free_helper$/;"	i
rq_json	rqalpha/mod/rqalpha_mod_sys_stock_realtime/event_source.py	/^from rqalpha.utils import rq_json$/;"	i
rqalpha	docs/source/conf.py	/^    import rqalpha$/;"	i
rqalpha	rqalpha/mod/rqalpha_mod_sys_analyser/plot.py	/^import rqalpha$/;"	i
ruamel	rqalpha/__main__.py	/^import ruamel.yaml as yaml$/;"	i
ruamel	rqalpha/cmd.py	/^    import ruamel.yaml as yaml$/;"	i
ruamel	rqalpha/utils/config.py	/^import ruamel.yaml as yaml$/;"	i
run	rqalpha/__init__.py	/^def run(config, source_code=None):$/;"	f
run	rqalpha/__main__.py	/^def run(**kwargs):$/;"	f
run	rqalpha/core/executor.py	/^    def run(self, bar_dict):$/;"	m	class:Executor
run	rqalpha/main.py	/^def run(config, source_code=None):$/;"	f
run	test.py	/^    from rqalpha import run$/;"	i
run	test.py	/^from rqalpha import run$/;"	i
run_daily	rqalpha/utils/scheduler.py	/^    def run_daily(self, func, time_rule=None):$/;"	m	class:Scheduler
run_daily	rqalpha/utils/scheduler.py	/^def run_daily(func, time_rule=None):$/;"	f
run_info	rqalpha/core/strategy_context.py	/^    def run_info(self):$/;"	m	class:StrategyContext
run_monthly	rqalpha/utils/scheduler.py	/^    def run_monthly(self, func, tradingday=None, time_rule=None, **kwargs):$/;"	m	class:Scheduler
run_monthly	rqalpha/utils/scheduler.py	/^def run_monthly(func, tradingday=None, time_rule=None, **kwargs):$/;"	f
run_test	test.py	/^def run_test(filename):$/;"	f
run_type	rqalpha/core/strategy_context.py	/^    def run_type(self):$/;"	m	class:RunInfo
run_weekly	rqalpha/utils/scheduler.py	/^    def run_weekly(self, func, weekday=None, tradingday=None, time_rule=None):$/;"	m	class:Scheduler
run_weekly	rqalpha/utils/scheduler.py	/^def run_weekly(func, weekday=None, tradingday=None, time_rule=None):$/;"	f
run_when_strategy_not_hold	rqalpha/core/strategy.py	/^from ..utils import run_when_strategy_not_hold$/;"	i
run_when_strategy_not_hold	rqalpha/utils/__init__.py	/^def run_when_strategy_not_hold(func):$/;"	f
run_with_user_log_disabled	rqalpha/main.py	/^from .utils import create_custom_exception, run_with_user_log_disabled, scheduler as mod_scheduler$/;"	i
run_with_user_log_disabled	rqalpha/utils/__init__.py	/^def run_with_user_log_disabled(disabled=True):$/;"	f
safe_round	rqalpha/utils/__init__.py	/^def safe_round(value, ndigits=3):$/;"	f
scheduler	rqalpha/api/api_stock.py	/^from ..utils import scheduler$/;"	i
sector	rqalpha/api/api_base.py	/^def sector(code):$/;"	f
sector	rqalpha/data/instrument_mixin.py	/^    def sector(self, code):$/;"	m	class:InstrumentMixin
sector	tests/api/test_api_base.py	/^    from rqalpha.api import sector$/;"	i
sector_code	rqalpha/api/api_base.py	/^from ..model.instrument import Instrument, SectorCode as sector_code, IndustryCode as industry_code$/;"	i
sell_avg_holding_price	rqalpha/model/position/future_position.py	/^    def sell_avg_holding_price(self):$/;"	m	class:FuturePosition
sell_avg_open_price	rqalpha/model/position/future_position.py	/^    def sell_avg_open_price(self):$/;"	m	class:FuturePosition
sell_close	rqalpha/api/api_future.py	/^def sell_close(id_or_ins, amount, style=MarketOrder()):$/;"	f
sell_close	tests/api/test_api_future.py	/^    from rqalpha.api import sell_close, subscribe, get_order, ORDER_STATUS, POSITION_EFFECT, SIDE$/;"	i
sell_close_order_quantity	rqalpha/model/position/future_position.py	/^    def sell_close_order_quantity(self):$/;"	m	class:FuturePosition
sell_holding_list	rqalpha/model/position/future_position.py	/^    def sell_holding_list(self):$/;"	m	class:FuturePosition
sell_holding_pnl	rqalpha/model/position/future_position.py	/^    def sell_holding_pnl(self):$/;"	m	class:FuturePosition
sell_margin	rqalpha/model/account/future_account.py	/^    def sell_margin(self):$/;"	m	class:FutureAccount
sell_margin	rqalpha/model/position/future_position.py	/^    def sell_margin(self):$/;"	m	class:FuturePosition
sell_market_value	rqalpha/model/position/future_position.py	/^    def sell_market_value(self):$/;"	m	class:FuturePosition
sell_old_quantity	rqalpha/model/position/future_position.py	/^    def sell_old_quantity(self):$/;"	m	class:FuturePosition
sell_open	rqalpha/api/api_future.py	/^def sell_open(id_or_ins, amount, style=MarketOrder()):$/;"	f
sell_open	tests/api/test_api_future.py	/^    from rqalpha.api import sell_open, subscribe, get_order, ORDER_STATUS, POSITION_EFFECT, SIDE$/;"	i
sell_open_order_quantity	rqalpha/model/position/future_position.py	/^    def sell_open_order_quantity(self):$/;"	m	class:FuturePosition
sell_pnl	rqalpha/model/position/future_position.py	/^    def sell_pnl(self):$/;"	m	class:FuturePosition
sell_quantity	rqalpha/model/position/future_position.py	/^    def sell_quantity(self):$/;"	m	class:FuturePosition
sell_realized_pnl	rqalpha/model/position/future_position.py	/^    def sell_realized_pnl(self):$/;"	m	class:FuturePosition
sell_today_quantity	rqalpha/model/position/future_position.py	/^    def sell_today_quantity(self):$/;"	m	class:FuturePosition
sell_transaction_cost	rqalpha/model/position/future_position.py	/^    def sell_transaction_cost(self):$/;"	m	class:FuturePosition
sellable	rqalpha/model/position/stock_position.py	/^    def sellable(self):$/;"	m	class:StockPosition
set_bar_dict	rqalpha/environment.py	/^    def set_bar_dict(self, bar_dict):$/;"	m	class:Environment
set_broker	rqalpha/environment.py	/^    def set_broker(self, broker):$/;"	m	class:Environment
set_current_date	rqalpha/mod/rqalpha_mod_sys_funcat/mod.py	/^        from funcat.context import set_current_date$/;"	i
set_data_proxy	rqalpha/environment.py	/^    def set_data_proxy(self, data_proxy):$/;"	m	class:Environment
set_data_source	rqalpha/environment.py	/^    def set_data_source(self, data_source):$/;"	m	class:Environment
set_env	rqalpha/mod/__init__.py	/^    def set_env(self, environment):$/;"	m	class:ModHandler
set_event_source	rqalpha/environment.py	/^    def set_event_source(self, event_source):$/;"	m	class:Environment
set_exc	rqalpha/utils/exception.py	/^    def set_exc(self, exc_type, exc_val, exc_tb):$/;"	m	class:CustomError
set_frozen_price	rqalpha/model/order.py	/^    def set_frozen_price(self, value):$/;"	m	class:Order
set_global_vars	rqalpha/environment.py	/^    def set_global_vars(self, global_vars):$/;"	m	class:Environment
set_hold_strategy	rqalpha/environment.py	/^    def set_hold_strategy(self):$/;"	m	class:Environment
set_locale	rqalpha/main.py	/^from .utils.config import set_locale$/;"	i
set_locale	rqalpha/utils/config.py	/^def set_locale(lc):$/;"	f
set_locale	rqalpha/utils/i18n.py	/^    def set_locale(self, locales, trans_dir=None):$/;"	m	class:Localization
set_msg	rqalpha/utils/exception.py	/^    def set_msg(self, msg):$/;"	m	class:CustomError
set_persist_provider	rqalpha/environment.py	/^    def set_persist_provider(self, provider):$/;"	m	class:Environment
set_price_board	rqalpha/environment.py	/^    def set_price_board(self, price_board):$/;"	m	class:Environment
set_state	rqalpha/core/global_var.py	/^    def set_state(self, state):$/;"	m	class:GlobalVars
set_state	rqalpha/core/strategy_context.py	/^    def set_state(self, state):$/;"	m	class:StrategyContext
set_state	rqalpha/core/strategy_universe.py	/^    def set_state(self, state):$/;"	m	class:StrategyUniverse
set_state	rqalpha/interface.py	/^    def set_state(self, state):$/;"	m	class:Persistable
set_state	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_broker.py	/^    def set_state(self, state):$/;"	m	class:SimulationBroker
set_state	rqalpha/mod/rqalpha_mod_sys_stock_realtime/event_source.py	/^    def set_state(self, state):$/;"	m	class:RealtimeEventSource
set_state	rqalpha/model/account/base_account.py	/^    def set_state(self, state):$/;"	m	class:BaseAccount
set_state	rqalpha/model/account/future_account.py	/^    def set_state(self, state):$/;"	m	class:FutureAccount
set_state	rqalpha/model/account/stock_account.py	/^    def set_state(self, state):$/;"	m	class:StockAccount
set_state	rqalpha/model/order.py	/^    def set_state(self, d):$/;"	m	class:Order
set_state	rqalpha/model/portfolio.py	/^    def set_state(self, state):$/;"	m	class:Portfolio
set_state	rqalpha/model/position/base_position.py	/^    def set_state(self, state):$/;"	m	class:BasePosition
set_state	rqalpha/model/position/future_position.py	/^    def set_state(self, state):$/;"	m	class:FuturePosition
set_state	rqalpha/model/position/stock_position.py	/^    def set_state(self, state):$/;"	m	class:StockPosition
set_state	rqalpha/utils/persisit_helper.py	/^    def set_state(self, state):$/;"	m	class:CoreObjectsPersistProxy
set_state	rqalpha/utils/scheduler.py	/^    def set_state(self, state):$/;"	m	class:Scheduler
set_strategy_loader	rqalpha/environment.py	/^    def set_strategy_loader(self, strategy_loader):$/;"	m	class:Environment
set_trading_dates_	rqalpha/utils/scheduler.py	/^    def set_trading_dates_(cls, trading_dates):$/;"	m	class:Scheduler
set_user_context	rqalpha/utils/scheduler.py	/^    def set_user_context(self, ucontext):$/;"	m	class:Scheduler
settlement	rqalpha/model/bar.py	/^    def settlement(self):$/;"	m	class:BarObject
sharpe	rqalpha/utils/risk.py	/^    def sharpe(self):$/;"	m	class:Risk
short_selling_allowed	rqalpha/core/strategy_context.py	/^    def short_selling_allowed(self):$/;"	m	class:StrategyContext
short_selling_allowed	rqalpha/core/strategy_context.py	/^    def short_selling_allowed(self, value):$/;"	m	class:StrategyContext
shutil	rqalpha/__main__.py	/^import shutil$/;"	i
shutil	rqalpha/main.py	/^import shutil$/;"	i
shutil	rqalpha/utils/config.py	/^import shutil$/;"	i
side	rqalpha/model/order.py	/^    def side(self):$/;"	m	class:Order
side	rqalpha/model/trade.py	/^    def side(self):$/;"	m	class:Trade
signature	rqalpha/utils/scheduler.py	/^    from funcsigs import signature$/;"	i
signature	rqalpha/utils/scheduler.py	/^    from inspect import signature$/;"	i
six	rqalpha/__main__.py	/^import six$/;"	i
six	rqalpha/api/api_base.py	/^import six$/;"	i
six	rqalpha/api/api_future.py	/^import six$/;"	i
six	rqalpha/api/api_stock.py	/^import six$/;"	i
six	rqalpha/api/ext.py	/^import six$/;"	i
six	rqalpha/cmd.py	/^    import six$/;"	i
six	rqalpha/core/global_var.py	/^import six$/;"	i
six	rqalpha/core/strategy_context.py	/^import six$/;"	i
six	rqalpha/core/strategy_universe.py	/^import six$/;"	i
six	rqalpha/data/base_data_source.py	/^import six$/;"	i
six	rqalpha/data/data_proxy.py	/^import six$/;"	i
six	rqalpha/data/instrument_mixin.py	/^import six$/;"	i
six	rqalpha/main.py	/^import six$/;"	i
six	rqalpha/mod/rqalpha_mod_sys_analyser/mod.py	/^import six$/;"	i
six	rqalpha/mod/rqalpha_mod_sys_analyser/report.py	/^import six$/;"	i
six	rqalpha/mod/rqalpha_mod_sys_simulation/mod.py	/^import six$/;"	i
six	rqalpha/model/account/base_account.py	/^import six$/;"	i
six	rqalpha/model/account/future_account.py	/^import six$/;"	i
six	rqalpha/model/account/stock_account.py	/^import six$/;"	i
six	rqalpha/model/bar.py	/^import six$/;"	i
six	rqalpha/model/instrument.py	/^import six$/;"	i
six	rqalpha/model/portfolio.py	/^import six$/;"	i
six	rqalpha/model/snapshot.py	/^import six$/;"	i
six	rqalpha/utils/__init__.py	/^import six$/;"	i
six	rqalpha/utils/arg_checker.py	/^import six$/;"	i
six	rqalpha/utils/config.py	/^import six$/;"	i
six	rqalpha/utils/exception.py	/^import six$/;"	i
six	rqalpha/utils/logger.py	/^import six$/;"	i
six	rqalpha/utils/persisit_helper.py	/^import six$/;"	i
six	rqalpha/utils/py2.py	/^import six$/;"	i
six	rqalpha/utils/repr.py	/^import six$/;"	i
six	setup.py	/^import six$/;"	i
skip_suspended	rqalpha/mod/rqalpha_mod_sys_funcat/mod.py	/^            skip_suspended = False$/;"	v	class:FuncatAPIMod.start_up.RQAlphaDataBackend
slippage	rqalpha/core/strategy_context.py	/^    def slippage(self):$/;"	m	class:RunInfo
slippage	rqalpha/core/strategy_context.py	/^    def slippage(self):$/;"	m	class:StrategyContext
slippage	rqalpha/core/strategy_context.py	/^    def slippage(self, value):$/;"	m	class:StrategyContext
slots	rqalpha/utils/repr.py	/^def slots(inst):$/;"	f
slots_repr	rqalpha/utils/repr.py	/^def slots_repr(inst):$/;"	f
sold_quantity	rqalpha/model/position/stock_position.py	/^    def sold_quantity(self):$/;"	m	class:StockPosition
sold_value	rqalpha/model/position/stock_position.py	/^    def sold_value(self):$/;"	m	class:StockPosition
sortino	rqalpha/utils/risk.py	/^    def sortino(self):$/;"	m	class:Risk
source_suffix	docs/source/conf.py	/^source_suffix = '.rst'$/;"	v
sphinx_ok	docs/make.bat	/^:sphinx_ok$/;"	l
sphinx_python	docs/make.bat	/^:sphinx_python$/;"	l
sphinx_rtd_theme	docs/source/conf.py	/^import sphinx_rtd_theme$/;"	i
split_	rqalpha/model/position/stock_position.py	/^    def split_(self, ratio):$/;"	m	class:StockPosition
stack	rqalpha/execution_context.py	/^    stack = ContextStack()$/;"	v	class:ExecutionContext
stacks_length	rqalpha/utils/exception.py	/^    def stacks_length(self):$/;"	m	class:CustomError
start_date	rqalpha/core/strategy_context.py	/^    def start_date(self):$/;"	m	class:RunInfo
start_date	rqalpha/model/portfolio.py	/^    def start_date(self):$/;"	m	class:Portfolio
start_time	test.py	/^    start_time = datetime.now()$/;"	v
start_up	rqalpha/interface.py	/^    def start_up(self, env, mod_config):$/;"	m	class:AbstractMod
start_up	rqalpha/mod/__init__.py	/^    def start_up(self):$/;"	m	class:ModHandler
start_up	rqalpha/mod/rqalpha_mod_sys_analyser/mod.py	/^    def start_up(self, env, mod_config):$/;"	m	class:AnalyserMod
start_up	rqalpha/mod/rqalpha_mod_sys_funcat/mod.py	/^    def start_up(self, env, mod_config):$/;"	m	class:FuncatAPIMod
start_up	rqalpha/mod/rqalpha_mod_sys_progress/mod.py	/^    def start_up(self, env, mod_config):$/;"	m	class:ProgressMod
start_up	rqalpha/mod/rqalpha_mod_sys_risk/mod.py	/^    def start_up(self, env, mod_config):$/;"	m	class:RiskManagerMod
start_up	rqalpha/mod/rqalpha_mod_sys_simulation/mod.py	/^    def start_up(self, env, mod_config):$/;"	m	class:SimulationMod
start_up	rqalpha/mod/rqalpha_mod_sys_stock_realtime/mod.py	/^    def start_up(self, env, mod_config):$/;"	m	class:RealtimeTradeMod
static_unit_net_value	rqalpha/model/portfolio.py	/^    def static_unit_net_value(self):$/;"	m	class:Portfolio
status	rqalpha/model/order.py	/^    def status(self):$/;"	m	class:Order
std_log	rqalpha/utils/config.py	/^from .logger import user_log, user_system_log, system_log, std_log, user_std_handler$/;"	i
std_log	rqalpha/utils/logger.py	/^std_log = Logger("std_log")$/;"	v
stock_account	rqalpha/core/strategy_context.py	/^    def stock_account(self):$/;"	m	class:StrategyContext
stock_account	rqalpha/model/portfolio.py	/^    def stock_account(self):$/;"	m	class:Portfolio
stock_portfolio	rqalpha/core/strategy_context.py	/^    def stock_portfolio(self):$/;"	m	class:StrategyContext
stock_starting_cash	rqalpha/core/strategy_context.py	/^    def stock_starting_cash(self):$/;"	m	class:RunInfo
store	rqalpha/interface.py	/^    def store(self, key, value):$/;"	m	class:AbstractPersistProvider
store	rqalpha/utils/disk_persist_provider.py	/^    def store(self, key, value):$/;"	m	class:DiskPersistProvider
submit_order	rqalpha/interface.py	/^    def submit_order(self, order):$/;"	m	class:AbstractBroker
submit_order	rqalpha/mod/rqalpha_mod_sys_simulation/signal_broker.py	/^    def submit_order(self, order):$/;"	m	class:SignalBroker
submit_order	rqalpha/mod/rqalpha_mod_sys_simulation/simulation_broker.py	/^    def submit_order(self, order):$/;"	m	class:SimulationBroker
subscribe	rqalpha/api/api_base.py	/^def subscribe(id_or_symbols):$/;"	f
subscribe	tests/api/test_api_base.py	/^    from rqalpha.api import subscribe$/;"	i
subscribe	tests/api/test_api_base.py	/^    from rqalpha.api import subscribe, unsubscribe$/;"	i
subscribe	tests/api/test_api_future.py	/^    from rqalpha.api import buy_close, subscribe, get_order, ORDER_STATUS, POSITION_EFFECT, SIDE$/;"	i
subscribe	tests/api/test_api_future.py	/^    from rqalpha.api import buy_open, subscribe, get_order, ORDER_STATUS, POSITION_EFFECT, SIDE$/;"	i
subscribe	tests/api/test_api_future.py	/^    from rqalpha.api import sell_close, subscribe, get_order, ORDER_STATUS, POSITION_EFFECT, SIDE$/;"	i
subscribe	tests/api/test_api_future.py	/^    from rqalpha.api import sell_open, subscribe, get_order, ORDER_STATUS, POSITION_EFFECT, SIDE$/;"	i
suspended	rqalpha/model/bar.py	/^    def suspended(self):$/;"	m	class:BarObject
symbol	rqalpha/api/ext.py	/^def symbol(order_book_id, split=", "):$/;"	f
symbol	rqalpha/mod/rqalpha_mod_sys_funcat/mod.py	/^            def symbol(self, order_book_id):$/;"	m	class:FuncatAPIMod.start_up.RQAlphaDataBackend
symbol	rqalpha/model/bar.py	/^    def symbol(self):$/;"	m	class:BarObject
sys	docs/source/conf.py	/^import sys$/;"	i
sys	rqalpha/api/api_base.py	/^import sys$/;"	i
sys	rqalpha/main.py	/^import sys$/;"	i
sys	rqalpha/utils/arg_checker.py	/^import sys$/;"	i
sys	rqalpha/utils/py2.py	/^    import sys$/;"	i
sys	rqalpha/utils/strategy_loader_help.py	/^import sys$/;"	i
sys	test.py	/^import sys$/;"	i
system_log	rqalpha/core/global_var.py	/^from ..utils.logger import user_system_log, system_log, user_detail_log$/;"	i
system_log	rqalpha/core/strategy_context.py	/^from ..utils.logger import user_system_log, system_log$/;"	i
system_log	rqalpha/environment.py	/^from .utils.logger import system_log, user_log, user_detail_log$/;"	i
system_log	rqalpha/main.py	/^from .utils.logger import user_log, user_system_log, system_log, user_print, user_detail_log$/;"	i
system_log	rqalpha/mod/__init__.py	/^from rqalpha.utils.logger import system_log$/;"	i
system_log	rqalpha/mod/rqalpha_mod_sys_analyser/plot.py	/^from rqalpha.utils.logger import system_log$/;"	i
system_log	rqalpha/mod/rqalpha_mod_sys_stock_realtime/data_source.py	/^from rqalpha.utils.logger import system_log$/;"	i
system_log	rqalpha/mod/rqalpha_mod_sys_stock_realtime/event_source.py	/^from rqalpha.utils.logger import system_log$/;"	i
system_log	rqalpha/model/bar.py	/^from ..utils.logger import system_log$/;"	i
system_log	rqalpha/utils/__init__.py	/^    from ..utils.logger import system_log$/;"	i
system_log	rqalpha/utils/config.py	/^from .logger import user_log, user_system_log, system_log, std_log, user_std_handler$/;"	i
system_log	rqalpha/utils/i18n.py	/^from .logger import system_log$/;"	i
system_log	rqalpha/utils/logger.py	/^system_log = Logger("system_log")$/;"	v
system_log	rqalpha/utils/package_helper.py	/^from .logger import system_log$/;"	i
system_log	rqalpha/utils/persisit_helper.py	/^from .logger import system_log$/;"	i
system_log	test.py	/^from rqalpha.utils.logger import system_log$/;"	i
tabulate	rqalpha/__main__.py	/^        from tabulate import tabulate$/;"	i
talib	rqalpha/examples/IF_macd.py	/^import talib$/;"	i
talib	rqalpha/examples/golden_cross.py	/^import talib$/;"	i
talib	rqalpha/examples/macd.py	/^import talib$/;"	i
talib	rqalpha/examples/rsi.py	/^import talib$/;"	i
talib	rqalpha/examples/test_pt.py	/^import talib$/;"	i
talib	rqalpha/examples/turtle.py	/^import talib$/;"	i
talib	tests/test_f_macd.py	/^import talib$/;"	i
talib	tests/test_s_turtle.py	/^import talib$/;"	i
tar	rqalpha/main.py	/^    tar = tarfile.open(tmp, 'r:bz2')$/;"	v
tarfile	rqalpha/main.py	/^import tarfile$/;"	i
target_file	test.py	/^            target_file = sys.argv[1]$/;"	v
tax	rqalpha/model/trade.py	/^    def tax(self):$/;"	m	class:Trade
tear_down	rqalpha/interface.py	/^    def tear_down(self, code, exception=None):$/;"	m	class:AbstractMod
tear_down	rqalpha/mod/__init__.py	/^    def tear_down(self, *args):$/;"	m	class:ModHandler
tear_down	rqalpha/mod/rqalpha_mod_sys_analyser/mod.py	/^    def tear_down(self, code, exception=None):$/;"	m	class:AnalyserMod
tear_down	rqalpha/mod/rqalpha_mod_sys_funcat/mod.py	/^    def tear_down(self, code, exception=None):$/;"	m	class:FuncatAPIMod
tear_down	rqalpha/mod/rqalpha_mod_sys_progress/mod.py	/^    def tear_down(self, success, exception=None):$/;"	m	class:ProgressMod
tear_down	rqalpha/mod/rqalpha_mod_sys_risk/mod.py	/^    def tear_down(self, code, exception=None):$/;"	m	class:RiskManagerMod
tear_down	rqalpha/mod/rqalpha_mod_sys_simulation/mod.py	/^    def tear_down(self, code, exception=None):$/;"	m	class:SimulationMod
tear_down	rqalpha/mod/rqalpha_mod_sys_stock_realtime/mod.py	/^    def tear_down(self, code, exception=None):$/;"	m	class:RealtimeTradeMod
tempfile	rqalpha/main.py	/^import tempfile$/;"	i
templates_path	docs/source/conf.py	/^templates_path = ['_templates']$/;"	v
test_all_instruments	tests/api/test_api_base.py	/^def test_all_instruments():$/;"	f
test_all_instruments_code_new	test.py	/^        test_get_previous_trading_date_code_new, test_get_next_trading_date_code_new, test_get_dividend_code_new$/;"	i
test_all_instruments_code_new	tests/api/test_api_base.py	/^test_all_instruments_code_new = "".join(inspect.getsourcelines(test_all_instruments)[0])$/;"	v
test_api	test.py	/^def test_api():$/;"	f
test_buy_close	tests/api/test_api_future.py	/^def test_buy_close():$/;"	f
test_buy_close_code_new	test.py	/^        test_sell_close_code_new$/;"	i
test_buy_close_code_new	tests/api/test_api_future.py	/^test_buy_close_code_new = "".join(inspect.getsourcelines(test_buy_close)[0])$/;"	v
test_buy_open	tests/api/test_api_future.py	/^def test_buy_open():$/;"	f
test_buy_open_code_new	test.py	/^        test_sell_close_code_new$/;"	i
test_buy_open_code_new	tests/api/test_api_future.py	/^test_buy_open_code_new = "".join(inspect.getsourcelines(test_buy_open)[0])$/;"	v
test_cancel_order	tests/api/test_api_base.py	/^def test_cancel_order():$/;"	f
test_cancel_order_code_new	test.py	/^        test_get_previous_trading_date_code_new, test_get_next_trading_date_code_new, test_get_dividend_code_new$/;"	i
test_cancel_order_code_new	tests/api/test_api_base.py	/^test_cancel_order_code_new = "".join(inspect.getsourcelines(test_cancel_order)[0])$/;"	v
test_concept	tests/api/test_api_base.py	/^def test_concept():$/;"	f
test_concept_code_new	test.py	/^        test_get_previous_trading_date_code_new, test_get_next_trading_date_code_new, test_get_dividend_code_new$/;"	i
test_concept_code_new	tests/api/test_api_base.py	/^test_concept_code_new = "".join(inspect.getsourcelines(test_concept)[0])$/;"	v
test_get_dividend	tests/api/test_api_base.py	/^def test_get_dividend():$/;"	f
test_get_dividend_code_new	test.py	/^        test_get_previous_trading_date_code_new, test_get_next_trading_date_code_new, test_get_dividend_code_new$/;"	i
test_get_dividend_code_new	tests/api/test_api_base.py	/^test_get_dividend_code_new = "".join(inspect.getsourcelines(test_get_dividend)[0])$/;"	v
test_get_next_trading_date	tests/api/test_api_base.py	/^def test_get_next_trading_date():$/;"	f
test_get_next_trading_date_code_new	test.py	/^        test_get_previous_trading_date_code_new, test_get_next_trading_date_code_new, test_get_dividend_code_new$/;"	i
test_get_next_trading_date_code_new	tests/api/test_api_base.py	/^test_get_next_trading_date_code_new = "".join(inspect.getsourcelines(test_get_next_trading_date)[0])$/;"	v
test_get_open_order	tests/api/test_api_base.py	/^def test_get_open_order():$/;"	f
test_get_open_order_code_new	test.py	/^        test_get_previous_trading_date_code_new, test_get_next_trading_date_code_new, test_get_dividend_code_new$/;"	i
test_get_open_order_code_new	tests/api/test_api_base.py	/^test_get_open_order_code_new = "".join(inspect.getsourcelines(test_get_open_order)[0])$/;"	v
test_get_order	tests/api/test_api_base.py	/^def test_get_order():$/;"	f
test_get_order_code_new	test.py	/^        test_get_previous_trading_date_code_new, test_get_next_trading_date_code_new, test_get_dividend_code_new$/;"	i
test_get_order_code_new	tests/api/test_api_base.py	/^test_get_order_code_new = "".join(inspect.getsourcelines(test_get_order)[0])$/;"	v
test_get_previous_trading_date	tests/api/test_api_base.py	/^def test_get_previous_trading_date():$/;"	f
test_get_previous_trading_date_code_new	test.py	/^        test_get_previous_trading_date_code_new, test_get_next_trading_date_code_new, test_get_dividend_code_new$/;"	i
test_get_previous_trading_date_code_new	tests/api/test_api_base.py	/^test_get_previous_trading_date_code_new = "".join(inspect.getsourcelines(test_get_previous_trading_date)[0])$/;"	v
test_get_trading_dates	tests/api/test_api_base.py	/^def test_get_trading_dates():$/;"	f
test_get_trading_dates_code_new	test.py	/^        test_get_previous_trading_date_code_new, test_get_next_trading_date_code_new, test_get_dividend_code_new$/;"	i
test_get_trading_dates_code_new	tests/api/test_api_base.py	/^test_get_trading_dates_code_new = "".join(inspect.getsourcelines(test_get_trading_dates)[0])$/;"	v
test_get_yield_curve	tests/api/test_api_base.py	/^def test_get_yield_curve():$/;"	f
test_get_yield_curve_code_new	test.py	/^        test_get_previous_trading_date_code_new, test_get_next_trading_date_code_new, test_get_dividend_code_new$/;"	i
test_get_yield_curve_code_new	tests/api/test_api_base.py	/^test_get_yield_curve_code_new = "".join(inspect.getsourcelines(test_get_yield_curve)[0])$/;"	v
test_history_bars	tests/api/test_api_base.py	/^def test_history_bars():$/;"	f
test_history_bars_code_new	test.py	/^        test_get_previous_trading_date_code_new, test_get_next_trading_date_code_new, test_get_dividend_code_new$/;"	i
test_history_bars_code_new	tests/api/test_api_base.py	/^test_history_bars_code_new = "".join(inspect.getsourcelines(test_history_bars)[0])$/;"	v
test_industry	tests/api/test_api_base.py	/^def test_industry():$/;"	f
test_industry_code_new	test.py	/^        test_get_previous_trading_date_code_new, test_get_next_trading_date_code_new, test_get_dividend_code_new$/;"	i
test_industry_code_new	tests/api/test_api_base.py	/^test_industry_code_new = "".join(inspect.getsourcelines(test_industry)[0])$/;"	v
test_instruments_code	tests/api/test_api_base.py	/^def test_instruments_code():$/;"	f
test_instruments_code_new	test.py	/^        test_get_previous_trading_date_code_new, test_get_next_trading_date_code_new, test_get_dividend_code_new$/;"	i
test_instruments_code_new	tests/api/test_api_base.py	/^test_instruments_code_new = "".join(inspect.getsourcelines(test_instruments_code)[0])$/;"	v
test_order_lots	tests/api/test_api_stock.py	/^def test_order_lots():$/;"	f
test_order_lots_code_new	test.py	/^        test_order_percent_code_new, test_order_target_value_code_new$/;"	i
test_order_lots_code_new	tests/api/test_api_stock.py	/^test_order_lots_code_new = "".join(inspect.getsourcelines(test_order_lots)[0])$/;"	v
test_order_percent	tests/api/test_api_stock.py	/^def test_order_percent():$/;"	f
test_order_percent_code_new	test.py	/^        test_order_percent_code_new, test_order_target_value_code_new$/;"	i
test_order_percent_code_new	tests/api/test_api_stock.py	/^test_order_percent_code_new = "".join(inspect.getsourcelines(test_order_percent)[0])$/;"	v
test_order_shares	tests/api/test_api_stock.py	/^def test_order_shares():$/;"	f
test_order_shares_code_new	test.py	/^        test_order_percent_code_new, test_order_target_value_code_new$/;"	i
test_order_shares_code_new	tests/api/test_api_stock.py	/^test_order_shares_code_new = "".join(inspect.getsourcelines(test_order_shares)[0])$/;"	v
test_order_target_value	tests/api/test_api_stock.py	/^def test_order_target_value():$/;"	f
test_order_target_value_code_new	test.py	/^        test_order_percent_code_new, test_order_target_value_code_new$/;"	i
test_order_target_value_code_new	tests/api/test_api_stock.py	/^test_order_target_value_code_new = "".join(inspect.getsourcelines(test_order_target_value)[0])$/;"	v
test_order_value	tests/api/test_api_stock.py	/^def test_order_value():$/;"	f
test_order_value_code_new	test.py	/^        test_order_percent_code_new, test_order_target_value_code_new$/;"	i
test_order_value_code_new	tests/api/test_api_stock.py	/^test_order_value_code_new = "".join(inspect.getsourcelines(test_order_value)[0])$/;"	v
test_sector	tests/api/test_api_base.py	/^def test_sector():$/;"	f
test_sector_code_new	test.py	/^        test_get_previous_trading_date_code_new, test_get_next_trading_date_code_new, test_get_dividend_code_new$/;"	i
test_sector_code_new	tests/api/test_api_base.py	/^test_sector_code_new = "".join(inspect.getsourcelines(test_sector)[0])$/;"	v
test_sell_close	tests/api/test_api_future.py	/^def test_sell_close():$/;"	f
test_sell_close_code_new	test.py	/^        test_sell_close_code_new$/;"	i
test_sell_close_code_new	tests/api/test_api_future.py	/^test_sell_close_code_new = "".join(inspect.getsourcelines(test_sell_close)[0])$/;"	v
test_sell_open	tests/api/test_api_future.py	/^def test_sell_open():$/;"	f
test_sell_open_code_new	test.py	/^        test_sell_close_code_new$/;"	i
test_sell_open_code_new	tests/api/test_api_future.py	/^test_sell_open_code_new = "".join(inspect.getsourcelines(test_sell_open)[0])$/;"	v
test_strategy	test.py	/^def test_strategy():$/;"	f
test_subscribe	tests/api/test_api_base.py	/^def test_subscribe():$/;"	f
test_subscribe_code_new	test.py	/^        test_get_previous_trading_date_code_new, test_get_next_trading_date_code_new, test_get_dividend_code_new$/;"	i
test_subscribe_code_new	tests/api/test_api_base.py	/^test_subscribe_code_new = "".join(inspect.getsourcelines(test_subscribe)[0])$/;"	v
test_unsubscribe	tests/api/test_api_base.py	/^def test_unsubscribe():$/;"	f
test_unsubscribe_code_new	test.py	/^        test_get_previous_trading_date_code_new, test_get_next_trading_date_code_new, test_get_dividend_code_new$/;"	i
test_unsubscribe_code_new	tests/api/test_api_base.py	/^test_unsubscribe_code_new = "".join(inspect.getsourcelines(test_unsubscribe)[0])$/;"	v
test_update_universe	tests/api/test_api_base.py	/^def test_update_universe():$/;"	f
test_update_universe_code_new	test.py	/^        test_get_previous_trading_date_code_new, test_get_next_trading_date_code_new, test_get_dividend_code_new$/;"	i
test_update_universe_code_new	tests/api/test_api_base.py	/^test_update_universe_code_new = "".join(inspect.getsourcelines(test_update_universe)[0])$/;"	v
ticker	rqalpha/mod/rqalpha_mod_sys_analyser/plot.py	/^    from matplotlib import rcParams, gridspec, ticker, image as mpimg, pyplot as plt$/;"	i
time	rqalpha/examples/test_pt.py	/^import time$/;"	i
time	rqalpha/mod/rqalpha_mod_sys_stock_realtime/event_source.py	/^import time$/;"	i
time	rqalpha/mod/rqalpha_mod_sys_stock_realtime/utils.py	/^import time$/;"	i
time	rqalpha/model/order.py	/^import time$/;"	i
time	rqalpha/model/trade.py	/^import time$/;"	i
time	rqalpha/utils/default_future_info.py	/^from datetime import time$/;"	i
time_csv_file_path	test.py	/^            time_csv_file_path = os.path.join(TEST_OUT, "time.csv")$/;"	v
time_period1	rqalpha/utils/default_future_info.py	/^time_period1 = [$/;"	v
time_period2	rqalpha/utils/default_future_info.py	/^time_period2 = [$/;"	v
time_period3	rqalpha/utils/default_future_info.py	/^time_period3 = [$/;"	v
time_period4	rqalpha/utils/default_future_info.py	/^time_period4 = [$/;"	v
time_period5	rqalpha/utils/default_future_info.py	/^time_period5 = [$/;"	v
time_period6	rqalpha/utils/default_future_info.py	/^time_period6 = [$/;"	v
time_period7	rqalpha/utils/default_future_info.py	/^time_period7 = [$/;"	v
time_spend	test.py	/^            time_spend = (end_time - start_time).total_seconds()$/;"	v
tmp	rqalpha/main.py	/^    tmp = os.path.join(tempfile.gettempdir(), 'rq.bundle')$/;"	v
to_date	rqalpha/api/api_base.py	/^def to_date(date):$/;"	f
to_industry_code	rqalpha/api/api_base.py	/^from ..utils import to_industry_code, to_sector_name, unwrapper$/;"	i
to_industry_code	rqalpha/utils/__init__.py	/^def to_industry_code(s):$/;"	f
to_sector_name	rqalpha/api/api_base.py	/^from ..utils import to_industry_code, to_sector_name, unwrapper$/;"	i
to_sector_name	rqalpha/utils/__init__.py	/^def to_sector_name(s):$/;"	f
to_utf8	rqalpha/utils/config.py	/^from ..utils.py2 import to_utf8$/;"	i
to_utf8	rqalpha/utils/i18n.py	/^from .py2 import to_utf8$/;"	i
to_utf8	rqalpha/utils/logger.py	/^from .py2 import to_utf8, from_utf8$/;"	i
to_utf8	rqalpha/utils/py2.py	/^def to_utf8(string):$/;"	f
todo_include_todos	docs/source/conf.py	/^todo_include_todos = True$/;"	v
top	rqalpha/execution_context.py	/^    def top(self):$/;"	m	class:ContextStack
total_length	rqalpha/main.py	/^        total_length = int(r.headers.get('content-length'))$/;"	v
total_orders	rqalpha/model/position/stock_position.py	/^    def total_orders(self):$/;"	m	class:StockPosition
total_returns	rqalpha/model/portfolio.py	/^    def total_returns(self):$/;"	m	class:Portfolio
total_trades	rqalpha/model/position/stock_position.py	/^    def total_trades(self):$/;"	m	class:StockPosition
total_turnover	rqalpha/model/bar.py	/^    def total_turnover(self):$/;"	m	class:BarObject
total_turnover	rqalpha/model/snapshot.py	/^    def total_turnover(self):$/;"	m	class:SnapshotObject
total_turnover	rqalpha/model/tick.py	/^    def total_turnover(self):$/;"	m	class:Tick
total_value	rqalpha/model/account/base_account.py	/^    def total_value(self):$/;"	m	class:BaseAccount
total_value	rqalpha/model/account/future_account.py	/^    def total_value(self):$/;"	m	class:FutureAccount
total_value	rqalpha/model/account/stock_account.py	/^    def total_value(self):$/;"	m	class:StockAccount
total_value	rqalpha/model/portfolio.py	/^    def total_value(self):$/;"	m	class:Portfolio
traceback	rqalpha/utils/logger.py	/^import traceback$/;"	i
traceback	rqalpha/utils/strategy_loader_help.py	/^import traceback$/;"	i
tracking_error	rqalpha/utils/risk.py	/^    def tracking_error(self):$/;"	m	class:Risk
trade_id_gen	rqalpha/model/trade.py	/^    trade_id_gen = id_gen(int(time.time()))$/;"	v	class:Trade
trading_datetime	rqalpha/model/order.py	/^    def trading_datetime(self):$/;"	m	class:Order
trading_datetime	rqalpha/model/trade.py	/^    def trading_datetime(self):$/;"	m	class:Trade
transaction_cost	rqalpha/model/account/base_account.py	/^    def transaction_cost(self):$/;"	m	class:BaseAccount
transaction_cost	rqalpha/model/order.py	/^    def transaction_cost(self):$/;"	m	class:Order
transaction_cost	rqalpha/model/portfolio.py	/^    def transaction_cost(self):$/;"	m	class:Portfolio
transaction_cost	rqalpha/model/position/base_position.py	/^    def transaction_cost(self):$/;"	m	class:BasePosition
transaction_cost	rqalpha/model/position/future_position.py	/^    def transaction_cost(self):$/;"	m	class:FuturePosition
transaction_cost	rqalpha/model/position/stock_position.py	/^    def transaction_cost(self):$/;"	m	class:StockPosition
transaction_cost	rqalpha/model/trade.py	/^    def transaction_cost(self):$/;"	m	class:Trade
translation	rqalpha/utils/i18n.py	/^from gettext import NullTranslations, translation$/;"	i
ts	rqalpha/mod/rqalpha_mod_sys_stock_realtime/utils.py	/^    import tushare as ts$/;"	i
tushare_code_2_order_book_id	rqalpha/mod/rqalpha_mod_sys_stock_realtime/utils.py	/^def tushare_code_2_order_book_id(code):$/;"	f
type	rqalpha/mod/rqalpha_mod_sys_analyser/__init__.py	/^        type=click.Path(writable=True),$/;"	v
type	rqalpha/mod/rqalpha_mod_sys_simulation/__init__.py	/^        type=click.Choice(['current_bar', 'next_bar', 'last', 'best_own', 'best_counterparty']),$/;"	v
type	rqalpha/mod/rqalpha_mod_sys_simulation/__init__.py	/^        type=click.FLOAT,$/;"	v
type	rqalpha/model/account/base_account.py	/^    def type(self):$/;"	m	class:BaseAccount
type	rqalpha/model/account/future_account.py	/^    def type(self):$/;"	m	class:FutureAccount
type	rqalpha/model/account/stock_account.py	/^    def type(self):$/;"	m	class:StockAccount
type	rqalpha/model/order.py	/^    def type(self):$/;"	m	class:Order
type	rqalpha/model/position/base_position.py	/^    def type(self):$/;"	m	class:BasePosition
type	rqalpha/model/position/future_position.py	/^    def type(self):$/;"	m	class:FuturePosition
type	rqalpha/model/position/stock_position.py	/^    def type(self):$/;"	m	class:StockPosition
unfilled_quantity	rqalpha/model/order.py	/^    def unfilled_quantity(self):$/;"	m	class:Order
uninstall	rqalpha/__main__.py	/^    def uninstall(params):$/;"	f	function:mod
unit_net_value	rqalpha/model/bar.py	/^    def unit_net_value(self):$/;"	m	class:BarObject
unit_net_value	rqalpha/model/portfolio.py	/^    def unit_net_value(self):$/;"	m	class:Portfolio
units	rqalpha/model/portfolio.py	/^    def units(self):$/;"	m	class:Portfolio
universe	rqalpha/core/strategy_context.py	/^    def universe(self):$/;"	m	class:StrategyContext
unsubscribe	rqalpha/api/api_base.py	/^def unsubscribe(id_or_symbols):$/;"	f
unsubscribe	tests/api/test_api_base.py	/^    from rqalpha.api import subscribe, unsubscribe$/;"	i
unwrapper	rqalpha/api/api_base.py	/^from ..utils import to_industry_code, to_sector_name, unwrapper$/;"	i
unwrapper	rqalpha/utils/__init__.py	/^def unwrapper(func):$/;"	f
unwrapper	rqalpha/utils/arg_checker.py	/^from ..utils import unwrapper, INST_TYPE_IN_STOCK_ACCOUNT$/;"	i
update	rqalpha/core/strategy_universe.py	/^    def update(self, universe):$/;"	m	class:StrategyUniverse
update	rqalpha/mod/rqalpha_mod_sys_simulation/matcher.py	/^    def update(self, calendar_dt, trading_dt):$/;"	m	class:Matcher
update	rqalpha/utils/__init__.py	/^    def update(self, other):$/;"	m	class:RqAttrDict
update_bundle	rqalpha/__init__.py	/^def update_bundle(data_bundle_path=None, locale="zh_Hans_CN", confirm=True):$/;"	f
update_bundle	rqalpha/__main__.py	/^def update_bundle(data_bundle_path, locale):$/;"	f
update_bundle	rqalpha/main.py	/^def update_bundle(data_bundle_path=None, locale="zh_Hans_CN", confirm=True):$/;"	f
update_dt	rqalpha/model/bar.py	/^    def update_dt(self, dt):$/;"	m	class:BarMap
update_universe	rqalpha/api/api_base.py	/^def update_universe(id_or_symbols):$/;"	f
update_universe	rqalpha/environment.py	/^    def update_universe(self, universe):$/;"	m	class:Environment
update_universe	tests/api/test_api_base.py	/^    from rqalpha.api import update_universe, history_bars$/;"	i
url	rqalpha/main.py	/^        url = 'http:\/\/7xjci3.com1.z0.glb.clouddn.com\/bundles_v2\/rqbundle_%04d%02d%02d.tar.bz2' % ($/;"	v
url	setup.py	/^    url='https:\/\/github.com\/ricequant\/rqalpha',$/;"	v
user_context	rqalpha/core/strategy.py	/^    def user_context(self):$/;"	m	class:Strategy
user_detail_log	rqalpha/core/global_var.py	/^from ..utils.logger import user_system_log, system_log, user_detail_log$/;"	i
user_detail_log	rqalpha/environment.py	/^from .utils.logger import system_log, user_log, user_detail_log$/;"	i
user_detail_log	rqalpha/main.py	/^from .utils.logger import user_log, user_system_log, system_log, user_print, user_detail_log$/;"	i
user_detail_log	rqalpha/utils/logger.py	/^user_detail_log = Logger("user_detail_log")$/;"	v
user_log	rqalpha/environment.py	/^from .utils.logger import system_log, user_log, user_detail_log$/;"	i
user_log	rqalpha/main.py	/^from .utils.logger import user_log, user_system_log, system_log, user_print, user_detail_log$/;"	i
user_log	rqalpha/utils/__init__.py	/^    from .logger import user_log$/;"	i
user_log	rqalpha/utils/config.py	/^from .logger import user_log, user_system_log, system_log, std_log, user_std_handler$/;"	i
user_log	rqalpha/utils/logger.py	/^user_log = Logger("user_log")$/;"	v
user_module	rqalpha/main.py	/^    from . import user_module$/;"	i
user_print	rqalpha/main.py	/^from .utils.logger import user_log, user_system_log, system_log, user_print, user_detail_log$/;"	i
user_print	rqalpha/utils/logger.py	/^def user_print(*args, **kwargs):$/;"	f
user_std_handler	rqalpha/utils/config.py	/^from .logger import user_log, user_system_log, system_log, std_log, user_std_handler$/;"	i
user_std_handler	rqalpha/utils/logger.py	/^user_std_handler = ColorizedStderrHandler(bubble=True)$/;"	v
user_std_handler_log_formatter	rqalpha/utils/logger.py	/^def user_std_handler_log_formatter(record, handler):$/;"	f
user_system_log	rqalpha/api/api_future.py	/^from ..utils.logger import user_system_log$/;"	i
user_system_log	rqalpha/api/api_stock.py	/^from ..utils.logger import user_system_log$/;"	i
user_system_log	rqalpha/core/global_var.py	/^from ..utils.logger import user_system_log, system_log, user_detail_log$/;"	i
user_system_log	rqalpha/core/strategy.py	/^from ..utils.logger import user_system_log$/;"	i
user_system_log	rqalpha/core/strategy_context.py	/^from ..utils.logger import user_system_log, system_log$/;"	i
user_system_log	rqalpha/main.py	/^from .utils.logger import user_log, user_system_log, system_log, user_print, user_detail_log$/;"	i
user_system_log	rqalpha/mod/rqalpha_mod_sys_simulation/signal_broker.py	/^from rqalpha.utils.logger import user_system_log$/;"	i
user_system_log	rqalpha/model/account/future_account.py	/^from ...utils.logger import user_system_log$/;"	i
user_system_log	rqalpha/model/account/stock_account.py	/^from ...utils.logger import user_system_log$/;"	i
user_system_log	rqalpha/model/order.py	/^from ..utils.logger import user_system_log$/;"	i
user_system_log	rqalpha/utils/arg_checker.py	/^from ..utils.logger import user_system_log$/;"	i
user_system_log	rqalpha/utils/config.py	/^from .logger import user_log, user_system_log, system_log, std_log, user_std_handler$/;"	i
user_system_log	rqalpha/utils/logger.py	/^user_system_log = Logger("user_system_log")$/;"	v
value_percent	rqalpha/model/position/stock_position.py	/^    def value_percent(self):$/;"	m	class:StockPosition
values	rqalpha/model/bar.py	/^    def values(self):$/;"	m	class:BarMap
verify	rqalpha/utils/arg_checker.py	/^    def verify(self, func_name, value):$/;"	m	class:ArgumentChecker
verify_that	rqalpha/api/api_base.py	/^from ..utils.arg_checker import apply_rules, verify_that$/;"	i
verify_that	rqalpha/api/api_future.py	/^from ..utils.arg_checker import apply_rules, verify_that$/;"	i
verify_that	rqalpha/api/api_stock.py	/^from ..utils.arg_checker import apply_rules, verify_that$/;"	i
verify_that	rqalpha/utils/arg_checker.py	/^def verify_that(arg_name):$/;"	f
version	docs/source/conf.py	/^    version = '0.0'$/;"	v
version	docs/source/conf.py	/^    version = rqalpha.__main_version__$/;"	v
version	rqalpha/__main__.py	/^def version(**kwargs):$/;"	f
version	setup.py	/^    version = f.read().decode('ascii').strip()$/;"	v
version	setup.py	/^    version=version,$/;"	v
version_info	rqalpha/__init__.py	/^version_info = tuple(int(v) if v.isdigit() else v$/;"	v
version_info	rqalpha/__main__.py	/^    from rqalpha import version_info$/;"	i
volatility	rqalpha/utils/risk.py	/^    def volatility(self):$/;"	m	class:Risk
volume	rqalpha/model/bar.py	/^    def volume(self):$/;"	m	class:BarObject
volume	rqalpha/model/snapshot.py	/^    def volume(self):$/;"	m	class:SnapshotObject
volume	rqalpha/model/tick.py	/^    def volume(self):$/;"	m	class:Tick
vwap	rqalpha/model/bar.py	/^    def vwap(self, intervals, frequency='1d'):$/;"	m	class:BarObject
warnings	rqalpha/mod/rqalpha_mod_sys_funcat/mod.py	/^        import warnings$/;"	i
with_metaclass	rqalpha/interface.py	/^from six import with_metaclass$/;"	i
with_metaclass	rqalpha/mod/rqalpha_mod_sys_simulation/decider/commission.py	/^from six import with_metaclass$/;"	i
with_metaclass	rqalpha/mod/rqalpha_mod_sys_simulation/decider/slippage.py	/^from six import with_metaclass$/;"	i
with_metaclass	rqalpha/mod/rqalpha_mod_sys_simulation/decider/tax.py	/^from six import with_metaclass$/;"	i
wrapper	rqalpha/execution_context.py	/^            def wrapper(*args, **kwargs):$/;"	f	function:ExecutionContext.enforce_phase.decorator
wrapper	rqalpha/utils/__init__.py	/^    def wrapper(*args, **kwargs):$/;"	f	function:run_when_strategy_not_hold
wraps	rqalpha/api/api_base.py	/^from functools import wraps$/;"	i
wraps	rqalpha/execution_context.py	/^from functools import wraps$/;"	i
wraps	rqalpha/utils/arg_checker.py	/^from functools import wraps$/;"	i
write_csv	test.py	/^def write_csv(path, fields):$/;"	f
yaml	rqalpha/__main__.py	/^import ruamel.yaml as yaml$/;"	i
yaml	rqalpha/cmd.py	/^    import ruamel.yaml as yaml$/;"	i
yaml	rqalpha/utils/config.py	/^import ruamel.yaml as yaml$/;"	i
zip_safe	setup.py	/^    zip_safe=False,$/;"	v
